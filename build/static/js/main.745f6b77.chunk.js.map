{"version":3,"sources":["resources/images/down-arrow-black.svg","resources/images/down-arrow.svg","resources/images/close-black.svg","resources/images/warning.svg","resources/images/plus.svg","resources/images/minus.svg","resources/images/ellipsis.svg","resources/images/checked.svg","resources/images/unchecked.svg","resources/images/settings.svg","utils.ts","models/factory.ts","components/screens/home-screen.jsx","components/cards/info-card.jsx","components/cards/information/parties-card.jsx","components/list-items/party-list-item.jsx","components/controls/confirm-button.jsx","components/cards/party-card.jsx","components/controls/radial.jsx","components/controls/spin.jsx","components/cards/pc-card.jsx","components/panels/card-group.jsx","components/screens/parties-screen.jsx","components/cards/information/monster-library-card.jsx","components/list-items/monster-group-list-item.jsx","components/cards/monster-group-card.jsx","components/controls/expander.jsx","components/controls/dropdown.jsx","components/panels/ability-score-panel.jsx","components/panels/trait-panel.jsx","components/panels/traits-panel.jsx","components/panels/condition-panel.jsx","components/panels/conditions-panel.jsx","components/cards/monster-card.jsx","components/screens/monster-library-screen.jsx","components/cards/error-card.jsx","components/cards/filter-card.jsx","components/cards/wave-card.jsx","components/cards/information/encounter-builder-card.jsx","components/panels/difficulty-chart-panel.jsx","components/cards/encounter-card.jsx","components/list-items/encounter-list-item.jsx","components/screens/encounter-builder-screen.jsx","components/cards/information/map-folios-card.jsx","components/list-items/map-folio-list-item.jsx","components/cards/map-folio-card.jsx","components/panels/hit-point-gauge.jsx","components/panels/map-panel.jsx","components/cards/map-card.jsx","components/screens/map-folios-screen.jsx","components/cards/information/combat-manager-card.jsx","components/list-items/combat-list-item.jsx","components/screens/combat-manager-screen.jsx","components/controls/checkbox.jsx","components/controls/selector.jsx","components/modals/about-modal.jsx","components/modals/demographics-modal.jsx","components/modals/monster-editor-modal.jsx","components/cards/map-tile-card.jsx","components/modals/map-editor-modal.jsx","components/modals/combat-start-modal.jsx","components/controls/radio-group.jsx","components/modals/condition-modal.jsx","components/controls/titlebar.jsx","components/controls/navbar.jsx","components/dojo.jsx","index.js"],"names":["module","exports","__webpack_require__","p","monsterIdToGroup","match","filter","text","result","toLowerCase","split","forEach","token","indexOf","ex","console","log","guid","s4","Math","floor","random","toString","substring","sort","collection","a","b","aName","name","bName","modifier","score","mod","str","dieRoll","hitDieType","size","challenge","cr","experience","pcExperience","level","difficulty","traitType","type","nudgeChallenge","value","delta","conditionText","condition","conditionDurationText","combat","duration","saveType","toUpperCase","saves","count","saveDC","point","c","combatants","find","id","combatantID","displayName","rounds","getMonsterNames","encounter","monsterNames","slots","slot","names","push","monsterName","n","createMonster","utils","category","tag","alignment","abilityScores","dex","con","int","wis","cha","ac","hpMax","hpTemp","hitDice","damage","resist","vulnerable","immune","savingThrows","speed","skills","senses","languages","equipment","traits","conditionImmunities","createMapItem","x","y","width","height","terrain","SIZE_TYPES","CATEGORY_TYPES","TRAIT_TYPES","CONDITION_TYPES","TERRAIN_TYPES","HomeScreen","_this","this","monsters","props","library","length","react_default","createElement","className","href","target","rel","onClick","addOpenGameContent","e","error","React","Component","InfoCard","heading","getHeading","content","getContent","PartiesCard","action","parties","info_card_InfoCard","PartyListItem","partyName","party","pcs","pc","player","key","selected","setSelection","ConfirmButton","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pressed","setState","toggle","callback","_this2","src","warning","alt","details","perform","disabled","PartyCard","selection","activePCs","active","map","join","reduce","array","localeCompare","insightSummary","investigationSummary","perceptionSummary","insight","min","max","investigation","perception","passiveInsight","passiveInvestigation","passivePerception","placeholder","onChange","event","changeValue","addPC","sortPCs","confirm_button_ConfirmButton","removeParty","Radial","dir","dir2","stopPropagation","click","style","direction","showOut","showIn","showDiag","display","arrow","transform","padding","Spin","expanded","factor","nudgeValue","preventDefault","source","minusBtns","plusBtns","factors","onTouchEnd","touchEnd","reverse","minus","plus","infoWidth","label","PCCard","showDetails","options","mode","combatant","removeCombatant","radial_Radial","mapMove","spin_Spin","mapRemove","mapAdd","pending","defeated","current","endTurn","makeDefeated","makeCurrent","makeActive","commonStatBlock","race","classes","url","stats","imageStyle","toggleDetails","CardGroup","showCards","hidden","closeBtn","showClose","close","showToggle","toggleCards","cards","PartiesScreen","help","showHelp","parties_card_PartiesCard","party_list_item_PartyListItem","selectParty","activeCards","inactiveCards","party_card_PartyCard","pc_card_PCCard","removePC","addParty","card_group_CardGroup","MonsterLibraryCard","MonsterGroupListItem","groupName","group","matchGroup","monster","matchMonster","MonsterGroupCard","addMonster","sortMonsters","removeMonsterGroup","Expander","Dropdown","open","optionID","select","selectedText","title","selectedID","option","o","ellipsis","items","dropdown_DropdownOption","toggleOpen","DropdownOption","_this3","AbilityScorePanel","showAbilityScores","edit","toggleAbilityScores","TraitPanel","trait","usage","changeTrait","removeTrait","expander_Expander","template","copyTrait","TraitsPanel","actions","legendaryActions","lairActions","regionalEffects","item","trait_panel_TraitPanel","addTrait","ConditionPanel","description","nudgeConditionValue","editCondition","removeCondition","ConditionsPanel","conditions","condition_panel_ConditionPanel","changeConditionValue","conditionID","addCondition","MonsterCard","cloneName","showHP","hp","changeHP","temp","val","sizeAndType","align","wave","_this4","some","s","g","monsterGroupName","_this5","editMonster","setCloneName","cloneMonster","groupOptions","dropdown_Dropdown","moveToGroup","removeEncounterSlot","canAdd","monsterIsInWave","addEncounterSlot","waves","slotSection","ability_score_panel_AbilityScorePanel","traits_panel_TraitsPanel","nudgeDamage","heal","setDamage","conditions_panel_ConditionsPanel","MonsterLibraryScreen","monster_library_card_MonsterLibraryCard","listItems","showMonsterGroup","monster_group_list_item_MonsterGroupListItem","selectMonsterGroup","monster_group_card_MonsterGroupCard","monster_card_MonsterCard","groupID","removeMonster","addMonsterGroup","ErrorCard","FilterCard","showAll","sizeOptions","concat","factory","catOptions","cat","resetFilter","summary","challengeMin","challengeMax","toggleAll","WaveCard","removeWave","EncounterBuilderCard","encounters","DifficultyChartPanel","encounterID","partyID","monsterCount","monsterXp","getMonster","xpThresholds","diffSection","adjustedXp","xpEasy","xpMedium","xpHard","xpDeadly","adjustedDifficulty","small","getLeft","xp","getRight","left","right","EncounterCard","partyOptions","difficultySection","difficulty_chart_panel_DifficultyChartPanel","addWave","removeEncounter","EncounterListItem","encounterName","EncounterBuilderScreen","changeFilterValue","waveID","index","error_card_ErrorCard","libraryCards","filter_card_FilterCard","nudgeFilterValue","encounter_builder_card_EncounterBuilderCard","encounter_list_item_EncounterListItem","selectEncounter","encounterCards","encounter_card_EncounterCard","getMonsterCards","card","waveCards","wave_card_WaveCard","field","addEncounter","getLibrarySection","MapFoliosCard","mapFolios","MapFolioListItem","maps","mapFolio","MapFolioCard","addMap","removeMapFolio","HitPointGauge","hpBloodied","hpWidth","hpTempBar","hpTempWidth","MapPanel","border","arguments","undefined","dimensions","i","minX","maxX","minY","maxY","mapDimensions","sideLength","getSideLength","top","getMapDimensions","grid","pos","getPosition","map_panel_GridSquare","position","setSelectedItemID","onDoubleClick","addMapTile","tiles","map_panel_MapTile","tile","selectable","selectedItemID","thumbnail","tokens","map_panel_MapToken","simple","dragOverlay","showOverlay","yOver","xOver","posOver","overlay","gridSquareClicked","GridSquare","doubleClick","MapTile","MapToken","initials","hpGauge","altitudeBadge","conditionsBadge","hit_point_gauge_HitPointGauge","altitude","MapCard","map_panel_MapPanel","editMap","removeMap","MapFoliosScreen","map_folios_card_MapFoliosCard","folios","map_folio_list_item_MapFolioListItem","selectMapFolio","folio","folioCards","map_folio_card_MapFolioCard","map_card_MapCard","addMapFolio","CombatManagerCard","CombatListItem","combatName","timestamp","CombatManagerScreen","selectedTokenID","addingToMapID","setAddingToMapID","leftPaneContent","centrePaneContent","rightPaneContent","createCard","combat_manager_screen_PendingCombatantRow","setSelectedTokenID","combat_manager_screen_CombatantRow","pendingHelp","activeHelp","notifications","combat_manager_screen_Notification","notification","mapSection","addCombatantToMap","selectedCombatant","combat_manager_card_CombatManagerCard","combats","combat_list_item_CombatListItem","resumeEncounter","createCombat","Notification","saveSuccess","PendingCombatantRow","_this6","getInformationText","CombatantRow","_this7","notes","initiative","gauge","Checkbox","checked","unchecked","Selector","tabs","noBorder","itemsPerRow","rowCount","ceil","rowContents","rowIndex","selector_SelectorOption","rowSections","row","SelectorOption","AboutModal","showDev","devOptions","setSelected","checkbox_Checkbox","setOption","setValue","selector_Selector","resetAll","getDevSection","DemographicsModal","chart","demographics","allMonsters","buckets","maxBucketSize","bucket","bars","set","selectChart","MonsterEditorModal","page","showFilter","helpSection","subtype","sections","getHelpOptionsForPage","section","notify","setRandomValue","t","findIndex","splice","m","distinct","d","addedIDs","avg","getActionTypeName","plural","copy","JSON","parse","stringify","newValue","hpPerDie","getValueSection","getActionsSection","dataType","values","v","aValue","bValue","valueSections","rows","round","addRandomTrait","similar","filterContent","toggleMatch","geneSplice","toggleFilter","_this8","_this9","showMonsters","getMonsters","selector","setHelpSection","getHelpSection","monsterList","getFilterCard","margin","transition","setPage","MapTileCard","terrainOptions","moveMapItem","resizeMapItem","cloneMapItem","removeMapItem","MapEditorModal","selectedTileID","smallMapItem","bigMapItem","tools","map_tile_card_MapTileCard","setSelectedTileID","CombatStartModal","enc","f","folioID","mapID","w","encounterInitMode","slotID","partyContent","pcSections","setParty","encounterOptions","encounterContent","selectedEncounter","monsterSections","waveMonsters","setEncounter","folioOptions","selectMapSection","thumbnailSection","mapOptions","combatmapID","setMapID","setFolioID","waveOptions","waveContent","setWave","_this10","slotNames","inputs","combat_start_modal_MonsterName","changeName","setEncounterInitMode","leftSection","rightSection","getPartySection","getEncounterSection","getMapSection","getDifficultySection","getMonsterSection","getWaveSection","MonsterName","_this11","RadioGroup","radio_group_RadioGroupItem","itemID","RadioGroupItem","ConditionModal","conditionName","durationType","object","controls","saveOptions","pointOptions","combatantOptions","durations","radio_group_RadioGroup","setCondition","setDuration","Titlebar","blur","openHome","cog","openAbout","Navbar","partiesStyle","view","libraryStyle","encounterStyle","mapStyle","combatStyle","encountersEnabled","combatEnabled","setView","Dojo","selectedPartyID","selectedMonsterGroupID","selectedEncounterID","selectedMapFolioID","selectedCombatID","modal","data","json","window","localStorage","getItem","setItem","getParty","background","getMonsterGroup","sourceGroup","findMonster","original","clone","parseInt","challenge_rating","armor_class","hit_points","hit_dice","strength","dexterity","constitution","intelligence","wisdom","charisma","damage_resistances","damage_vulnerabilities","damage_immunities","condition_immunities","save","skill","special_abilities","rawTrait","buildTrait","legendary_actions","getMonsterGroupByName","openBracket","closeBracket","desc","getEncounter","sortEncounterSlots","slotContaimer","getMapFolio","issues","init","groupRoll","singleRoll","sortCombatants","getCombat","Date","toLocaleString","newRound","actor","conditionIndex","monsterGroup","obj","home_screen_HomeScreen","parties_screen_PartiesScreen","monster_library_screen_MonsterLibraryScreen","libraryFilter","openDemographics","encounter_builder_screen_EncounterBuilderScreen","addWaveToEncounter","map_folios_screen_MapFoliosScreen","combat_manager_screen_CombatManagerScreen","resumeCombat","closeNotification","openWaveModal","pauseCombat","endCombat","modalTitle","modalContent","modalAllowClose","modalAllowScroll","modalButtons","about_modal_AboutModal","demographics_modal_DemographicsModal","monster_editor_modal_MonsterEditorModal","toggleShowSimilarMonsters","saveMonster","closeModal","map_editor_modal_MapEditorModal","saveMap","combat_start_modal_CombatStartModal","startCombat","addWaveToCombat","condition_modal_ConditionModal","addConditionFromModal","editConditionFromModal","titlebar_Titlebar","navbar_Navbar","ReactDOM","render","dojo_Dojo","document","getElementById"],"mappings":"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","file":"static/js/main.745f6b77.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow-black.a2fc7a1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.697dc1af.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-black.7645a5b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.67a11a95.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.b60accff.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.7003cf50.svg\";","module.exports = __webpack_public_path__ + \"static/media/ellipsis.9650a20f.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.5cbd1005.svg\";","module.exports = __webpack_public_path__ + \"static/media/unchecked.3d4ae2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.042bb1c2.svg\";","var monsterIdToGroup = {};\r\n\r\nexport function getMonsterGroup(monster, library) {\r\n    var group = monsterIdToGroup[monster.id];\r\n\r\n    if (!group) {\r\n        library.forEach(g => {\r\n            if (!group) {\r\n                if (g.monsters.indexOf(monster) !== -1) {\r\n                    group = g;\r\n                }\r\n            }\r\n        });\r\n        monsterIdToGroup[monster.id] = group;\r\n    }\r\n\r\n    return group;\r\n}\r\n\r\nexport function match(filter, text) {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    var result = true;\r\n\r\n    try {\r\n        var tokens = filter.toLowerCase().split(' ');\r\n        tokens.forEach(token => {\r\n            if (text.toLowerCase().indexOf(token) === -1) {\r\n                result = false;\r\n            }\r\n        });\r\n    } catch (ex) {\r\n        console.log(ex);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function guid() {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nexport function sort(collection) {\r\n    collection.sort((a, b) => {\r\n        var aName = a.name.toLowerCase();\r\n        var bName = b.name.toLowerCase();\r\n        if (aName < bName) return -1;\r\n        if (aName > bName) return 1;\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function sortByValue(collection) {\r\n    collection.sort((a, b) => {\r\n        if (a.value < b.value) return -1;\r\n        if (a.value > b.value) return 1;\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function sortByCount(collection) {\r\n    collection.sort((a, b) => {\r\n        if (a.count < b.count) return 1;\r\n        if (a.count > b.count) return -1;\r\n\r\n        var aValue = a.value.toLowerCase();\r\n        var bValue = b.value.toLowerCase();\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function modifier(score: number) {\r\n    var mod = Math.floor((score - 10) / 2);\r\n    var str = mod.toString();\r\n    if (mod >= 0) {\r\n        str = '+' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function dieRoll() {\r\n    return Math.floor(Math.random() * 20) + 1;\r\n}\r\n\r\nexport function miniSize(size) {\r\n    switch (size) {\r\n        case 'tiny': return 1;\r\n        case 'small': return 1;\r\n        case 'medium': return 1;\r\n        case 'large': return 2;\r\n        case 'huge': return 3;\r\n        case 'gargantuan': return 4;\r\n        default: return 1;\r\n    }\r\n}\r\n\r\nexport function hitDieType(size) {\r\n    switch (size) {\r\n        case 'tiny': return 4;\r\n        case 'small': return 6;\r\n        case 'medium': return 8;\r\n        case 'large': return 10;\r\n        case 'huge': return 12;\r\n        case 'gargantuan': return 20;\r\n        default: return 8;\r\n    }\r\n}\r\n\r\nexport function challenge(cr) {\r\n    switch (cr) {\r\n        case 0.125: return '1/8';\r\n        case 0.25: return '1/4';\r\n        case 0.5: return '1/2';\r\n        default: return cr;\r\n    }\r\n}\r\n\r\nexport function parseChallenge(cr) {\r\n    switch (cr) {\r\n        case '1/8': return 0.125;\r\n        case '1/4': return 0.25;\r\n        case '1/2': return 0.5;\r\n        default: return parseInt(cr);\r\n    }\r\n}\r\n\r\nexport function challengeDetails() {\r\n    var result: any[] = [];\r\n\r\n    result.push({ cr: 0,        ac: 13,       hpMin: 1, hpMax: 6,       attack: 3,  dmgMin: 0,   dmgMax: 1,   save: 13 });\r\n    result.push({ cr: 0.125,    ac: 13,       hpMin: 7, hpMax: 35,      attack: 3,  dmgMin: 2,   dmgMax: 3,   save: 13 });\r\n    result.push({ cr: 0.25,     ac: 13,       hpMin: 36, hpMax: 49,     attack: 3,  dmgMin: 4,   dmgMax: 5,   save: 13 });\r\n    result.push({ cr: 0.5,      ac: 13,       hpMin: 50, hpMax: 70,     attack: 3,  dmgMin: 6,   dmgMax: 8,   save: 13 });\r\n    result.push({ cr: 1,        ac: 13,       hpMin: 71, hpMax: 85,     attack: 3,  dmgMin: 9,   dmgMax: 14,  save: 13 });\r\n    result.push({ cr: 2,        ac: 13,       hpMin: 86, hpMax: 100,    attack: 3,  dmgMin: 15,  dmgMax: 20,  save: 13 });\r\n    result.push({ cr: 3,        ac: 13,       hpMin: 101, hpMax: 115,   attack: 4,  dmgMin: 21,  dmgMax: 26,  save: 13 });\r\n    result.push({ cr: 4,        ac: 14,       hpMin: 116, hpMax: 130,   attack: 5,  dmgMin: 27,  dmgMax: 32,  save: 14 });\r\n    result.push({ cr: 5,        ac: 15,       hpMin: 131, hpMax: 145,   attack: 6,  dmgMin: 33,  dmgMax: 38,  save: 15 });\r\n    result.push({ cr: 6,        ac: 15,       hpMin: 146, hpMax: 160,   attack: 6,  dmgMin: 39,  dmgMax: 44,  save: 15 });\r\n    result.push({ cr: 7,        ac: 15,       hpMin: 161, hpMax: 175,   attack: 6,  dmgMin: 45,  dmgMax: 50,  save: 15 });\r\n    result.push({ cr: 8,        ac: 16,       hpMin: 176, hpMax: 190,   attack: 7,  dmgMin: 51,  dmgMax: 56,  save: 16 });\r\n    result.push({ cr: 9,        ac: 16,       hpMin: 191, hpMax: 205,   attack: 7,  dmgMin: 57,  dmgMax: 62,  save: 16 });\r\n    result.push({ cr: 10,       ac: 17,       hpMin: 206, hpMax: 220,   attack: 7,  dmgMin: 63,  dmgMax: 68,  save: 16 });\r\n    result.push({ cr: 11,       ac: 17,       hpMin: 221, hpMax: 235,   attack: 8,  dmgMin: 69,  dmgMax: 74,  save: 17 });\r\n    result.push({ cr: 12,       ac: 17,       hpMin: 236, hpMax: 250,   attack: 8,  dmgMin: 75,  dmgMax: 80,  save: 17 });\r\n    result.push({ cr: 13,       ac: 18,       hpMin: 251, hpMax: 265,   attack: 8,  dmgMin: 81,  dmgMax: 86,  save: 18 });\r\n    result.push({ cr: 14,       ac: 18,       hpMin: 266, hpMax: 280,   attack: 8,  dmgMin: 87,  dmgMax: 92,  save: 18 });\r\n    result.push({ cr: 15,       ac: 18,       hpMin: 281, hpMax: 295,   attack: 8,  dmgMin: 93,  dmgMax: 98,  save: 18 });\r\n    result.push({ cr: 16,       ac: 18,       hpMin: 296, hpMax: 310,   attack: 9,  dmgMin: 99,  dmgMax: 104, save: 18 });\r\n    result.push({ cr: 17,       ac: 19,       hpMin: 311, hpMax: 325,   attack: 10, dmgMin: 105, dmgMax: 110, save: 19 });\r\n    result.push({ cr: 18,       ac: 19,       hpMin: 326, hpMax: 340,   attack: 10, dmgMin: 111, dmgMax: 116, save: 19 });\r\n    result.push({ cr: 19,       ac: 19,       hpMin: 341, hpMax: 355,   attack: 10, dmgMin: 117, dmgMax: 122, save: 19 });\r\n    result.push({ cr: 20,       ac: 19,       hpMin: 356, hpMax: 400,   attack: 10, dmgMin: 123, dmgMax: 140, save: 19 });\r\n    result.push({ cr: 21,       ac: 19,       hpMin: 401, hpMax: 445,   attack: 11, dmgMin: 141, dmgMax: 158, save: 20 });\r\n    result.push({ cr: 22,       ac: 19,       hpMin: 446, hpMax: 490,   attack: 11, dmgMin: 159, dmgMax: 176, save: 20 });\r\n    result.push({ cr: 23,       ac: 19,       hpMin: 491, hpMax: 535,   attack: 11, dmgMin: 177, dmgMax: 194, save: 20 });\r\n    result.push({ cr: 24,       ac: 19,       hpMin: 536, hpMax: 580,   attack: 12, dmgMin: 195, dmgMax: 212, save: 21 });\r\n    result.push({ cr: 25,       ac: 19,       hpMin: 581, hpMax: 625,   attack: 12, dmgMin: 213, dmgMax: 230, save: 21 });\r\n    result.push({ cr: 26,       ac: 19,       hpMin: 626, hpMax: 670,   attack: 12, dmgMin: 231, dmgMax: 248, save: 21 });\r\n    result.push({ cr: 27,       ac: 19,       hpMin: 671, hpMax: 715,   attack: 13, dmgMin: 249, dmgMax: 266, save: 22 });\r\n    result.push({ cr: 28,       ac: 19,       hpMin: 716, hpMax: 760,   attack: 13, dmgMin: 267, dmgMax: 284, save: 22 });\r\n    result.push({ cr: 29,       ac: 19,       hpMin: 761, hpMax: 805,   attack: 13, dmgMin: 285, dmgMax: 302, save: 22 });\r\n    result.push({ cr: 30,       ac: 19,       hpMin: 806, hpMax: 850,   attack: 14, dmgMin: 303, dmgMax: 320, save: 23 });\r\n\r\n    return result;\r\n}\r\n\r\nexport function experience(cr) {\r\n    switch (cr) {\r\n        case 0: return 10;\r\n        case 0.125: return 25;\r\n        case 0.25: return 50;\r\n        case 0.5: return 100;\r\n        case 1: return 200;\r\n        case 2: return 450;\r\n        case 3: return 700;\r\n        case 4: return 1100;\r\n        case 5: return 1800;\r\n        case 6: return 2300;\r\n        case 7: return 2900;\r\n        case 8: return 3900;\r\n        case 9: return 5000;\r\n        case 10: return 5900;\r\n        case 11: return 7200;\r\n        case 12: return 8400;\r\n        case 13: return 10000;\r\n        case 14: return 11500;\r\n        case 15: return 13000;\r\n        case 16: return 15000;\r\n        case 17: return 18000;\r\n        case 18: return 20000;\r\n        case 19: return 22000;\r\n        case 20: return 25000;\r\n        case 21: return 33000;\r\n        case 22: return 41000;\r\n        case 23: return 50000;\r\n        case 24: return 62000;\r\n        case 30: return 155000;\r\n        default: return 0;\r\n    }\r\n}\r\n\r\nexport function experienceFactor(count) {\r\n    switch (count) {\r\n        case 0:\r\n            return 0;\r\n        case 1:\r\n            return 1;\r\n        case 2:\r\n            return 1.5;\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n            return 2;\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n            return 2.5;\r\n        case 11:\r\n        case 12:\r\n        case 13:\r\n        case 14:\r\n            return 3;\r\n        default:\r\n            return 4;\r\n    }\r\n}\r\n\r\nexport function pcExperience(level, difficulty) {\r\n    switch (difficulty) {\r\n        case 'easy': {\r\n                switch (level) {\r\n                case 1: return 25;\r\n                case 2: return 50;\r\n                case 3: return 75;\r\n                case 4: return 125;\r\n                case 5: return 250;\r\n                case 6: return 300;\r\n                case 7: return 350;\r\n                case 8: return 450;\r\n                case 9: return 550;\r\n                case 10: return 600;\r\n                case 11: return 800;\r\n                case 12: return 1000;\r\n                case 13: return 1100;\r\n                case 14: return 1250;\r\n                case 15: return 1400;\r\n                case 16: return 1600;\r\n                case 17: return 2000;\r\n                case 18: return 2100;\r\n                case 19: return 2400;\r\n                case 20: return 2800;\r\n                }\r\n            }\r\n            break;\r\n        case 'medium': {\r\n                switch (level) {\r\n                case 1: return 50;\r\n                case 2: return 100;\r\n                case 3: return 150;\r\n                case 4: return 250;\r\n                case 5: return 500;\r\n                case 6: return 600;\r\n                case 7: return 750;\r\n                case 8: return 900;\r\n                case 9: return 1100;\r\n                case 10: return 1200;\r\n                case 11: return 1600;\r\n                case 12: return 2000;\r\n                case 13: return 2200;\r\n                case 14: return 2500;\r\n                case 15: return 2800;\r\n                case 16: return 3200;\r\n                case 17: return 3900;\r\n                case 18: return 4200;\r\n                case 19: return 4900;\r\n                case 20: return 5700;\r\n                }\r\n            }\r\n            break;\r\n        case 'hard': {\r\n            switch (level) {\r\n                case 1: return 75;\r\n                case 2: return 150;\r\n                case 3: return 225;\r\n                case 4: return 375;\r\n                case 5: return 750;\r\n                case 6: return 900;\r\n                case 7: return 1100;\r\n                case 8: return 1400;\r\n                case 9: return 1600;\r\n                case 10: return 1900;\r\n                case 11: return 2400;\r\n                case 12: return 3000;\r\n                case 13: return 3400;\r\n                case 14: return 3800;\r\n                case 15: return 4300;\r\n                case 16: return 4800;\r\n                case 17: return 5900;\r\n                case 18: return 6300;\r\n                case 19: return 7300;\r\n                case 20: return 8500;\r\n                }\r\n            }\r\n            break;\r\n        case 'deadly': {\r\n            switch (level) {\r\n                case 1: return 100;\r\n                case 2: return 200;\r\n                case 3: return 400;\r\n                case 4: return 500;\r\n                case 5: return 1100;\r\n                case 6: return 1400;\r\n                case 7: return 1700;\r\n                case 8: return 2100;\r\n                case 9: return 2400;\r\n                case 10: return 2800;\r\n                case 11: return 3600;\r\n                case 12: return 4500;\r\n                case 13: return 5100;\r\n                case 14: return 5700;\r\n                case 15: return 6400;\r\n                case 16: return 7200;\r\n                case 17: return 8800;\r\n                case 18: return 9500;\r\n                case 19: return 10900;\r\n                case 20: return 12700;\r\n                }\r\n            }\r\n            break;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\nexport function traitType(type) {\r\n    switch (type) {\r\n        case 'trait':\r\n            return 'trait';\r\n        case 'action':\r\n            return 'action';\r\n        case 'legendary':\r\n            return 'legendary action';\r\n        case 'lair':\r\n            return 'lair action';\r\n        case 'regional':\r\n            return 'regional effect';\r\n        default:\r\n            return type;\r\n    }\r\n}\r\n\r\nexport function nudgeChallenge(value, delta) {\r\n    var result: number = 0;\r\n\r\n    switch (value) {\r\n        case 0:\r\n            if (delta === -1) {\r\n                result = 0;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.125;\r\n            }\r\n            break;\r\n        case 0.125:\r\n            if (delta === -1) {\r\n                result = 0;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.25;\r\n            }\r\n            break;\r\n        case 0.25:\r\n            if (delta === -1) {\r\n                result = 0.125;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.5;\r\n            }\r\n            break;\r\n        case 0.5:\r\n            if (delta === -1) {\r\n                result = 0.25;\r\n            }\r\n            if (delta === +1) {\r\n                result = 1;\r\n            }\r\n            break;\r\n        case 1:\r\n            if (delta === -1) {\r\n                result = 0.5;\r\n            }\r\n            if (delta === +1) {\r\n                result = 2;\r\n            }\r\n            break;\r\n        default:\r\n            result = value + delta;\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function conditionText(condition) {\r\n    switch (condition.name) {\r\n        case 'blinded':\r\n            return [\r\n                'a blinded creature can’t see and automatically fails any ability check that requires sight',\r\n                'attack rolls against the creature have advantage, and the creature’s attack rolls have disadvantage'\r\n            ];\r\n        case 'charmed':\r\n            return [\r\n                'a charmed creature can’t attack the charmer or target the charmer with harmful abilities or magical effects',\r\n                'the charmer has advantage on any ability check to interact socially with the creature'\r\n            ];\r\n        case 'deafened':\r\n            return [\r\n                'a deafened creature can’t hear and automatically fails any ability check that requires hearing.'\r\n            ];\r\n        case 'exhaustion': {\r\n            switch (condition.level) {\r\n            case 1:\r\n                return [\r\n                    'disadvantage on ability checks'\r\n                ];\r\n            case 2:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved'\r\n                ];\r\n            case 3:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws'\r\n                ];\r\n            case 4:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved'\r\n                ];\r\n            case 5:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved',\r\n                    'speed reduced to 0'\r\n                ];\r\n            case 6:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved',\r\n                    'speed reduced to 0',\r\n                    'death'\r\n                ];\r\n            default:\r\n                return [];\r\n            }\r\n        }\r\n        case 'frightened':\r\n            return [\r\n                'a frightened creature has disadvantage on ability checks and attack rolls while the source of its fear is within line of sight',\r\n                'the creature can’t willingly move closer to the source of its fear'\r\n            ];\r\n        case 'grappled':\r\n            return [\r\n                'a grappled creature’s speed becomes 0, and it can’t benefit from any bonus to its speed',\r\n                'the condition ends if the grappler is incapacitated',\r\n                'the condition also ends if an effect removes the grappled creature from the reach of the grappler or grappling effect'\r\n            ];\r\n        case 'incapacitated':\r\n            return [\r\n                'an incapacitated creature can’t take actions or reactions'\r\n            ];\r\n        case 'invisible':\r\n            return [\r\n                'an invisible creature is impossible to see without the aid of magic or a special sense',\r\n                'for the purpose of hiding, the creature is heavily obscured',\r\n                'the creature’s location can be detected by any noise it makes or any tracks it leaves',\r\n                'attack rolls against the creature have disadvantage, and the creature’s attack rolls have advantage'\r\n            ];\r\n        case 'paralyzed':\r\n            return [\r\n                'a paralyzed creature is incapacitated (can’t take actions or reactions) and can’t move or speak',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage',\r\n                'any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature'\r\n            ];\r\n        case 'petrified':\r\n            return [\r\n                'a petrified creature is transformed, along with any nonmagical object it is wearing or carrying, into a solid inanimate substance (usually stone)',\r\n                'its weight increases by a factor of ten, and it ceases aging',\r\n                'the creature is incapacitated (can’t take actions or reactions), can’t move or speak, and is unaware of its surroundings',\r\n                'attack rolls against the creature have advantage',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'the creature has resistance to all damage',\r\n                'the creature is immune to poison and disease, although a poison or disease already in its system is suspended, not neutralized'\r\n            ];\r\n        case 'poisoned':\r\n            return [\r\n                'a poisoned creature has disadvantage on attack rolls and ability checks'\r\n            ];\r\n        case 'prone':\r\n            return [\r\n                'a prone creature’s only movement option is to crawl, unless it stands up and thereby ends the condition',\r\n                'the creature has disadvantage on attack rolls',\r\n                'an attack roll against the creature has advantage if the attacker is Within 5 feet of the creature; otherwise, the attack roll has disadvantage'\r\n            ];\r\n        case 'restrained':\r\n            return [\r\n                'a restrained creature’s speed becomes 0, and it can’t benefit from any bonus to its speed',\r\n                'attack rolls against the creature have advantage, and the creature’s attack rolls have disadvantage',\r\n                'the creature has disadvantage on dexterity saving throws'\r\n            ];\r\n        case 'stunned':\r\n            return [\r\n                'a stunned creature is incapacitated (can’t take actions or reactions), can’t move, and can speak only falteringly',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage'\r\n            ];\r\n        case 'unconscious':\r\n            return [\r\n                'an unconscious creature is incapacitated (can’t take actions or reactions), can’t move or speak, and is unaware of its surroundings',\r\n                'the creature drops whatever its holding and falls prone',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage',\r\n                'any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature'\r\n            ];\r\n        case \"custom\":\r\n            return [];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n\r\nexport function conditionDurationText(condition, combat) {\r\n    if (condition.duration !== null) {\r\n        switch (condition.duration.type) {\r\n            case \"saves\":\r\n                var saveType = condition.duration.saveType;\r\n                if (saveType !== \"death\") {\r\n                    saveType = saveType.toUpperCase();\r\n                }\r\n                var saves = condition.duration.count > 1 ? \"saves\" : \"save\";\r\n                return \"until you make \" + condition.duration.count + \" \" + saveType + \" \" + saves + \" at dc \" + condition.duration.saveDC;\r\n            case \"combatant\":\r\n                var point = condition.duration.point;\r\n                var c = combat.combatants.find(c => c.id == condition.duration.combatantID);\r\n                var combatant = c ? (c.displayName || c.name || \"unnamed monster\") + \"'s\" : \"someone's\";\r\n                return \"until the \" + point + \" of \" + combatant + \" next turn\";\r\n            case \"rounds\":\r\n                var rounds = condition.duration.count > 1 ? \"rounds\" : \"round\";\r\n                return \"for \" + condition.duration.count + \" \" + rounds;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getMonsterNames(encounter) {\r\n    var monsterNames: any[] = [];\r\n    if (encounter) {\r\n        encounter.slots.forEach(slot => {\r\n            var names: any[] = [];\r\n            if (slot.count === 1) {\r\n                names.push(slot.monsterName);\r\n            } else {\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    names.push(slot.monsterName + \" \" + (n + 1));\r\n                }\r\n            }\r\n\r\n            monsterNames.push({\r\n                id: slot.id,\r\n                names: names\r\n            });\r\n        });\r\n    }\r\n\r\n    return monsterNames;\r\n}","import * as utils from '../utils';\r\n\r\nexport function createParty() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        pcs: []\r\n    };\r\n}\r\n\r\nexport function createPC() {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"pc\",\r\n        active: true,\r\n        player: \"\",\r\n        name: \"\",\r\n        race: \"\",\r\n        classes: \"\",\r\n        background: \"\",\r\n        level: 1,\r\n        languages: \"Common\",\r\n        passiveInsight: 10,\r\n        passiveInvestigation: 10,\r\n        passivePerception: 10,\r\n        initiative: 10,\r\n        url: \"\"\r\n    };\r\n}\r\n\r\nexport function createMonsterGroup() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        monsters: []\r\n    };\r\n}\r\n\r\nexport function createMonster() {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"monster\",\r\n        name: \"\",\r\n        size: \"medium\",\r\n        category: \"humanoid\",\r\n        tag: \"\",\r\n        alignment: \"\",\r\n        challenge: 1,\r\n        abilityScores: {\r\n            str: 10,\r\n            dex: 10,\r\n            con: 10,\r\n            int: 10,\r\n            wis: 10,\r\n            cha: 10\r\n        },\r\n        ac: 10,\r\n        hpMax: 4,\r\n        hpTemp: 0,\r\n        hitDice: 1,\r\n        damage: {\r\n            resist: \"\",\r\n            vulnerable: \"\",\r\n            immune: \"\"\r\n        },\r\n        savingThrows: \"\",\r\n        speed: \"\",\r\n        skills: \"\",\r\n        senses: \"\",\r\n        languages: \"\",\r\n        equipment: \"\",\r\n        traits: [],\r\n        conditionImmunities: \"\"\r\n    };\r\n}\r\n\r\nexport function createTrait() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        usage: \"\",\r\n        type: \"action\",\r\n        text: \"\"\r\n    };\r\n}\r\n\r\nexport function createEncounter() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        slots: [],\r\n        waves: []\r\n    };\r\n}\r\n\r\nexport function createEncounterSlot() {\r\n    return {\r\n        id: utils.guid(),\r\n        monsterGroupName: \"\",\r\n        monsterName: \"\",\r\n        count: 1\r\n    };\r\n}\r\n\r\nexport function createEncounterWave() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        slots: []\r\n    };\r\n}\r\n\r\nexport function createMapFolio() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        maps: []\r\n    };\r\n}\r\n\r\nexport function createMap() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        items: []\r\n    };\r\n}\r\n\r\nexport function createMapItem() {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"tile\",\r\n        x: 0,\r\n        y: 0,\r\n        width: 4,\r\n        height: 4,\r\n        terrain: \"flagstone\"\r\n    };\r\n}\r\n\r\nexport function createCombat() {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        encounterID: null,\r\n        combatants: [],\r\n        map: null,\r\n        round: 1,\r\n        notifications: [],\r\n        issues: []\r\n    };\r\n}\r\n\r\nexport const SIZE_TYPES = [\r\n    \"tiny\",\r\n    \"small\",\r\n    \"medium\",\r\n    \"large\",\r\n    \"huge\",\r\n    \"gargantuan\"\r\n];\r\n\r\nexport const CATEGORY_TYPES = [\r\n    \"aberration\",\r\n    \"beast\",\r\n    \"celestial\",\r\n    \"construct\",\r\n    \"dragon\",\r\n    \"elemental\",\r\n    \"fey\",\r\n    \"fiend\",\r\n    \"giant\",\r\n    \"humanoid\",\r\n    \"monstrosity\",\r\n    \"ooze\",\r\n    \"plant\",\r\n    \"undead\"\r\n];\r\n\r\nexport const TRAIT_TYPES = [\r\n    \"trait\",\r\n    \"action\",\r\n    \"legendary\",\r\n    \"lair\",\r\n    \"regional\"\r\n];\r\n\r\nexport const CONDITION_TYPES = [\r\n    \"blinded\",\r\n    \"charmed\",\r\n    \"deafened\",\r\n    \"exhaustion\",\r\n    \"frightened\",\r\n    \"grappled\",\r\n    \"incapacitated\",\r\n    \"invisible\",\r\n    \"paralyzed\",\r\n    \"petrified\",\r\n    \"poisoned\",\r\n    \"prone\",\r\n    \"restrained\",\r\n    \"stunned\",\r\n    \"unconscious\",\r\n    \"custom\"\r\n];\r\n\r\nexport const TERRAIN_TYPES = [\r\n    \"cavern\",\r\n    \"dirt\",\r\n    \"flagstone\",\r\n    \"floorboard\",\r\n    \"grassland\",\r\n    \"pit\",\r\n    \"sand\",\r\n    \"snow\",\r\n    \"water\"\r\n];","import React from 'react';\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var monsters = null;\r\n            if (this.props.library.length === 0) {\r\n                monsters = (\r\n                    <div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"text\">\r\n                            <div>since your collection of monsters is empty, you might want to start by pressing the button below to add monsters from the <a href=\"http://dnd.wizards.com/articles/features/systems-reference-document-srd\" target=\"_blank\" rel=\"noopener noreferrer\">system reference document</a></div>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <button onClick={() => this.props.addOpenGameContent()}>add monsters</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"home scrollable\">\r\n                <div className=\"vertical-center-outer\">\r\n                    <div className=\"vertical-center-middle\">\r\n                        <div className=\"vertical-center-inner\">\r\n                            <div className=\"welcome-panel\">\r\n                                <div className=\"heading\">welcome to <b>dojo</b></div>\r\n                                <div className=\"text\">\r\n                                    <div><b>dojo</b> is an app for dms of dungeons and dragons fifth edition</div>\r\n                                </div>\r\n                                <div className=\"text\">\r\n                                    <div>\r\n                                        with <b>dojo</b> you can:\r\n                                        <ul>\r\n                                            <li>build unique, challenging monsters</li>\r\n                                            <li>create encounters of just the right difficulty for your players</li>\r\n                                            <li>design intricate tactical maps</li>\r\n                                            <li>run combat without the book-keeping</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                {monsters}\r\n                                <div className=\"divider\"></div>\r\n                                <div className=\"text\">\r\n                                    <div>use the buttons at the bottom of the screen to access the app's features</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class InfoCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            if (this.props.getHeading) {\r\n                heading = this.props.getHeading();\r\n            }\r\n\r\n            var content = null;\r\n            if (this.props.getContent) {\r\n                content = this.props.getContent();\r\n            }\r\n            if (!content) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div className=\"card\">\r\n                    {heading}\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class PartiesCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.parties.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start adding a party, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select a party from the list to see pc details</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">\r\n                        <div>this page is where you can tell dojo all about your pcs</div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div>you can add a party for each of your gaming groups</div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class PartyListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var partyName = this.props.party.name;\r\n            if (!partyName) {\r\n                partyName = \"unnamed party\";\r\n            }\r\n\r\n            var pcs = [];\r\n            for (var n = 0; n !== this.props.party.pcs.length; ++n) {\r\n                var pc = this.props.party.pcs[n];\r\n                var name = pc.name;\r\n                if (pc.player) {\r\n                    name += \" (\" + pc.player + \")\";\r\n                }\r\n                if (!name) {\r\n                    name = \"unnamed pc\";\r\n                }\r\n                pcs.push(<div key={pc.id} className=\"text\">{name}</div>);\r\n            }\r\n            if (pcs.length === 0) {\r\n                pcs.push(<div key=\"empty\" className=\"text\">no pcs</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.party)}>\r\n                    <div className=\"heading\">{partyName}</div>\r\n                    {pcs}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport warning from \"../../resources/images/warning.svg\";\r\n\r\n/*\r\n<ConfirmButton\r\n    text=\"TEXT\"\r\n    details=\"TEXT\"\r\n    disabled={BOOLEAN}\r\n    callback={() => CALLBACK_FUNCTION}\r\n/>\r\n*/\r\n\r\nexport default class ConfirmButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pressed: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            pressed: !this.state.pressed\r\n        });\r\n    }\r\n\r\n    perform() {\r\n        this.toggle();\r\n        this.props.callback();\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var content = null;\r\n            if (this.state.pressed) {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"title\">{this.props.text} - are you sure?</div>\r\n                        <img className=\"image\" src={warning} alt=\"warning\" />\r\n                        {this.props.details ? <div className=\"details\">{this.props.details}</div> : null}\r\n                        <div className=\"confirmation\">\r\n                            <div className=\"destructive\" onClick={() => this.perform()}>yes</div>\r\n                            <div className=\"non-destructive\" onClick={() => this.toggle()}>no</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"title\">{this.props.text}</div>\r\n                        <img className=\"image\" src={warning} alt=\"warning\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <button className={this.props.disabled ? \"disabled\" : \"\"} onClick={() => this.toggle()}>\r\n                    {content}\r\n                </button>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class PartyCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                var activePCs = this.props.selection.pcs.filter(pc => pc.active);\r\n\r\n                var languages = activePCs\r\n                    .map(pc => pc.languages)\r\n                    .join(\", \")\r\n                    .split(/[ ,;]+/)\r\n                    .reduce((array, value) => {\r\n                        if (array.indexOf(value) === -1) {\r\n                            array.push(value);\r\n                        }\r\n                        return array;\r\n                    }, [])\r\n                    .sort((a, b) => {\r\n                        if (a === \"Common\") {\r\n                            return -1;\r\n                        }\r\n                        if (b === \"Common\") {\r\n                            return 1;\r\n                        }\r\n                        return a.localeCompare(b);\r\n                    })\r\n                    .join(\", \");\r\n\r\n                var insightSummary = \"-\";\r\n                var investigationSummary = \"-\";\r\n                var perceptionSummary = \"-\";\r\n\r\n                if (activePCs.length !== 0) {\r\n                    var insight = { min: null, max: null };\r\n                    var investigation = { min: null, max: null };\r\n                    var perception = { min: null, max: null };\r\n\r\n                    activePCs.forEach(pc => {\r\n                        insight.min = insight.min === null ? pc.passiveInsight : Math.min(insight.min, pc.passiveInsight);\r\n                        insight.max = insight.max === null ? pc.passiveInsight : Math.max(insight.max, pc.passiveInsight);\r\n                        investigation.min = investigation.min === null ? pc.passiveInvestigation : Math.min(investigation.min, pc.passiveInvestigation);\r\n                        investigation.max = investigation.max === null ? pc.passiveInvestigation : Math.max(investigation.max, pc.passiveInvestigation);\r\n                        perception.min = perception.min === null ? pc.passivePerception : Math.min(perception.min, pc.passivePerception);\r\n                        perception.max = perception.max === null ? pc.passivePerception : Math.max(perception.max, pc.passivePerception);\r\n                    });\r\n\r\n                    insightSummary = insight.min === insight.max ? insight.min : insight.min + \" - \" + insight.max;\r\n                    investigationSummary = investigation.min === investigation.max ? investigation.min : investigation.min + \" - \" + investigation.max;\r\n                    perceptionSummary = perception.min === perception.max ? perception.min : perception.min + \" - \" + perception.max;\r\n                }\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">party</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"party name\" value={this.props.selection.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <div className=\"subheading\">languages</div>\r\n                        </div>\r\n                        <div className=\"section\">\r\n                            {languages}\r\n                        </div>\r\n                        <div className=\"section\">\r\n                            <div className=\"subheading\">passive skills</div>\r\n                        </div>\r\n                        <div className=\"table\">\r\n                            <div>\r\n                                <div className=\"cell three\"><b>insight</b></div>\r\n                                <div className=\"cell three\"><b>invest.</b></div>\r\n                                <div className=\"cell three\"><b>percep.</b></div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"cell three\">{insightSummary}</div>\r\n                                <div className=\"cell three\">{investigationSummary}</div>\r\n                                <div className=\"cell three\">{perceptionSummary}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                        <button onClick={() => this.props.addPC(\"new pc\")}>add a new pc</button>\r\n                            <button onClick={() => this.props.sortPCs()}>sort pcs</button>\r\n                            <ConfirmButton text=\"delete party\" callback={() => this.props.removeParty()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\n\r\n/*\r\n<Radial\r\n    direction=\"out\" \"in\" \"both\" \"eight\"\r\n    disabled=BOOLEAN\r\n    click={(dir, in|out => null}\r\n/>\r\n*/\r\n\r\nexport default class Radial extends React.Component {\r\n    click(e, dir, dir2) {\r\n        e.stopPropagation();\r\n        this.props.click(dir, dir2);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"radial \"+ (this.props.direction || \"out\");\r\n            if (this.props.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            var showOut = (this.props.direction === \"out\") | (this.props.direction === \"both\") | (this.props.direction === \"eight\");\r\n            var showIn = (this.props.direction === \"in\") | (this.props.direction === \"both\");\r\n            var showDiag = (this.props.direction === \"eight\");\r\n\r\n            return (\r\n                <div className={style}>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(135deg)\" }} alt=\"nw\" onClick={e => this.click(e, \"NW\")}/>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(180deg)\" }} alt=\"n\" onClick={e => this.click(e, \"N\", \"out\")}/>\r\n                        </div>\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\" }} alt=\"n\" onClick={e => this.click(e, \"N\", \"in\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-135deg)\" }} alt=\"ne\" onClick={e => this.click(e, \"NE\")}/>\r\n                    </div>\r\n                    <div className=\"btn\" style={{ padding: (showIn && showOut) ? \"10px 0\" : \"0\"}}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(90deg)\" }} alt=\"w\" onClick={e => this.click(e, \"W\", \"out\")}/>\r\n                        <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(-90deg)\" }} alt=\"w\" onClick={e => this.click(e, \"W\", \"in\")}/>\r\n                    </div>\r\n                    <div className=\"empty\"></div>\r\n                    <div className=\"btn\" style={{ padding: (showIn && showOut) ? \"10px 0\" : \"0\"}}>\r\n                        <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(90deg)\" }} alt=\"e\" onClick={e => this.click(e, \"E\", \"in\")}/>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-90deg)\" }} alt=\"e\" onClick={e => this.click(e, \"E\", \"out\")}/>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(45deg)\" }} alt=\"sw\" onClick={e => this.click(e, \"SW\")}/>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(180deg)\" }} alt=\"s\" onClick={e => this.click(e, \"S\", \"in\")}/>\r\n                        </div>\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\" }} alt=\"s\" onClick={e => this.click(e, \"S\", \"out\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-45deg)\" }} alt=\"se\" onClick={e => this.click(e, \"SE\")}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport plus from \"../../resources/images/plus.svg\";\r\nimport minus from \"../../resources/images/minus.svg\";\r\n\r\n/*\r\n<Spin\r\n    source={SOURCEOBJECT}\r\n    name=\"FIELDNAME\"\r\n    label=\"LABEL\"\r\n    factors={[1, 10, 100]}\r\n    disabled={BOOLEAN}\r\n    display={value => this.displayValue(value)}\r\n    nudgeValue={delta => this.nudgeValue(SOURCEOBJECT, FIELDNAME, delta)}\r\n/>\r\n*/\r\n\r\nexport default class Spin extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            factor: 1\r\n        };\r\n    }\r\n\r\n    toggleExpanded() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    click(e, delta) {\r\n        e.stopPropagation();\r\n        this.props.nudgeValue(delta);\r\n    }\r\n\r\n    touchEnd(e, delta) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.nudgeValue(delta);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"info-value\";\r\n            var value = this.props.source[this.props.name];\r\n            if (value === 0) {\r\n                style += \" dimmed\";\r\n            }\r\n\r\n            if (this.props.display) {\r\n                value = this.props.display(value);\r\n            }\r\n\r\n            var minusBtns = [];\r\n            var plusBtns = [];\r\n\r\n            if (this.props.factors) {\r\n                this.props.factors.forEach(factor => {\r\n                    minusBtns.push(\r\n                        <div key={\"minus\" + factor} className=\"spin-button factor\" onTouchEnd={e => this.touchEnd(e, -1 * factor)} onClick={e => this.click(e, -1 * factor)}>\r\n                            {\"-\" + factor}\r\n                        </div>\r\n                    );\r\n        \r\n                    plusBtns.push(\r\n                        <div key={\"plus\" + factor} className=\"spin-button factor\" onTouchEnd={e => this.touchEnd(e, +1 * factor)} onClick={e => this.click(e, +1 * factor)}>\r\n                            {\"+\" + factor}\r\n                        </div>\r\n                    );        \r\n                });\r\n\r\n                minusBtns.reverse();\r\n            } else {\r\n                minusBtns.push(\r\n                    <div key=\"minus1\" className=\"spin-button\" onTouchEnd={e => this.touchEnd(e, -1)} onClick={e => this.click(e, -1)}>\r\n                        <img className=\"image\" src={minus} alt=\"minus\" />\r\n                    </div>\r\n                );\r\n    \r\n                plusBtns.push(\r\n                    <div key=\"plus1\" className=\"spin-button\" onTouchEnd={e => this.touchEnd(e, +1)} onClick={e => this.click(e, +1)}>\r\n                        <img className=\"image\" src={plus} alt=\"plus\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var infoWidth = 80 * (this.props.factors? this.props.factors.length : 1);\r\n\r\n            return (\r\n                <div className={this.props.disabled ? \"spin disabled\" : \"spin\"}>\r\n                    <div className=\"minus\">\r\n                        {minusBtns}\r\n                    </div>\r\n                    <div className=\"info\" style={{ width: \"calc(100% - \" + infoWidth + \"px)\" }}>\r\n                        <div className=\"info-label\">{this.props.label}</div>\r\n                        <div className={style}>{value}</div>\r\n                    </div>\r\n                    <div className=\"plus\">\r\n                        {plusBtns}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Radial from '../controls/radial';\r\nimport Spin from '../controls/spin';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class PCCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showDetails: false\r\n        };\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var options = [];\r\n            if (this.props.mode.indexOf(\"edit\") !== -1) {\r\n                if (this.props.combatant.active) {\r\n                    options.push(<button key=\"toggle-active\" onClick={() => this.props.changeValue(this.props.combatant, \"active\", false)}>mark inactive</button>);\r\n                } else {\r\n                    options.push(<button key=\"toggle-active\" onClick={() => this.props.changeValue(this.props.combatant, \"active\", true)}>mark active</button>);\r\n                }\r\n                options.push(<ConfirmButton key=\"remove\" text=\"delete pc\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                if (this.props.mode.indexOf(\"tactical\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"on-map\") !== -1) {\r\n                        options.push(\r\n                            <div key=\"mapMove\" className=\"section centered\">\r\n                                <Radial\r\n                                    direction=\"eight\"\r\n                                    click={dir => this.props.mapMove(this.props.combatant, dir)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                        options.push(\r\n                            <Spin\r\n                                key=\"altitude\"\r\n                                source={this.props.combatant}\r\n                                name=\"altitude\"\r\n                                label=\"altitude\"\r\n                                display={value => value + \" ft.\"}\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"altitude\", delta * 5)}\r\n                            />\r\n                        );\r\n                        options.push(<button key=\"mapRemove\" onClick={() => this.props.mapRemove(this.props.combatant)}>remove from map</button>);\r\n                    }\r\n                    if (this.props.mode.indexOf(\"off-map\") !== -1) {\r\n                        options.push(<button key=\"mapAdd\" onClick={() => this.props.mapAdd(this.props.combatant)}>add to map</button>);\r\n                    }\r\n                    options.push(<div key=\"tactical-div\" className=\"divider\"></div>);\r\n                }\r\n                if (this.props.combatant.pending && !this.props.combatant.active && !this.props.combatant.defeated) {\r\n                    options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                }\r\n                if (!this.props.combatant.pending && this.props.combatant.active && !this.props.combatant.defeated) {\r\n                    if (this.props.combatant.current) {\r\n                        options.push(<button key=\"endTurn\" onClick={() => this.props.endTurn(this.props.combatant)}>end turn</button>);\r\n                        options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated and end turn</button>);\r\n                    } else {\r\n                        options.push(<button key=\"makeCurrent\" onClick={() => this.props.makeCurrent(this.props.combatant)}>start turn</button>);\r\n                        options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated</button>);\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                }\r\n                if (!this.props.combatant.pending && !this.props.combatant.active && this.props.combatant.defeated) {\r\n                    options.push(<button key=\"makeActive\" onClick={() => this.props.makeActive(this.props.combatant)}>mark as active</button>);\r\n                    options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                }\r\n            }\r\n\r\n            var commonStatBlock = (\r\n                <div className=\"stats\">\r\n                    <div className=\"section centered\">\r\n                        <div className=\"lowercase\">\r\n                            <i>\r\n                                <span>{this.props.combatant.race || 'race'} {this.props.combatant.classes || 'class'}</span>,\r\n                                <span>level {this.props.combatant.level}</span>\r\n                            </i>\r\n                        </div>\r\n                        <div style={{ display: this.props.combatant.url ? \"\" : \"none\" }}>\r\n                            <a href={this.props.combatant.url} target=\"_blank\" rel=\"noopener noreferrer\">d&d beyond sheet</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"section subheading\">languages</div>\r\n                    <div className=\"section\">\r\n                        {this.props.combatant.languages || \"-\"}\r\n                    </div>\r\n                    <div className=\"section subheading\">passive skills</div>\r\n                    <div className=\"table\">\r\n                        <div>\r\n                            <div className=\"cell three\"><b>insight</b></div>\r\n                            <div className=\"cell three\"><b>invest.</b></div>\r\n                            <div className=\"cell three\"><b>percep.</b></div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"cell three\">{this.props.combatant.passiveInsight}</div>\r\n                            <div className=\"cell three\">{this.props.combatant.passiveInvestigation}</div>\r\n                            <div className=\"cell three\">{this.props.combatant.passivePerception}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            var stats = null;\r\n            if (this.props.mode.indexOf(\"edit\") !== -1) {\r\n                if (this.state.showDetails) {\r\n                    stats = (\r\n                        <div className=\"edit\">\r\n                            <div className=\"section\">\r\n                                <div className=\"input-label\" style={{ display: this.state.showDetails ? \"\" : \"none\" }}>character name:</div>\r\n                                <input type=\"text\" value={this.props.combatant.name} onChange={event => this.props.changeValue(this.props.combatant, \"name\", event.target.value)} />\r\n                                <div className=\"input-label\" style={{ display: this.state.showDetails ? \"\" : \"none\" }}>player name:</div>\r\n                                <input type=\"text\" value={this.props.combatant.player} onChange={event => this.props.changeValue(this.props.combatant, \"player\", event.target.value)} />\r\n                                <div className=\"input-label\">race:</div>\r\n                                <input type=\"text\" value={this.props.combatant.race} onChange={event => this.props.changeValue(this.props.combatant, \"race\", event.target.value)} />\r\n                                <div className=\"input-label\">class:</div>\r\n                                <input type=\"text\" value={this.props.combatant.classes} onChange={event => this.props.changeValue(this.props.combatant, \"classes\", event.target.value)} />\r\n                                <div className=\"input-label\">level:</div>\r\n                                <Spin\r\n                                    source={this.props.combatant}\r\n                                    name=\"level\"\r\n                                    nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"level\", delta)}\r\n                                />\r\n                                <div className=\"input-label\">languages:</div>\r\n                                <input type=\"text\" value={this.props.combatant.languages} onChange={event => this.props.changeValue(this.props.combatant, \"languages\", event.target.value)} />\r\n                                <div className=\"input-label\">d&d beyond link:</div>\r\n                                <input type=\"text\" value={this.props.combatant.url} onChange={event => this.props.changeValue(this.props.combatant, \"url\", event.target.value)} />\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section subheading\">passive skills</div>\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passiveInsight\"\r\n                                label=\"insight\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passiveInsight\", delta)}\r\n                            />\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passiveInvestigation\"\r\n                                label=\"investigation\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passiveInvestigation\", delta)}\r\n                            />\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passivePerception\"\r\n                                label=\"perception\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passivePerception\", delta)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    stats = commonStatBlock;\r\n                }\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                stats = commonStatBlock;\r\n            }\r\n\r\n            var toggle = null;\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                // Don't show toggle button for combatant\r\n            } else {\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n                toggle = <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n            }\r\n\r\n            return (\r\n                <div className=\"card pc\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.combatant.displayName || this.props.combatant.name || \"unnamed pc\"}</div>\r\n                        {toggle}\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {stats}\r\n                        <div style={{ display: options.length > 0 ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                {options}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\nimport close from \"../../resources/images/close-black.svg\";\r\n\r\nexport default class CardGroup extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCards: true\r\n        }\r\n    }\r\n\r\n    toggleCards() {\r\n        this.setState({\r\n            showCards: !this.state.showCards\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.hidden) {\r\n                return null;\r\n            }\r\n\r\n            var heading = null;\r\n            if (this.props.heading) {\r\n                var closeBtn = null;\r\n                if (this.props.showClose) {\r\n                    closeBtn = (\r\n                        <img className=\"image\" src={close} alt=\"close\" onClick={() => this.props.close()} />\r\n                    );\r\n                }\r\n\r\n                var toggle = null;\r\n                if (this.props.showToggle) {\r\n                    var style = this.state.showCards ? \"image rotate\" : \"image\";\r\n                    toggle = (\r\n                        <img className={style} src={arrow} alt=\"arrow\" onClick={() => this.toggleCards()} />\r\n                    );\r\n                }\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.heading}</div>\r\n                        {toggle}\r\n                        {closeBtn}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var cards = [];\r\n            if (this.props.content && this.state.showCards) {\r\n                cards = this.props.content;\r\n            }\r\n\r\n            return (\r\n                <div className=\"card-group\">\r\n                    {heading}\r\n                    <div className=\"row small-up-1 medium-up-2 large-up-4 collapse\">\r\n                        {cards}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PartiesCard from '../cards/information/parties-card';\r\nimport PartyListItem from '../list-items/party-list-item';\r\nimport PartyCard from '../cards/party-card';\r\nimport PCCard from '../cards/pc-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class PartiesScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <PartiesCard parties={this.props.parties}/>\r\n                );\r\n            }\r\n\r\n            var parties = [];\r\n            for (var n = 0; n !== this.props.parties.length; ++n) {\r\n                var party = this.props.parties[n];\r\n                parties.push(\r\n                    <PartyListItem\r\n                        key={party.id}\r\n                        party={party}\r\n                        selected={party === this.props.selection}\r\n                        setSelection={party => this.props.selectParty(party)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var activeCards = [];\r\n            var inactiveCards = [];\r\n\r\n            if (this.props.selection) {\r\n                activeCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <PartyCard\r\n                            selection={this.props.selection}\r\n                            addPC={name => this.props.addPC(name)}\r\n                            sortPCs={() => this.props.sortPCs()}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            removeParty={() => this.props.removeParty()}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var activePCs = this.props.selection.pcs.filter(pc => pc.active);\r\n                activePCs.forEach(pc => {\r\n                    activeCards.push(\r\n                        <div className=\"column\" key={pc.id}>\r\n                            <PCCard\r\n                                combatant={pc}\r\n                                mode={\"edit\"}\r\n                                changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                removeCombatant={combatant => this.props.removePC(combatant)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                var inactivePCs = this.props.selection.pcs.filter(pc => !pc.active);\r\n                inactivePCs.forEach(pc => {\r\n                    inactiveCards.push(\r\n                        <div className=\"column\" key={pc.id}>\r\n                            <PCCard\r\n                                combatant={pc}\r\n                                mode={\"edit\"}\r\n                                changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                removeCombatant={combatant => this.props.removePC(combatant)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                if (activePCs.length === 0) {\r\n                    activeCards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no pcs</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            var name = null;\r\n            if (this.props.selection) {\r\n                name = this.props.selection.name || \"unnamed party\";\r\n            }\r\n\r\n            return (\r\n                <div className=\"parties row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addParty(\"new party\")}>add a new party</button>\r\n                        {parties}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={activeCards}\r\n                            heading={name}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectParty(null)}\r\n                        />\r\n                        <CardGroup\r\n                            content={inactiveCards}\r\n                            heading=\"inactive pcs\"\r\n                            showClose={false}\r\n                            hidden={inactiveCards.length === 0}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class MonsterLibraryCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <InfoCard\r\n                getContent={() => (\r\n                    <div>\r\n                        <div className=\"section\">you can maintain your menagerie of monsters here</div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">select a monster group from the list to see stat blocks for monsters in that group</div>\r\n                        <div className=\"section\">to quickly find a monster, type its name into the filter box</div>\r\n                    </div>\r\n                )}\r\n            />\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nexport default class MonsterGroupListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var groupName = this.props.group.name;\r\n            if (!groupName) {\r\n                groupName = \"unnamed group\";\r\n            }\r\n\r\n            var matchGroup = utils.match(this.props.filter, this.props.group.name);\r\n\r\n            var monsters = [];\r\n            for (var n = 0; n !== this.props.group.monsters.length; ++n) {\r\n                var monster = this.props.group.monsters[n];\r\n                var matchMonster = utils.match(this.props.filter, monster.name);\r\n                if (matchGroup || matchMonster) {\r\n                    var name = monster.name;\r\n                    if (!name) {\r\n                        name = \"unnamed monster\";\r\n                    }\r\n                    monsters.push(<div key={monster.id} className=\"text\">{name}</div>);\r\n                }\r\n            }\r\n            if (monsters.length === 0) {\r\n                monsters.push(<div key=\"empty\" className=\"text\">no monsters</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.group)}>\r\n                    <div className=\"heading\">{groupName}</div>\r\n                    {monsters}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class MonsterGroupCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">monster group</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"group name\" value={this.props.selection.name} disabled={this.props.filter} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button className={this.props.filter ? \"disabled\" : \"\"} onClick={() => this.props.addMonster(\"new monster\")}>add a new monster</button>\r\n                            <button className={this.props.filter ? \"disabled\" : \"\"} onClick={() => this.props.sortMonsters()}>sort monsters</button>\r\n                            <ConfirmButton text=\"delete group\" callback={() => this.props.removeMonsterGroup()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\n\r\n/*\r\n<Expander\r\n    text=\"TEXT\"\r\n    content={<div>ANY CONTENT</div>}\r\n    disabled={BOOLEAN}\r\n/>\r\n*/\r\n\r\nexport default class Expander extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = this.props.disabled ? \"expander disabled\" : \"expander\";\r\n            if (this.state.expanded) {\r\n                style += \" expanded\";\r\n            }\r\n\r\n            var content = null;\r\n            if (this.state.expanded) {\r\n                content = (\r\n                    <div className=\"expander-content\">\r\n                        {this.props.content}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var text = text;\r\n\r\n            return (\r\n                <div className={style}>\r\n                    <div className=\"expander-header\" onClick={() => this.toggle()}>\r\n                        <div className=\"expander-text\">{this.props.text}</div>\r\n                        <img className=\"expander-button\" src={arrow} alt=\"arrow\" />\r\n                    </div>\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ellipsis from \"../../resources/images/ellipsis.svg\";\r\n\r\n/*\r\nvar options = [\r\n    {\r\n        id: \"one\",\r\n        text: \"One\",\r\n        disabled: false\r\n    },\r\n    {\r\n        id: \"two\",\r\n        text: \"Two\",\r\n        disabled: true\r\n    },\r\n    {\r\n        id: \"three\",\r\n        text: \"Three\",\r\n        disabled: false\r\n    }\r\n];\r\n\r\n<Dropdown\r\n    options={options}\r\n    placeholder={PLACEHOLDER_TEXT}\r\n    selectedID={CURRENT_OPTION_ID}\r\n    disabled={BOOLEAN}\r\n    select={optionID => this.changeValue(SOURCEOBJECT, FIELDNAME, optionID)}\r\n/>\r\n*/\r\n\r\nexport default class Dropdown extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    toggleOpen(e) {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    select(optionID) {\r\n        this.setState({\r\n            open: false\r\n        });\r\n        this.props.select(optionID);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.options.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            var style = this.props.disabled ? \"dropdown disabled\" : \"dropdown\";\r\n            var content = [];\r\n\r\n            var selectedText = null;\r\n            var title = null;\r\n            if (this.props.selectedID) {\r\n                var option = null;\r\n                this.props.options.forEach(o => {\r\n                    if (o.id === this.props.selectedID) {\r\n                        option = o;\r\n                    }\r\n                });\r\n\r\n                if (option) {\r\n                    selectedText = option.text;\r\n                    title = option.text;\r\n                }\r\n            } else {\r\n                selectedText = this.props.text || this.props.placeholder || \"select...\";\r\n            }\r\n\r\n            content.push(\r\n                <div key=\"selection\" className=\"dropdown-top\" title={title}>\r\n                    <div className=\"item-text\">{selectedText}</div>\r\n                    <img className=\"arrow\" src={ellipsis} alt=\"arrow\" />\r\n                </div>\r\n            );\r\n\r\n            if (this.state.open) {\r\n                style += \" open\";\r\n\r\n                var items = this.props.options.map(option => {\r\n                    if (option.text === null) {\r\n                        return <div key={option.id} className=\"divider\"></div>\r\n                    } else {\r\n                        return (\r\n                            <DropdownOption\r\n                                key={option.id}\r\n                                option={option}\r\n                                selected={option.id === this.props.selectedID}\r\n                                select={optionID => this.select(optionID)}\r\n                            />\r\n                        );\r\n                    }\r\n                });\r\n\r\n                content.push(\r\n                    <div key=\"options\" className=\"dropdown-options\">\r\n                        {items}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className={style} onClick={e => this.toggleOpen(e)}>\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass DropdownOption extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (!this.props.option.disabled) {\r\n            this.props.select(this.props.option.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"dropdown-option\";\r\n            if (this.props.selected) {\r\n                style += \" selected\";\r\n            }\r\n            if (this.props.option.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div className={style} title={this.props.option.text} onClick={e => this.click(e)}>\r\n                    {this.props.option.text}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Spin from '../controls/spin';\r\n\r\nexport default class AbilityScorePanel extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAbilityScores: false\r\n        };\r\n    }\r\n\r\n    toggleAbilityScores() {\r\n        this.setState({\r\n            showAbilityScores: !this.state.showAbilityScores\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var result = null;\r\n\r\n            if (this.props.edit) {\r\n                result = (\r\n                    <div>\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"str\"\r\n                            label=\"strength\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.str\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"dex\"\r\n                            label=\"dexterity\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.dex\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"con\"\r\n                            label=\"constitution\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.con\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"int\"\r\n                            label=\"intelligence\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.int\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"wis\"\r\n                            label=\"wisdom\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.wis\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"cha\"\r\n                            label=\"charisma\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.cha\", delta)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                result = (\r\n                    <div className=\"ability-scores\" onClick={() => this.toggleAbilityScores()}>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">str</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.str : utils.modifier(this.props.combatant.abilityScores.str)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">dex</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.dex : utils.modifier(this.props.combatant.abilityScores.dex)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">con</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.con : utils.modifier(this.props.combatant.abilityScores.con)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">int</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.int : utils.modifier(this.props.combatant.abilityScores.int)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">wis</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.wis : utils.modifier(this.props.combatant.abilityScores.wis)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">cha</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.cha : utils.modifier(this.props.combatant.abilityScores.cha)}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return result;\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Expander from '../controls/expander';\r\n\r\nexport default class TraitPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = this.props.trait.name || \"unnamed \" + utils.traitType(this.props.trait.type);\r\n            if (this.props.trait.usage) {\r\n                heading += \" (\" + this.props.trait.usage + \")\";\r\n            }\r\n\r\n            if (this.props.edit) {\r\n                var details = (\r\n                    <div className=\"section\">\r\n                        <input type=\"text\" placeholder=\"name\" value={this.props.trait.name} onChange={event => this.props.changeTrait(this.props.trait, \"name\", event.target.value)} />\r\n                        <input type=\"text\" placeholder=\"usage\" value={this.props.trait.usage} onChange={event => this.props.changeTrait(this.props.trait, \"usage\", event.target.value)} />\r\n                        <textarea placeholder=\"details\" value={this.props.trait.text} onChange={event => this.props.changeTrait(this.props.trait, \"text\", event.target.value)} />\r\n                        <div className=\"divider\"></div>\r\n                        <ConfirmButton text=\"delete\" callback={() => this.props.removeTrait(this.props.trait)} />\r\n                    </div>\r\n                );\r\n    \r\n                return (\r\n                    <Expander\r\n                        text={this.props.trait.name || \"unnamed \" + utils.traitType(this.props.trait.type)}\r\n                        content={details}\r\n                    />\r\n                );\r\n            } else if (this.props.template) {\r\n                return (\r\n                    <div key={this.props.trait.id} className=\"section trait\">\r\n                        <b>{heading}</b> {this.props.trait.text}\r\n                        <button onClick={() => this.props.copyTrait(this.props.trait)}>copy</button>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div key={this.props.trait.id} className=\"section trait\">\r\n                        <b>{heading}</b> {this.props.trait.text}\r\n                    </div>\r\n                );\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport TraitPanel from './trait-panel';\r\n\r\nexport default class TraitsPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var traits = [];\r\n            var actions = [];\r\n            var legendaryActions = [];\r\n            var lairActions = [];\r\n            var regionalEffects = [];\r\n\r\n            for (var n = 0; n !== this.props.combatant.traits.length; ++n) {\r\n                var action = this.props.combatant.traits[n];\r\n                var item = (\r\n                    <TraitPanel\r\n                        key={action.id}\r\n                        trait={action}\r\n                        edit={this.props.edit}\r\n                        template={this.props.template}\r\n                        changeTrait={(action, type, value) => this.props.changeTrait(action, type, value)}\r\n                        removeTrait={action => this.props.removeTrait(action)}\r\n                        copyTrait={action => this.props.copyTrait(action)}\r\n                    />\r\n                );\r\n\r\n                switch (action.type) {\r\n                    case \"trait\":\r\n                        traits.push(item);\r\n                        break;\r\n                    case \"action\":\r\n                        actions.push(item);\r\n                        break;\r\n                    case \"legendary\":\r\n                        legendaryActions.push(item);\r\n                        break;\r\n                    case \"lair\":\r\n                        lairActions.push(item);\r\n                        break;\r\n                    case \"regional\":\r\n                        regionalEffects.push(item);\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.props.edit) {\r\n                traits.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"trait\")}>add a new trait</button>\r\n                );\r\n                actions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"action\")}>add a new action</button>\r\n                );\r\n                legendaryActions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"legendary\")}>add a new legendary action</button>\r\n                );\r\n                lairActions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"lair\")}>add a new lair action</button>\r\n                );\r\n                regionalEffects.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"regional\")}>add a new regional effect</button>\r\n                );\r\n\r\n                return (\r\n                    <div className=\"row collapse\">\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">traits</div>\r\n                            {traits}\r\n                        </div>\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">actions</div>\r\n                            {actions}\r\n                        </div>\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">legendary actions</div>\r\n                            {legendaryActions}\r\n                            <div className=\"section subheading\">lair actions</div>\r\n                            {lairActions}\r\n                            <div className=\"section subheading\">regional effects</div>\r\n                            {regionalEffects}\r\n                        </div>\r\n                    </div>\r\n                );    \r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <div style={{ display: traits.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">traits</div>\r\n                        {traits}\r\n                    </div>\r\n                    <div style={{ display: actions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">actions</div>\r\n                        {actions}\r\n                    </div>\r\n                    <div style={{ display: legendaryActions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">legendary actions</div>\r\n                        {legendaryActions}\r\n                    </div>\r\n                    <div style={{ display: lairActions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">lair actions</div>\r\n                        {lairActions}\r\n                    </div>\r\n                    <div style={{ display: regionalEffects.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">regional effects</div>\r\n                        {regionalEffects}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Expander from '../controls/expander';\r\n\r\nexport default class ConditionPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var name = this.props.condition.name || \"condition\";\r\n            if (this.props.condition.name === \"exhaustion\") {\r\n                name += \" (\" + this.props.condition.level + \")\";\r\n            }\r\n            if (this.props.condition.name === \"custom\") {\r\n                name = this.props.condition.text;\r\n            }\r\n\r\n            if (this.props.condition.duration !== null) {\r\n                name += \" \" + utils.conditionDurationText(this.props.condition, this.props.combat);\r\n            }\r\n\r\n            var description = [];\r\n            if (this.props.condition.name === \"exhaustion\") {\r\n                description.push(\r\n                    <div key=\"level\" className=\"section\">\r\n                        <Spin\r\n                            source={this.props.condition}\r\n                            name=\"level\"\r\n                            label=\"level\"\r\n                            nudgeValue={delta => this.props.nudgeConditionValue(this.props.condition, \"level\", delta)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            var text = utils.conditionText(this.props.condition);\r\n            for (var n = 0; n !== text.length; ++n) {\r\n                description.push(<div key={n} className=\"section\">{text[n]}</div>);\r\n            }\r\n\r\n            return (\r\n                <Expander\r\n                    text={name}\r\n                    content={(\r\n                        <div>\r\n                            {description}\r\n                            <div className=\"divider\"></div>\r\n                            <button onClick={() => this.props.editCondition(this.props.condition)}>edit</button>\r\n                            <button onClick={() => this.props.removeCondition(this.props.condition.id)}>remove</button>\r\n                        </div>\r\n                    )}\r\n                />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConditionPanel from './condition-panel';\r\n\r\nexport default class ConditionsPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var conditions = [];\r\n            if (this.props.combatant.conditions) {\r\n                for (var n = 0; n !== this.props.combatant.conditions.length; ++n) {\r\n                    var condition = this.props.combatant.conditions[n];\r\n                    conditions.push(\r\n                        <ConditionPanel\r\n                            key={n}\r\n                            condition={condition}\r\n                            combat={this.props.combat}\r\n                            nudgeConditionValue={(condition, type, delta) => this.props.nudgeConditionValue(condition, type, delta)}\r\n                            changeConditionValue={(condition, type, value) => this.props.changeConditionValue(condition, type, value)}\r\n                            editCondition={condition => this.props.editCondition(condition)}\r\n                            removeCondition={conditionID => this.props.removeCondition(conditionID)}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=\"section\">\r\n                    {conditions}\r\n                    <button onClick={() => this.props.addCondition()}>add a condition</button>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Expander from '../controls/expander';\r\nimport Dropdown from '../controls/dropdown';\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Radial from '../controls/radial';\r\nimport Spin from '../controls/spin';\r\nimport InfoCard from '../cards/info-card';\r\nimport AbilityScorePanel from '../panels/ability-score-panel';\r\nimport TraitsPanel from '../panels/traits-panel';\r\nimport ConditionsPanel from '../panels/conditions-panel';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class MonsterCard extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            cloneName: props.combatant.name + \" copy\",\r\n            showHP: false,\r\n            showDetails: false,\r\n            damage: 0\r\n        };\r\n    }\r\n\r\n    setCloneName(cloneName) {\r\n        this.setState({\r\n            cloneName: cloneName\r\n        });\r\n    }\r\n\r\n    toggleHP() {\r\n        this.setState({\r\n            showHP: !this.state.showHP\r\n        })\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    setDamage(damage) {\r\n        this.setState({\r\n            damage: damage\r\n        });\r\n    }\r\n\r\n    nudgeDamage(delta) {\r\n        var damage = this.state.damage + delta;\r\n        damage = Math.max(damage, 0);\r\n\r\n        this.setState({\r\n            damage: damage\r\n        });\r\n    }\r\n\r\n    heal() {\r\n        var hp = this.props.combatant.hp + this.state.damage;\r\n        hp = Math.min(hp, this.props.combatant.hpMax);\r\n\r\n        this.setState({\r\n            damage: 0\r\n        }, () => {\r\n            this.props.changeHP(this.props.combatant, hp, this.props.combatant.hpTemp);\r\n        });\r\n    }\r\n\r\n    damage() {\r\n        var hp = this.props.combatant.hp;\r\n        var temp = this.props.combatant.hpTemp;\r\n\r\n        var damage = this.state.damage;\r\n\r\n        // Take damage off temp HP first\r\n        var val = Math.min(damage, temp);\r\n        damage -= val;\r\n        temp -= val;\r\n\r\n        // Take the rest off HP\r\n        hp -= damage;\r\n        hp = Math.max(hp, 0);\r\n\r\n        this.setState({\r\n            damage: 0\r\n        }, () => {\r\n            this.props.changeHP(this.props.combatant, hp, temp);\r\n        });\r\n    }\r\n\r\n    description() {\r\n        var sizeAndType = (this.props.combatant.size + \" \" + this.props.combatant.category).toLowerCase();\r\n        if (this.props.combatant.tag) {\r\n            sizeAndType += \" (\" + this.props.combatant.tag.toLowerCase() + \")\";\r\n        }\r\n        sizeAndType += \", \";\r\n\r\n        var align = \"\";\r\n        if (this.props.combatant.alignment) {\r\n            align = this.props.combatant.alignment.toLowerCase() + \", \";\r\n        }\r\n\r\n        var cr = \"cr \" + utils.challenge(this.props.combatant.challenge);\r\n\r\n        return sizeAndType + align + cr;\r\n    }\r\n\r\n    monsterIsInWave(wave) {\r\n        return wave.slots.some(s => {\r\n            var group = null;\r\n            this.props.library.forEach(g => {\r\n                if (g.monsters.indexOf(this.props.combatant) !== -1) {\r\n                    group = g;\r\n                }\r\n            });\r\n        \r\n            return (s.monsterGroupName === group.name) && (s.monsterName === this.props.combatant.name)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var options = [];\r\n            if (this.props.mode.indexOf(\"no-buttons\") === -1) {\r\n                if (this.props.mode.indexOf(\"view\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"editable\") !== -1) {\r\n                        options.push(\r\n                            <button key=\"edit\" onClick={() => this.props.editMonster(this.props.combatant)}>edit monster</button>\r\n                        );\r\n\r\n                        options.push(\r\n                            <Expander\r\n                                key=\"clone\"\r\n                                text=\"clone monster\"\r\n                                content={\r\n                                    <div>\r\n                                        <input type=\"text\" placeholder=\"monster name\" value={this.state.cloneName} onChange={event => this.setCloneName(event.target.value)} />\r\n                                        <button onClick={() => this.props.cloneMonster(this.props.combatant, this.state.cloneName)}>create copy</button>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        );\r\n\r\n                        var groupOptions = [];\r\n                        this.props.library.forEach(group => {\r\n                            if (group.monsters.indexOf(this.props.combatant) === -1) {\r\n                                groupOptions.push({\r\n                                    id: group.id,\r\n                                    text: group.name\r\n                                });\r\n                            }\r\n                        });\r\n                        options.push(\r\n                            <Dropdown\r\n                                key=\"move\"\r\n                                options={groupOptions}\r\n                                placeholder=\"move to group...\"\r\n                                select={optionID => this.props.moveToGroup(this.props.combatant, optionID)}\r\n                            />\r\n                        );\r\n\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"delete monster\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    if (this.props.mode.indexOf(\"encounter\") !== -1) {\r\n                        if (this.props.slot) {\r\n                            // This card is in an encounter or a wave\r\n                            options.push(<button key=\"remove\" onClick={() => this.props.removeEncounterSlot(this.props.slot)}>remove from encounter</button>);\r\n                        } else {\r\n                            var canAdd = false;\r\n                            // This card is in the library list\r\n                            if (!this.monsterIsInWave(this.props.encounter)) {\r\n                                options.push(<button key=\"add encounter\" onClick={() => this.props.addEncounterSlot(this.props.combatant, null)}>add to encounter</button>);\r\n                                canAdd = true;\r\n                            }\r\n                            this.props.encounter.waves.forEach(wave => {\r\n                                if (!this.monsterIsInWave(wave)) {\r\n                                    options.push(<button key={\"add \" + wave.id} onClick={() => this.props.addEncounterSlot(this.props.combatant, wave.id)}>add to {wave.name}</button>);\r\n                                    canAdd = true;\r\n                                }\r\n                            });\r\n                            // If we can't add it anywhere, don't show it\r\n                            if (!canAdd) {\r\n                                return (\r\n                                    <InfoCard\r\n                                        getHeading={() => {\r\n                                            return (\r\n                                                <div className=\"heading\">\r\n                                                    <div className=\"title\">{this.props.combatant.name}</div>\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                        getContent={() => {\r\n                                            return (\r\n                                                <div className=\"section centered\">\r\n                                                    <i>this monster is already part of this encounter</i>\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"tactical\") !== -1) {\r\n                        if (this.props.mode.indexOf(\"on-map\") !== -1) {\r\n                            options.push(\r\n                                <div key=\"mapMove\" className=\"section centered\">\r\n                                    <Radial\r\n                                        direction=\"eight\"\r\n                                        click={dir => this.props.mapMove(this.props.combatant, dir)}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                            options.push(\r\n                                <Spin\r\n                                    key=\"altitude\"\r\n                                    source={this.props.combatant}\r\n                                    name=\"altitude\"\r\n                                    label=\"altitude\"\r\n                                    display={value => value + \" ft.\"}\r\n                                    nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"altitude\", delta * 5)}\r\n                                />\r\n                            );\r\n                            options.push(<button key=\"mapRemove\" onClick={() => this.props.mapRemove(this.props.combatant)}>remove from map</button>);\r\n                        }\r\n                        if (this.props.mode.indexOf(\"off-map\") !== -1) {\r\n                            options.push(<button key=\"mapAdd\" onClick={() => this.props.mapAdd(this.props.combatant)}>add to map</button>);\r\n                        }\r\n                        options.push(<div key=\"tactical-div\" className=\"divider\"></div>);\r\n                    }\r\n                    if (this.props.combatant.pending && !this.props.combatant.active && !this.props.combatant.defeated) {\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    if (!this.props.combatant.pending && this.props.combatant.active && !this.props.combatant.defeated) {\r\n                        if (this.props.combatant.current) {\r\n                            options.push(<button key=\"endTurn\" onClick={() => this.props.endTurn(this.props.combatant)}>end turn</button>);\r\n                            options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated and end turn</button>);\r\n                        } else {\r\n                            options.push(<button key=\"makeCurrent\" onClick={() => this.props.makeCurrent(this.props.combatant)}>start turn</button>);\r\n                            options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated</button>);\r\n                            options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                        }\r\n                    }\r\n                    if (!this.props.combatant.pending && !this.props.combatant.active && this.props.combatant.defeated) {\r\n                        options.push(<button key=\"makeActive\" onClick={() => this.props.makeActive(this.props.combatant)}>mark as active</button>);\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    options.push(\r\n                        <Expander\r\n                            key=\"rename\"\r\n                            text=\"change name\"\r\n                            content={(\r\n                                <div>\r\n                                    <input type=\"text\" value={this.props.combatant.displayName} onChange={event => this.props.changeValue(this.props.combatant, \"displayName\", event.target.value)} />\r\n                                </div>\r\n                            )}\r\n                        />\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                    // None\r\n                }\r\n            }\r\n\r\n            var stats = null;\r\n            if (this.props.mode.indexOf(\"view\") !== -1) {\r\n                var slotSection = null;\r\n                if (this.props.slot) {\r\n                    slotSection = (\r\n                        <div>\r\n                            <div className=\"divider\"></div>\r\n                            <Spin\r\n                                source={this.props.slot}\r\n                                name=\"count\"\r\n                                label=\"count\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.slot, \"count\", delta)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                var details = null;\r\n                if (this.state.showDetails) {\r\n                    details = (\r\n                        <div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                <b>ac</b> {this.props.combatant.ac}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.hpMax !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>hp</b> {this.props.combatant.hitDice !== \"\" ? this.props.combatant.hpMax + \" (\" + this.props.combatant.hitDice + \"d\" + utils.hitDieType(this.props.combatant.size) + \")\" : this.props.combatant.hpMax}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.speed !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>speed</b> {this.props.combatant.speed}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <AbilityScorePanel combatant={this.props.combatant} />\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.savingThrows !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>saving throws</b> {this.props.combatant.savingThrows}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.skills !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>skills</b> {this.props.combatant.skills}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.resist !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage resistances</b> {this.props.combatant.damage.resist}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.vulnerable !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage vulnerabilities</b> {this.props.combatant.damage.vulnerable}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.immune !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage immunities</b> {this.props.combatant.damage.immune}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.conditionImmunities !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>condition immunities</b> {this.props.combatant.conditionImmunities}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.senses !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>senses</b> {this.props.combatant.senses}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.languages !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>languages</b> {this.props.combatant.languages}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.equipment !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>equipment</b> {this.props.combatant.equipment}\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <TraitsPanel combatant={this.props.combatant} />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                stats = (\r\n                    <div className=\"stats\">\r\n                        <div className=\"section centered\">\r\n                            <i>{this.description()}</i>\r\n                        </div>\r\n                        {slotSection}\r\n                        {details}\r\n                    </div>\r\n                );\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                stats = (\r\n                    <div className=\"stats\">\r\n                        <div className=\"section centered\">\r\n                            <i>{this.description()}</i>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <Spin\r\n                            source={this.props.combatant}\r\n                            name=\"hp\"\r\n                            label=\"hit points\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"hp\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant}\r\n                            name=\"hpTemp\"\r\n                            label=\"temp hp\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"hpTemp\", delta)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <Spin\r\n                            source={this.state}\r\n                            name=\"damage\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.nudgeDamage(delta)}\r\n                        />\r\n                        <div className={this.state.damage > 0 ? \"\" : \"disabled\"}>\r\n                            <button className=\"damage-btn\" onClick={() => this.heal()}>heal</button>\r\n                            <button className=\"damage-btn\" onClick={() => this.setDamage(0)}>reset</button>\r\n                            <button className=\"damage-btn\" onClick={() => this.damage()}>damage</button>\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.resist !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage resistances</b> {this.props.combatant.damage.resist}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.vulnerable !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage vulnerabilities</b> {this.props.combatant.damage.vulnerable}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.immune !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage immunities</b> {this.props.combatant.damage.immune}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <AbilityScorePanel combatant={this.props.combatant} />\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.ac !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>ac</b> {this.props.combatant.ac}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.savingThrows !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>saving throws</b> {this.props.combatant.savingThrows}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.skills !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>skills</b> {this.props.combatant.skills}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.speed !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>speed</b> {this.props.combatant.speed}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.senses !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>senses</b> {this.props.combatant.senses}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.languages !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>languages</b> {this.props.combatant.languages}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.equipment !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>equipment</b> {this.props.combatant.equipment}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <TraitsPanel combatant={this.props.combatant} />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section subheading\">\r\n                            conditions\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.conditionImmunities !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>condition immunities</b> {this.props.combatant.conditionImmunities}\r\n                        </div>\r\n                        <ConditionsPanel\r\n                            combatant={this.props.combatant}\r\n                            combat={this.props.combat}\r\n                            addCondition={() => this.props.addCondition(this.props.combatant)}\r\n                            editCondition={condition => this.props.editCondition(this.props.combatant, condition)}\r\n                            removeCondition={conditionID => this.props.removeCondition(this.props.combatant, conditionID)}\r\n                            nudgeConditionValue={(condition, type, delta) => this.props.nudgeConditionValue(condition, type, delta)}\r\n                            changeConditionValue={(condition, type, value) => this.props.changeConditionValue(condition, type, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                if (this.props.mode.indexOf(\"overview\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section centered\">\r\n                                <i>{this.description()}</i>\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                <b>speed</b> {this.props.combatant.speed || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>senses</b> {this.props.combatant.senses || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>languages</b> {this.props.combatant.languages || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>equipment</b> {this.props.combatant.equipment || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"abilities\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <AbilityScorePanel combatant={this.props.combatant} />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>saving throws</b> {this.props.combatant.savingThrows || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>skills</b> {this.props.combatant.skills || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <b>ac</b> {this.props.combatant.ac}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>hp</b> {this.props.combatant.hitDice !== \"\" ? this.props.combatant.hpMax + \" (\" + this.props.combatant.hitDice + \"d\" + utils.hitDieType(this.props.combatant.size) + \")\" : this.props.combatant.hpMax}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage immunity</b> {this.props.combatant.damage.immune || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage resistance</b> {this.props.combatant.damage.resist || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage vulnerability</b> {this.props.combatant.damage.vulnerable || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>condition immunities</b> {this.props.combatant.conditionImmunities || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"actions\") !== -1) {\r\n                    stats = (\r\n                        <TraitsPanel\r\n                            combatant={this.props.combatant}\r\n                            template={true}\r\n                            copyTrait={trait => this.props.copyTrait(trait)}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n\r\n            var toggle = null;\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                // Don't show toggle button for combatant\r\n            } else if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                // Don't show toggle button for template\r\n            } else {\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n                toggle = <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n            }\r\n\r\n            return (\r\n                <div className=\"card monster\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.combatant.displayName || this.props.combatant.name || \"unnamed monster\"}</div>\r\n                        {toggle}\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {stats}\r\n                        <div style={{ display: options.length > 0 ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">{options}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport MonsterLibraryCard from '../cards/information/monster-library-card';\r\nimport MonsterGroupListItem from '../list-items/monster-group-list-item';\r\nimport MonsterGroupCard from '../cards/monster-group-card';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class MonsterLibraryScreen extends React.Component {\r\n    showMonsterGroup(group) {\r\n        var result = utils.match(this.props.filter, group.name);\r\n\r\n        if (!result) {\r\n            group.monsters.forEach(monster => {\r\n                result = utils.match(this.props.filter, monster.name) || result;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <MonsterLibraryCard />\r\n                );\r\n            }\r\n            \r\n            var listItems = [];\r\n            for (var n = 0; n !== this.props.library.length; ++n) {\r\n                var group = this.props.library[n];\r\n                if (this.showMonsterGroup(group)) {\r\n                    listItems.push(\r\n                        <MonsterGroupListItem\r\n                            key={group.id}\r\n                            group={group}\r\n                            filter={this.props.filter}\r\n                            selected={group === this.props.selection}\r\n                            setSelection={group => this.props.selectMonsterGroup(group)}\r\n                        />\r\n                    );\r\n                }\r\n            };\r\n\r\n            var cards = [];\r\n\r\n            if (this.props.selection) {\r\n                cards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <MonsterGroupCard\r\n                            selection={this.props.selection}\r\n                            filter={this.props.filter}\r\n                            addMonster={name => this.props.addMonster(name)}\r\n                            sortMonsters={() => this.props.sortMonsters()}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            removeMonsterGroup={() => this.props.removeMonsterGroup()}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var monsters = this.props.selection.monsters.filter(monster => {\r\n                    return utils.match(this.props.filter, monster.name);\r\n                });\r\n\r\n                if (monsters.length !== 0) {\r\n                    monsters.forEach(monster => {\r\n                        cards.push(\r\n                            <div className=\"column\" key={monster.id}>\r\n                                <MonsterCard\r\n                                    combatant={monster}\r\n                                    mode={\"view editable\"}\r\n                                    library={this.props.library}\r\n                                    moveToGroup={(combatant, groupID) => this.props.moveToGroup(combatant, groupID)}\r\n                                    changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                    nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                    removeCombatant={combatant => this.props.removeMonster(combatant)}\r\n                                    editMonster={combatant => this.props.editMonster(combatant)}\r\n                                    cloneMonster={(combatant, name) => this.props.cloneMonster(combatant, name)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    });\r\n                } else {\r\n                    cards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no monsters</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            var name = null;\r\n            if (this.props.selection) {\r\n                name = this.props.selection.name;\r\n                if (!name) {\r\n                    name = \"unnamed group\";\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=\"monster-library row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addMonsterGroup(\"new group\")}>add a new monster group</button>\r\n                        {listItems}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={cards}\r\n                            heading={name}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectMonsterGroup(null)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ErrorCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            if (this.props.title) {\r\n                heading = <div className=\"heading\"><div className=\"title\">{this.props.title}</div></div>;\r\n            }\r\n\r\n            var content = this.props.getContent();\r\n\r\n            return (\r\n                <div className=\"card error\">\r\n                    {heading}\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Dropdown from '../controls/dropdown';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class FilterCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAll: false\r\n        };\r\n    }\r\n\r\n    toggleAll() {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var sizes = [\"all sizes\"].concat(factory.SIZE_TYPES);\r\n            var sizeOptions = sizes.map(size => { return { id: size, text: size }; });\r\n            \r\n            var categories = [\"all types\"].concat(factory.CATEGORY_TYPES);\r\n            var catOptions = categories.map(cat => { return { id: cat, text: cat }; });\r\n\r\n            var content = null;\r\n            if (this.state.showAll) {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"name\" value={this.props.filter.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <Spin\r\n                            source={this.props.filter}\r\n                            name=\"challengeMin\"\r\n                            label=\"min cr\"\r\n                            display={value => utils.challenge(value)}\r\n                            nudgeValue={delta => this.props.nudgeValue(\"challengeMin\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.filter}\r\n                            name=\"challengeMax\"\r\n                            label=\"max cr\"\r\n                            display={value => utils.challenge(value)}\r\n                            nudgeValue={delta => this.props.nudgeValue(\"challengeMax\", delta)}\r\n                        />\r\n                        <Dropdown\r\n                            options={sizeOptions}\r\n                            placeholder=\"filter by size...\"\r\n                            selectedID={this.props.filter.size}\r\n                            select={optionID => this.props.changeValue(\"size\", optionID)}\r\n                        />\r\n                        <Dropdown\r\n                            options={catOptions}\r\n                            placeholder=\"filter by type...\"\r\n                            selectedID={this.props.filter.category}\r\n                            select={optionID => this.props.changeValue(\"category\", optionID)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.resetFilter()}>clear filter</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                var summary = \"\";\r\n                if (this.props.filter.size !== \"all sizes\") {\r\n                    summary += summary ? \" \" + this.props.filter.size : this.props.filter.size;\r\n                }\r\n                if (this.props.filter.category !== \"all types\") {\r\n                    summary += summary ? \" \" + this.props.filter.category : this.props.filter.category;\r\n                }\r\n                summary += \" monsters of cr \" + utils.challenge(this.props.filter.challengeMin) + \" to \" + utils.challenge(this.props.filter.challengeMax);\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"name\" value={this.props.filter.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"section\">showing {summary}</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">filter</div>\r\n                        <img className={this.state.showAll ? \"image rotate\" : \"image\"} src={arrow} alt=\"arrow\" onClick={() => this.toggleAll()} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class WaveCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = (\r\n                <div className=\"heading\">\r\n                    <div className=\"title\">wave</div>\r\n                </div>\r\n            );\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">\r\n                        <input type=\"text\" placeholder=\"wave name\" value={this.props.wave.name} onChange={event => this.props.changeValue(this.props.wave, \"name\", event.target.value)} />\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"section\">\r\n                        <ConfirmButton text=\"delete wave\" callback={() => this.props.removeWave(this.props.wave)} />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class EncounterBuilderCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.encounters.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start building an encounter, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select an encounter from the list to add monsters to it</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">on this page you can set up encounters</div>\r\n                    <div className=\"section\">when you have created an encounter you can add monsters to it, then gauge its difficulty for a party of pcs</div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nexport default class DifficultyChartPanel extends React.Component {\r\n    render() {\r\n        var encounter = this.props.encounters.find(e => e.id === this.props.encounterID);\r\n        var party = this.props.parties.find(p => p.id === this.props.partyID);\r\n\r\n        var monsterCount = 0;\r\n        var monsterXp = 0;\r\n        var slots = [].concat(encounter.slots);\r\n        encounter.waves.forEach(wave => {\r\n            slots = slots.concat(wave.slots);\r\n        })\r\n        slots.forEach(slot => {\r\n            monsterCount += slot.count;\r\n            var monster = this.props.getMonster(slot.monsterName, slot.monsterGroupName);\r\n            if (monster) {\r\n                monsterXp += utils.experience(monster.challenge) * slot.count;\r\n            }\r\n        });\r\n\r\n        var adjustedXp = monsterXp * utils.experienceFactor(monsterCount);\r\n\r\n        var xpThresholds;\r\n        var diffSection;\r\n        if (party) {\r\n            var xpEasy = 0;\r\n            var xpMedium = 0;\r\n            var xpHard = 0;\r\n            var xpDeadly = 0;\r\n    \r\n            var pcs = party.pcs.filter(pc => pc.active);\r\n            pcs.forEach(pc => {\r\n                xpEasy += utils.pcExperience(pc.level, \"easy\");\r\n                xpMedium += utils.pcExperience(pc.level, \"medium\");\r\n                xpHard += utils.pcExperience(pc.level, \"hard\");\r\n                xpDeadly += utils.pcExperience(pc.level, \"deadly\");\r\n            });\r\n        \r\n            var difficulty = null;\r\n            var adjustedDifficulty = null;\r\n            if (adjustedXp > 0) {\r\n                difficulty = \"trivial\";\r\n                if (adjustedXp >= xpEasy) {\r\n                    difficulty = \"easy\";\r\n                }\r\n                if (adjustedXp >= xpMedium) {\r\n                    difficulty = \"medium\";\r\n                }\r\n                if (adjustedXp >= xpHard) {\r\n                    difficulty = \"hard\";\r\n                }\r\n                if (adjustedXp >= xpDeadly) {\r\n                    difficulty = \"deadly\";\r\n                }\r\n                adjustedDifficulty = difficulty;\r\n\r\n                if ((pcs.length < 3) || (pcs.length > 5)) {\r\n                    var small = pcs.length < 3;\r\n                    switch (difficulty) {\r\n                        case \"trivial\":\r\n                            adjustedDifficulty = small ? \"easy\" : \"trivial\";\r\n                            break;\r\n                        case \"easy\":\r\n                            adjustedDifficulty = small ? \"medium\" : \"trivial\";\r\n                            break;\r\n                        case \"medium\":\r\n                            adjustedDifficulty = small ? \"hard\" : \"easy\";\r\n                            break;\r\n                        case \"hard\":\r\n                            adjustedDifficulty = small ? \"deadly\" : \"medium\";\r\n                            break;\r\n                        case \"deadly\":\r\n                            adjustedDifficulty = small ? \"deadly\" : \"hard\";\r\n                            break;\r\n                        default:\r\n                            adjustedDifficulty = \"\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            xpThresholds = (\r\n                <div className=\"table\">\r\n                    <div>\r\n                        <div className=\"cell four\"><b>easy</b></div>\r\n                        <div className=\"cell four\"><b>medium</b></div>\r\n                        <div className=\"cell four\"><b>hard</b></div>\r\n                        <div className=\"cell four\"><b>deadly</b></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"cell four\">{xpEasy} xp</div>\r\n                        <div className=\"cell four\">{xpMedium} xp</div>\r\n                        <div className=\"cell four\">{xpHard} xp</div>\r\n                        <div className=\"cell four\">{xpDeadly} xp</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            var getLeft = (xp) => {\r\n                var max = Math.max(adjustedXp, (xpDeadly * 1.2));\r\n                return (100 * xp) / max;\r\n            };\r\n\r\n            var getRight = (xp) => {\r\n                return 100 - getLeft(xp);\r\n            };\r\n\r\n            diffSection = (\r\n                <div>\r\n                    <div className=\"difficulty-gauge\">\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar trivial\" style={{ left: \"0\", right: getRight(xpEasy) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar easy\" style={{ left: getLeft(xpEasy) + \"%\", right: getRight(xpMedium) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar medium\" style={{ left: getLeft(xpMedium) + \"%\", right: getRight(xpHard) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar hard\" style={{ left: getLeft(xpHard) + \"%\", right: getRight(xpDeadly) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar deadly\" style={{ left: getLeft(xpDeadly) + \"%\", right: \"0\" }}></div>\r\n                        </div>\r\n                        <div className=\"encounter-container\">\r\n                            <div className=\"encounter\" style={{ left: (getLeft(adjustedXp) - 0.5) + \"%\" }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"subheading\">difficulty</div>\r\n                    <div className=\"section\">\r\n                        difficulty for this party\r\n                        <div className=\"right\">{difficulty}</div>\r\n                    </div>\r\n                    <div className=\"section\" style={{ display: (adjustedDifficulty === difficulty) ? \"none\" : \"\"}}>\r\n                        effective difficulty for {pcs.length} pc(s)\r\n                        <div className=\"right\"><b>{adjustedDifficulty}</b></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"subheading\">xp value</div>\r\n                <div className=\"section\">\r\n                    xp for this encounter\r\n                    <div className=\"right\">{monsterXp} xp</div>\r\n                </div>\r\n                <div className=\"section\" style={{ display: (adjustedXp === monsterXp) ? \"none\" : \"\"}}>\r\n                    effective xp for {monsterCount} monster(s)\r\n                    <div className=\"right\">{adjustedXp} xp</div>\r\n                </div>\r\n                {xpThresholds}\r\n                {diffSection}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport DifficultyChartPanel from '../panels/difficulty-chart-panel';\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class EncounterCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showDetails: false,\r\n            partyID: null\r\n        };\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    selectParty(partyID) {\r\n        this.setState({\r\n            partyID: partyID\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                var partyOptions = [];\r\n                if (this.props.parties) {\r\n                    for (var n = 0; n !== this.props.parties.length; ++n) {\r\n                        var party = this.props.parties[n];\r\n                        partyOptions.push({\r\n                            id: party.id,\r\n                            text: party.name\r\n                        });\r\n                    }\r\n                }\r\n\r\n                var difficultySection = (\r\n                    <div>\r\n                        <Dropdown\r\n                            options={partyOptions}\r\n                            placeholder=\"select party...\"\r\n                            selectedID={this.state.partyID}\r\n                            select={optionID => this.selectParty(optionID)}\r\n                        />\r\n                        <DifficultyChartPanel\r\n                            partyID={this.state.partyID}\r\n                            encounterID={this.props.selection.id}\r\n                            parties={this.props.parties}\r\n                            encounters={this.props.encounters}\r\n                            getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">encounter</div>\r\n                        <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"encounter name\" value={this.props.selection.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div style={{ display: this.state.showDetails ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            {difficultySection}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.addWave()}>add a new wave</button>\r\n                            <ConfirmButton text=\"delete encounter\" callback={() => this.props.removeEncounter()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class EncounterListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var encounterName = this.props.encounter.name;\r\n            if (!encounterName) {\r\n                encounterName = \"unnamed encounter\";\r\n            }\r\n\r\n            var slots = [];\r\n            this.props.encounter.slots.forEach(slot => {\r\n                var text = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    text += \" x\" + slot.count;\r\n                }\r\n                slots.push(<div key={slot.id} className=\"text\">{text}</div>);\r\n            });\r\n            if (slots.length === 0) {\r\n                slots.push(<div key=\"empty\" className=\"text\">no monsters</div>);\r\n            }\r\n            this.props.encounter.waves.forEach(wave => {\r\n                slots.push(<div key={\"name \" + wave.id} className=\"text subheading\">{wave.name || \"unnamed wave\"}</div>);\r\n                wave.slots.forEach(slot => {\r\n                    var text = slot.monsterName || \"unnamed monster\";\r\n                    if (slot.count > 1) {\r\n                        text += \" x\" + slot.count;\r\n                    }\r\n                    slots.push(<div key={slot.id} className=\"text\">{text}</div>);\r\n                });\r\n                if (slots.length === 0) {\r\n                    slots.push(<div key={\"empty \" + wave.id} className=\"text\">no monsters</div>);\r\n                }\r\n            });\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.encounter)}>\r\n                    <div className=\"heading\">{encounterName}</div>\r\n                    {slots}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport ErrorCard from '../cards/error-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport FilterCard from '../cards/filter-card';\r\nimport WaveCard from '../cards/wave-card';\r\nimport CardGroup from '../panels/card-group';\r\nimport EncounterBuilderCard from '../cards/information/encounter-builder-card';\r\nimport EncounterCard from '../cards/encounter-card';\r\nimport EncounterListItem from '../list-items/encounter-list-item';\r\n\r\nexport default class EncounterBuilderScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            filter: {\r\n                name: \"\",\r\n                challengeMin: 0,\r\n                challengeMax: 5,\r\n                category: \"all types\",\r\n                size: \"all sizes\"\r\n            }\r\n        };\r\n    }\r\n\r\n    inEncounter(monster) {\r\n        var result = false;\r\n\r\n        var group = utils.getMonsterGroup(monster, this.props.library);\r\n\r\n        this.props.selection.slots.forEach(slot => {\r\n            if ((slot.monsterGroupName === group.name) && (slot.monsterName === monster.name)) {\r\n                result = true;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    matchMonster(monster) {\r\n        if (monster.challenge < this.state.filter.challengeMin) {\r\n            return false;\r\n        }\r\n\r\n        if (monster.challenge > this.state.filter.challengeMax) {\r\n            return false;\r\n        }\r\n\r\n        if (this.state.filter.name !== \"\") {\r\n            if (!utils.match(this.state.filter.name, monster.name)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.state.filter.category !== \"all types\") {\r\n            if (monster.category !== this.state.filter.category) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.state.filter.size !== \"all sizes\") {\r\n            if (monster.size !== this.state.filter.size) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    changeFilterValue(type, value) {\r\n        // eslint-disable-next-line\r\n        this.state.filter[type] = value;\r\n        this.setState({\r\n            filter: this.state.filter\r\n        });\r\n    }\r\n\r\n    nudgeFilterValue(type, delta) {\r\n        var value = utils.nudgeChallenge(this.state.filter[type], delta);\r\n        this.changeFilterValue(type, value);\r\n    }\r\n\r\n    resetFilter() {\r\n        this.setState({\r\n            filter: {\r\n                name: \"\",\r\n                challengeMin: 0,\r\n                challengeMax: 5,\r\n                category: \"all types\",\r\n                size: \"all sizes\"\r\n            }\r\n        });\r\n    }\r\n\r\n    getMonsterCards(slots, waveID) {\r\n        var cards = [];\r\n\r\n        slots.forEach(slot => {\r\n            var monster = this.props.getMonster(slot.monsterName, slot.monsterGroupName);\r\n            if (monster) {\r\n                cards.push(\r\n                    <div className=\"column\" key={monster.id}>\r\n                        <MonsterCard\r\n                            combatant={monster}\r\n                            slot={slot}\r\n                            encounter={this.props.selection}\r\n                            mode={\"view encounter\"}\r\n                            nudgeValue={(slot, type, delta) => this.props.nudgeValue(slot, type, delta)}\r\n                            removeEncounterSlot={slot => this.props.removeEncounterSlot(slot, waveID)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                var index = slots.indexOf(slot);\r\n                var error = \"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName;\r\n                cards.push(\r\n                    <div className=\"column\" key={index}>\r\n                        <ErrorCard\r\n                            getContent={() => <div className=\"section\">{error}</div>}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n\r\n        if (slots.length === 0) {\r\n            cards.push(\r\n                <div className=\"column\" key=\"empty\">\r\n                    <InfoCard getContent={() => <div className=\"section\">no monsters</div>} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return cards;\r\n    }\r\n\r\n    getLibrarySection() {\r\n        if (!this.props.selection) {\r\n            return null;\r\n        }\r\n\r\n        var libraryCards = [];\r\n        libraryCards.push(\r\n            <div className=\"column\" key=\"filter\">\r\n                <FilterCard\r\n                    filter={this.state.filter}\r\n                    changeValue={(type, value) => this.changeFilterValue(type, value)}\r\n                    nudgeValue={(type, delta) => this.nudgeFilterValue(type, delta)}\r\n                    resetFilter={() => this.resetFilter()}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        var monsters = [];\r\n        if (this.props.selection) {\r\n            this.props.library.forEach(group => {\r\n                group.monsters.forEach(monster => {\r\n                    if (this.matchMonster(monster)) {\r\n                        monsters.push(monster);\r\n                    }\r\n                });\r\n            });\r\n            monsters.sort((a, b) => {\r\n                if (a.name < b.name) return -1;\r\n                if (a.name > b.name) return 1;\r\n                return 0;\r\n            });\r\n        }\r\n        monsters.forEach(monster => {\r\n            libraryCards.push(\r\n                <div className=\"column\" key={monster.id}>\r\n                    <MonsterCard\r\n                        key={monster.id}\r\n                        combatant={monster}\r\n                        encounter={this.props.selection}\r\n                        library={this.props.library}\r\n                        mode={\"view encounter\"}\r\n                        addEncounterSlot={(combatant, waveID) => this.props.addEncounterSlot(combatant, waveID)}\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <CardGroup\r\n                heading=\"monster library\"\r\n                content={libraryCards}\r\n                showToggle={true}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <EncounterBuilderCard encounters={this.props.encounters} />\r\n                );\r\n            }\r\n\r\n            var encounters = [];\r\n            for (var n = 0; n !== this.props.encounters.length; ++n) {\r\n                var encounter = this.props.encounters[n];\r\n                encounters.push(\r\n                    <EncounterListItem\r\n                        key={encounter.id}\r\n                        encounter={encounter}\r\n                        selected={encounter === this.props.selection}\r\n                        setSelection={encounter => this.props.selectEncounter(encounter)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var encounterName = null;\r\n            var encounterCards = [];\r\n            var waves = [];\r\n\r\n            if (this.props.selection) {\r\n                encounterName = this.props.selection.name || \"unnamed encounter\";\r\n\r\n                encounterCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <EncounterCard\r\n                            selection={this.props.selection}\r\n                            parties={this.props.parties}\r\n                            encounters={this.props.encounters}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            addWave={() => this.props.addWave()}\r\n                            removeEncounter={() => this.props.removeEncounter()}\r\n                            getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                this.getMonsterCards(this.props.selection.slots, null)\r\n                    .forEach(card => encounterCards.push(card));\r\n                    \r\n                waves = this.props.selection.waves.map(wave => {\r\n                    var waveCards = [];\r\n                    waveCards.push(\r\n                        <div className=\"column\" key=\"info\">\r\n                            <WaveCard\r\n                                wave={wave}\r\n                                removeWave={wave => this.props.removeWave(wave)}\r\n                                changeValue={(wave, field, value) => this.props.changeValue(wave, field, value)}\r\n                            />\r\n                        </div>\r\n                    );\r\n\r\n                    this.getMonsterCards(wave.slots, wave.id)\r\n                        .forEach(card => waveCards.push(card));\r\n\r\n                    return (\r\n                        <CardGroup\r\n                            key={wave.id}\r\n                            heading={wave.name || \"unnamed wave\"}\r\n                            content={waveCards}\r\n                            showToggle={true}\r\n                        />\r\n                    );\r\n                });\r\n            }\r\n\r\n            return (\r\n                <div className=\"encounter-builder row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addEncounter(\"new encounter\")}>add a new encounter</button>\r\n                        {encounters}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={encounterCards}\r\n                            heading={encounterName}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectEncounter(null)}\r\n                        />\r\n                        {waves}\r\n                        {this.getLibrarySection()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class MapFoliosCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.mapFolios.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start a new folio, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select a map folio from the list to see the maps it contains</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">on this page you can set up folios containing tactical maps</div>\r\n                    <div className=\"section\">when you have created a map you can use it in encounters</div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class MapFolioListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var maps = [];\r\n            for (var n = 0; n !== this.props.mapFolio.maps.length; ++n) {\r\n                var map = this.props.mapFolio.maps[n];\r\n                var name = map.name || \"unnamed map\";\r\n                maps.push(<div key={map.id} className=\"text\">{name}</div>);\r\n            }\r\n            if (maps.length === 0) {\r\n                maps.push(<div key=\"empty\" className=\"text\">no maps</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.mapFolio)}>\r\n                    <div className=\"heading\">{this.props.mapFolio.name || \"unnamed folio\"}</div>\r\n                    {maps}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class MapFolioCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">map folio</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"folio name\" value={this.props.selection.name} onChange={event => this.props.changeValue(this.props.selection, \"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.addMap()}>add a new map</button>\r\n                            <ConfirmButton text=\"delete folio\" callback={() => this.props.removeMapFolio()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class HitPointGauge extends React.Component {\r\n    render() {\r\n        try {\r\n            var hpMax = this.props.combatant.hpMax + this.props.combatant.hpTemp;\r\n            var hpBloodied = this.props.combatant.hpMax / 2;\r\n            var hpWidth = 100 * Math.max(this.props.combatant.hp, 0) / hpMax;\r\n\r\n            var style = \"\";\r\n            if (this.props.combatant.hp >= this.props.combatant.hpMax) {\r\n                style = \"bar unhurt\";\r\n            } else if (this.props.combatant.hp <= hpBloodied) {\r\n                style = \"bar bloodied\";\r\n            } else {\r\n                style = \"bar injured\";\r\n            }\r\n\r\n            var hpTempBar = null;\r\n            if (this.props.combatant.hpTemp > 0) {\r\n                var hpTempWidth = 100 * Math.max(this.props.combatant.hpTemp, 0) / hpMax;\r\n                hpTempBar = <div className=\"bar temp\" style={{ width: hpTempWidth + \"%\" }}></div>\r\n            }\r\n\r\n            return (\r\n                <div className=\"hp-gauge\">\r\n                    <div className={style} style={{ width: hpWidth + \"%\" }}></div>\r\n                    {hpTempBar}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport HitPointGauge from '../panels/hit-point-gauge';\r\n\r\nexport default class MapPanel extends React.Component {\r\n\r\n    getMapDimensions(border = 1) {\r\n        var dimensions = null;\r\n\r\n        this.props.map.items.filter(i => {\r\n            if (this.props.mode === \"edit\") {\r\n                return i.type === \"tile\";\r\n            }\r\n            return true;\r\n        }).forEach(i => {\r\n            if (!dimensions) {\r\n                dimensions = {\r\n                    minX: i.x,\r\n                    maxX: i.x + i.width - 1,\r\n                    minY: i.y,\r\n                    maxY: i.y + i.height - 1\r\n                };\r\n            } else {\r\n                dimensions.minX = Math.min(dimensions.minX, i.x);\r\n                dimensions.maxX = Math.max(dimensions.maxX, i.x + i.width - 1);\r\n                dimensions.minY = Math.min(dimensions.minY, i.y);\r\n                dimensions.maxY = Math.max(dimensions.maxY, i.y + i.height - 1);\r\n            }\r\n        });\r\n\r\n        if (!dimensions) {\r\n            // The map is blank\r\n            if (this.props.mode === 'thumbnail') {\r\n                return null;\r\n            }\r\n\r\n            dimensions = {\r\n                minX: 0,\r\n                maxX: 0,\r\n                minY: 0,\r\n                maxY: 0\r\n            };\r\n        }\r\n\r\n        // Apply the border\r\n        dimensions.minX -= border;\r\n        dimensions.maxX += border;\r\n        dimensions.minY -= border;\r\n        dimensions.maxY += border;\r\n\r\n        dimensions.width = 1 + dimensions.maxX - dimensions.minX;\r\n        dimensions.height = 1 + dimensions.maxY - dimensions.minY;\r\n\r\n        return dimensions;\r\n    }\r\n\r\n    getSideLength() {\r\n        switch (this.props.mode) {\r\n            case \"thumbnail\":\r\n                return 5;\r\n            case \"edit\":\r\n            case \"combat\":\r\n                return 25;\r\n            default:\r\n                return 5;\r\n        }\r\n    }\r\n\r\n    getPosition(x, y, width, height, mapDimensions) {\r\n        var sideLength = this.getSideLength();\r\n\r\n        return {\r\n            left: \"calc(\" + sideLength + \"px * \" + (x - mapDimensions.minX) + \")\",\r\n            top: \"calc(\" + sideLength + \"px * \" + (y - mapDimensions.minY) + \")\",\r\n            width: \"calc((\" + sideLength + \"px * \" + width + \") + 1px)\",\r\n            height: \"calc((\" + sideLength + \"px * \" + height + \") + 1px)\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var border = (this.props.mode === \"edit\") ? 2 : 0;\r\n            var mapDimensions = this.getMapDimensions(border);\r\n            if (!mapDimensions) {\r\n                return (\r\n                    <div>(blank map)</div>\r\n                );\r\n            }\r\n\r\n            // Draw the grid squares\r\n            var grid = [];\r\n            if (this.props.mode === \"edit\") {\r\n                for (var y = mapDimensions.minY; y !== mapDimensions.maxY + 1; ++y) {\r\n                    for (var x = mapDimensions.minX; x !== mapDimensions.maxX + 1; ++x) {\r\n                        var pos = this.getPosition(x, y, 1, 1, mapDimensions);\r\n                        grid.push(\r\n                            <GridSquare\r\n                                key={x + \",\" + y}\r\n                                x={x}\r\n                                y={y}\r\n                                position={pos}\r\n                                onClick={() => this.props.setSelectedItemID(null)}\r\n                                onDoubleClick={(x, y) => this.props.addMapTile(x, y)}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Draw the map tiles\r\n            var tiles = this.props.map.items\r\n                .filter(i => i.type === \"tile\")\r\n                .map(i => {\r\n                    var pos = this.getPosition(i.x, i.y, i.width, i.height, mapDimensions);\r\n                    return (\r\n                        <MapTile\r\n                            key={i.id}\r\n                            tile={i}\r\n                            position={pos}\r\n                            selectable={this.props.mode === \"edit\"}\r\n                            selected={this.props.selectedItemID === i.id}\r\n                            thumbnail={this.props.mode === \"thumbnail\"}\r\n                            select={id => this.props.mode === \"edit\" ? this.props.setSelectedItemID(id) : null}\r\n                        />\r\n                    );\r\n                });\r\n\r\n            // Draw the tokens\r\n            var tokens = [];\r\n            if (this.props.mode !== \"edit\") {\r\n                tokens = this.props.map.items\r\n                    .filter(i => (i.type === \"monster\") || (i.type === \"pc\"))\r\n                    .map(i => {\r\n                        var pos = this.getPosition(i.x, i.y, i.width, i.height, mapDimensions);\r\n                        var combatant = this.props.combatants.find(c => c.id === i.id);\r\n                        return (\r\n                            <MapToken\r\n                                key={i.id}\r\n                                token={i}\r\n                                position={pos}\r\n                                combatant={combatant}\r\n                                selectable={this.props.mode === \"combat\"}\r\n                                simple={this.props.mode === \"thumbnail\"}\r\n                                selected={this.props.selectedItemID ===  i.id}\r\n                                select={id => this.props.setSelectedItemID(id)}\r\n                            />\r\n                        );\r\n                    });\r\n            }\r\n\r\n            // Draw the drag overlay\r\n            var dragOverlay = [];\r\n            if (this.props.showOverlay) {\r\n                for (var yOver = mapDimensions.minY; yOver !== mapDimensions.maxY + 1; ++yOver) {\r\n                    for (var xOver = mapDimensions.minX; xOver !== mapDimensions.maxX + 1; ++xOver) {\r\n                        var posOver = this.getPosition(xOver, yOver, 1, 1, mapDimensions);\r\n                        dragOverlay.push(\r\n                            <GridSquare\r\n                                key={xOver + \",\" + yOver}\r\n                                x={xOver}\r\n                                y={yOver}\r\n                                position={posOver}\r\n                                overlay={true}\r\n                                onClick={(x, y) => this.props.gridSquareClicked(x, y)}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            var style = \"map-panel \" + this.props.mode;\r\n            return (\r\n                <div className={style} onClick={() => this.props.setSelectedItemID(null)}>\r\n                    <div className=\"grid\" style={{ height: ((this.getSideLength() * mapDimensions.height) + 1) + \"px\" }}>\r\n                        {grid}\r\n                        {tiles}\r\n                        {tokens}\r\n                        {dragOverlay}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass GridSquare extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.x, this.props.y);\r\n        }\r\n    }\r\n\r\n    doubleClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.onDoubleClick) {\r\n            this.props.onDoubleClick(this.props.x, this.props.y);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"grid-square\";\r\n        if (this.props.overlay) {\r\n            style += \" grid-overlay\";\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.click(e)}\r\n                onDoubleClick={e => this.doubleClick(e)}\r\n            >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapTile extends React.Component {\r\n    select(e) {\r\n        if (this.props.selectable) {\r\n            e.stopPropagation();\r\n            this.props.select(this.props.tile.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"tile \" + this.props.tile.terrain;\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n        }\r\n        if (this.props.thumbnail) {\r\n            style += \" thumbnail\";\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.select(e)}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapToken extends React.Component {\r\n    select(e) {\r\n        if (this.props.selectable) {\r\n            e.stopPropagation();\r\n            this.props.select(this.props.token.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"token \" + this.props.token.type;\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n        }\r\n        if (this.props.combatant.current) {\r\n            style += \" current\";\r\n        }\r\n\r\n        if (!this.props.position) {\r\n            this.props.position = {\r\n                width: (this.props.token.width * 25) + \"px\",\r\n                height: (this.props.token.height * 25) + \"px\"\r\n            }\r\n        }\r\n\r\n        var initials = null;\r\n        var hpGauge = null;\r\n        var altitudeBadge = null;\r\n        var conditionsBadge = null;\r\n        if (!this.props.simple) {\r\n            var name = this.props.combatant.displayName || this.props.combatant.name;\r\n            initials = (\r\n                <div className=\"initials\">{name.split(' ').map(s => s[0])}</div>\r\n            );\r\n\r\n            if (this.props.combatant.type === \"monster\") {\r\n                hpGauge = (\r\n                    <HitPointGauge combatant={this.props.combatant} />\r\n                );\r\n            }\r\n\r\n            if (this.props.combatant.altitude > 0) {\r\n                altitudeBadge = (\r\n                    <div className=\"badge altitude\">&#9206;</div>\r\n                );\r\n            }\r\n\r\n            if (this.props.combatant.altitude < 0) {\r\n                altitudeBadge = (\r\n                    <div className=\"badge altitude\">&#9207;</div>\r\n                );\r\n            }\r\n\r\n            if ((this.props.combatant.conditions) && (this.props.combatant.conditions.length > 0)) {\r\n                conditionsBadge = (\r\n                    <div className=\"badge\">&#9670;</div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                title={this.props.combatant.displayName || this.props.combatant.name}\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.select(e)}\r\n            >\r\n                {initials}\r\n                {hpGauge}\r\n                {altitudeBadge}\r\n                {conditionsBadge}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport MapPanel from '../panels/map-panel';\r\nimport ConfirmButton from '../controls/confirm-button';\r\n\r\nexport default class MapCard extends React.Component {\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className=\"card map\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.map.name || \"unnamed map\"}</div>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"map name\" value={this.props.map.name} onChange={event => this.props.changeValue(this.props.map, \"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section centered\">\r\n                            <MapPanel\r\n                                map={this.props.map}\r\n                                mode=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.editMap(this.props.map)}>edit map</button>\r\n                            <ConfirmButton text=\"delete map\" callback={() => this.props.removeMap(this.props.map)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport MapFoliosCard from '../cards/information/map-folios-card';\r\nimport MapFolioListItem from '../list-items/map-folio-list-item';\r\nimport MapFolioCard from '../cards/map-folio-card';\r\nimport MapCard from '../cards/map-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class MapFoliosScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <MapFoliosCard mapFolios={this.props.mapFolios} />\r\n                );\r\n            }\r\n\r\n            var folios = [];\r\n            for (var n = 0; n !== this.props.mapFolios.length; ++n) {\r\n                var mapFolio = this.props.mapFolios[n];\r\n                folios.push(\r\n                    <MapFolioListItem\r\n                        key={mapFolio.id}\r\n                        mapFolio={mapFolio}\r\n                        selected={mapFolio === this.props.selection}\r\n                        setSelection={mapFolio => this.props.selectMapFolio(mapFolio)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var folio = null;\r\n            if (this.props.selection) {\r\n                var folioCards = [];\r\n\r\n                folioCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <MapFolioCard\r\n                            selection={this.props.selection}\r\n                            addMap={() => this.props.addMap(\"new map\")}\r\n                            removeMapFolio={() => this.props.removeMapFolio()}\r\n                            changeValue={(source, field, value) => this.props.changeValue(source, field, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                this.props.selection.maps.forEach(map => {\r\n                    folioCards.push(\r\n                        <div className=\"column\" key={map.id}>\r\n                            <MapCard\r\n                                map={map}\r\n                                editMap={map => this.props.editMap(map)}\r\n                                removeMap={map => this.props.removeMap(map)}\r\n                                changeValue={(source, type, value) => this.props.changeValue(source, type, value)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                if (this.props.selection.maps.length === 0) {\r\n                    folioCards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no maps</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                folio = (\r\n                    <div>\r\n                        <CardGroup\r\n                            content={folioCards}\r\n                            heading={this.props.selection.name || \"unnamed folio\"}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectMapFolio(null)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"map-builder row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addMapFolio(\"new map folio\")}>add a new map folio</button>\r\n                        {folios}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        {folio}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class CombatManagerCard extends React.Component {\r\n    render() {\r\n        var content = (\r\n            <div>\r\n                <div className=\"section\">here you can run a combat encounter by specifying a party and an encounter</div>\r\n                <div className=\"divider\"></div>\r\n                <div className=\"section\">below you will see a list of encounters that you have paused</div>\r\n                <div className=\"section\">you can resume a paused combat by selecting it</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <InfoCard getContent={() => content} />\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nimport MapPanel from '../panels/map-panel';\r\n\r\nexport default class CombatListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var combatName = this.props.combat.name;\r\n            if (!combatName) {\r\n                combatName = \"unnamed combat\";\r\n            }\r\n\r\n            var map = null;\r\n            if (this.props.combat.map) {\r\n                map = (\r\n                    <MapPanel\r\n                        map={this.props.combat.map}\r\n                        mode=\"thumbnail\"\r\n                        combatants={this.props.combat.combatants}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.combat)}>\r\n                    <div className=\"heading\">{combatName}</div>\r\n                    <div className=\"text\">paused at {this.props.combat.timestamp}</div>\r\n                    {map}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport PCCard from '../cards/pc-card';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport MapPanel from '../panels/map-panel';\r\nimport CardGroup from '../panels/card-group';\r\nimport CombatManagerCard from '../cards/information/combat-manager-card';\r\nimport CombatListItem from '../list-items/combat-list-item';\r\nimport Spin from '../controls/spin';\r\nimport HitPointGauge from '../panels/hit-point-gauge';\r\n\r\nexport default class CombatManagerScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedTokenID: null,  // The ID of the combatant that's selected\r\n            addingToMapID: null     // The ID of the combatant we're adding to the map\r\n        };\r\n    }\r\n\r\n    setSelectedTokenID(id) {\r\n        this.setState({\r\n            selectedTokenID: id\r\n        });\r\n    }\r\n\r\n    setAddingToMapID(id) {\r\n        this.setState({\r\n            addingToMapID: id\r\n        });\r\n    }\r\n\r\n    createCard(combatant) {\r\n        var mode = \"combat\";\r\n        if (this.props.combat.map) {\r\n            mode += \" tactical\";\r\n            var onMap = this.props.combat.map.items.find(i => i.id === combatant.id);\r\n            mode += onMap ? \" on-map\" : \" off-map\";\r\n        }\r\n\r\n        switch (combatant.type) {\r\n            case \"pc\":\r\n                return (\r\n                    <PCCard\r\n                        combatant={combatant}\r\n                        mode={mode}\r\n                        changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                        nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                        makeCurrent={combatant => this.props.makeCurrent(combatant)}\r\n                        makeActive={combatant => this.props.makeActive(combatant)}\r\n                        makeDefeated={combatant => this.props.makeDefeated(combatant)}\r\n                        removeCombatant={combatant => this.props.removeCombatant(combatant)}\r\n                        mapAdd={combatant => this.setAddingToMapID(combatant.id)}\r\n                        mapMove={(combatant, dir) => this.props.mapMove(combatant, dir)}\r\n                        mapRemove={combatant => this.props.mapRemove(combatant)}\r\n                        endTurn={combatant => this.props.endTurn(combatant)}\r\n                    />\r\n                );\r\n            case \"monster\":\r\n                return (\r\n                    <MonsterCard\r\n                        combatant={combatant}\r\n                        mode={mode}\r\n                        combat={this.props.combat}\r\n                        changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                        nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                        makeCurrent={combatant => this.props.makeCurrent(combatant)}\r\n                        makeActive={combatant => this.props.makeActive(combatant)}\r\n                        makeDefeated={combatant => this.props.makeDefeated(combatant)}\r\n                        removeCombatant={combatant => this.props.removeCombatant(combatant)}\r\n                        addCondition={(combatant) => this.props.addCondition(combatant)}\r\n                        editCondition={(combatant, condition) => this.props.editCondition(combatant, condition)}\r\n                        removeCondition={(combatant, conditionID) => this.props.removeCondition(combatant, conditionID)}\r\n                        nudgeConditionValue={(condition, type, delta) => this.props.nudgeValue(condition, type, delta)}\r\n                        changeConditionValue={(condition, type, value) => this.props.changeValue(condition, type, value)}\r\n                        mapAdd={combatant => this.setAddingToMapID(combatant.id)}\r\n                        mapMove={(combatant, dir) => this.props.mapMove(combatant, dir)}\r\n                        mapRemove={combatant => this.props.mapRemove(combatant)}\r\n                        endTurn={(combatant) => this.props.endTurn(combatant)}\r\n                        changeHP={(combatant, hp, temp) => this.props.changeHP(combatant, hp, temp)}\r\n                    />\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    addCombatantToMap(x, y) {\r\n        var combatant = this.props.combat.combatants.find(c => c.id === this.state.addingToMapID);\r\n        this.props.mapAdd(combatant, x, y);\r\n        this.setAddingToMapID(null);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var leftPaneContent = null;\r\n            var centrePaneContent = null;\r\n            var rightPaneContent = null;\r\n\r\n            if (this.props.combat) {\r\n                var current = [];\r\n                var pending = [];\r\n                var active = [];\r\n                var defeated = [];\r\n\r\n                this.props.combat.combatants.forEach(combatant => {\r\n                    if (combatant.current) {\r\n                        current.push(\r\n                            <div key={combatant.id}>\r\n                                {this.createCard(combatant)}\r\n                            </div>\r\n                        );\r\n                    }\r\n                    if (combatant.pending && !combatant.active && !combatant.defeated) {\r\n                        pending.push(\r\n                            <PendingCombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                makeActive={combatant => this.props.makeActive(combatant)}\r\n                            />\r\n                        );\r\n                    }\r\n                    if (!combatant.pending && combatant.active && !combatant.defeated) {\r\n                        active.push(\r\n                            <CombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                            />\r\n                        );\r\n                    }\r\n                    if (!combatant.pending && !combatant.active && combatant.defeated) {\r\n                        defeated.push(\r\n                            <CombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                            />\r\n                        );\r\n                    }\r\n                });\r\n\r\n                if (this.props.showHelp && (pending.length !== 0)) {\r\n                    var pendingHelp = (\r\n                        <div key=\"pending-help\">\r\n                            <InfoCard\r\n                                getContent={() =>\r\n                                    <div>\r\n                                        <div className=\"section\">these combatants are not yet part of the encounter</div>\r\n                                        <div className=\"section\">set initiative on each of them, then add them to the encounter</div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    );\r\n                    pending = [].concat(pendingHelp, pending);\r\n                }\r\n\r\n                if (this.props.showHelp && (current.length === 0)) {\r\n                    var activeHelp = (\r\n                        <div key=\"active-help\">\r\n                            <InfoCard\r\n                                getContent={() =>\r\n                                    <div>\r\n                                        <div className=\"section\">these are the combatants taking part in this encounter; you can select them to see their stat blocks (on the right)</div>\r\n                                        <div className=\"section\">to begin the encounter, select the first combatant and press the <b>start turn</b> button on their stat block</div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    );\r\n                    active = [].concat(activeHelp, active);\r\n                }\r\n\r\n                if (current.length === 0) {\r\n                    current.push(\r\n                        <InfoCard\r\n                            key=\"current\"\r\n                            getContent={() =>\r\n                                <div className=\"section\">the current initiative holder will be displayed here</div>\r\n                            }\r\n                        />\r\n                    );\r\n                }\r\n\r\n                var notifications = this.props.combat.notifications.map(n =>\r\n                    <Notification\r\n                        id={n.id}\r\n                        notification={n}\r\n                        close={(notification, removeCondition) => this.props.close(notification, removeCondition)}\r\n                    />\r\n                );\r\n\r\n                var mapSection = null;\r\n                if (this.props.combat.map) {\r\n                    mapSection = (\r\n                        <MapPanel\r\n                            map={this.props.combat.map}\r\n                            mode=\"combat\"\r\n                            showOverlay={this.state.addingToMapID !== null}\r\n                            combatants={this.props.combat.combatants}\r\n                            selectedItemID={this.state.selectedTokenID}\r\n                            setSelectedItemID={id => {\r\n                                if (id) {\r\n                                    this.setSelectedTokenID(id);\r\n                                }\r\n                            }}\r\n                            gridSquareClicked={(x, y) => this.addCombatantToMap(x, y)}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                var selectedCombatant = null;\r\n                if (this.state.selectedTokenID) {\r\n                    var combatant = this.props.combat.combatants.find(c => c.id === this.state.selectedTokenID);\r\n                    if (combatant && !combatant.current) {\r\n                        selectedCombatant = this.createCard(combatant);\r\n                    }\r\n                }\r\n                if (!selectedCombatant) {\r\n                    selectedCombatant = (\r\n                        <InfoCard\r\n                            key=\"selected\"\r\n                            getContent={() =>\r\n                                <div className=\"section\">select a pc or monster to see its details here</div>\r\n                            }\r\n                        />\r\n                    );\r\n                }\r\n\r\n                leftPaneContent = (\r\n                    <div className=\"combat-left\">\r\n                        <CardGroup\r\n                            heading=\"initiative holder\"\r\n                            content={current}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                centrePaneContent = (\r\n                    <div className=\"combat-centre\">\r\n                        {notifications}\r\n                        <CardGroup\r\n                            heading=\"waiting for intiative to be entered\"\r\n                            content={pending}\r\n                            hidden={pending.length === 0}\r\n                            showToggle={true}\r\n                        />\r\n                        {mapSection}\r\n                        <CardGroup\r\n                            heading=\"combatants in the encounter\"\r\n                            content={active}\r\n                            hidden={active.length === 0}\r\n                        />\r\n                        <CardGroup\r\n                            heading=\"defeated\"\r\n                            content={defeated}\r\n                            hidden={defeated.length === 0}\r\n                            showToggle={true}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                rightPaneContent = (\r\n                    <div className=\"combat-right\">\r\n                        <CardGroup\r\n                            heading=\"selected combatant\"\r\n                            content={[selectedCombatant]}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                var help = null;\r\n                if (this.props.showHelp) {\r\n                    help = (\r\n                        <CombatManagerCard />\r\n                    );\r\n                }\r\n\r\n                var combats = [];\r\n                this.props.combats.forEach(combat => {\r\n                    combats.push(\r\n                        <CombatListItem\r\n                            key={combat.id}\r\n                            combat={combat}\r\n                            setSelection={combat => this.props.resumeEncounter(combat)}\r\n                        />\r\n                    );\r\n                });\r\n\r\n                leftPaneContent = (\r\n                    <div className=\"combat-left\">\r\n                        {help}\r\n                        <button onClick={() => this.props.createCombat()}>start a new combat</button>\r\n                        {combats}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"combat-manager row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {leftPaneContent}\r\n                    </div>\r\n                    <div className=\"columns small-4 medium-4 large-6 scrollable list-column\">\r\n                        {centrePaneContent}\r\n                    </div>\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {rightPaneContent}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass Notification extends React.Component {\r\n    saveSuccess(notification) {\r\n        // Reduce save by 1\r\n        this.props.notification.condition.duration.count -= 1;\r\n        if (this.props.notification.condition.duration.count === 0) {\r\n            // Remove the condition\r\n            this.close(notification, true);\r\n        } else {\r\n            this.close(notification);\r\n        }\r\n    }\r\n\r\n    close(notification, removeCondition = false) {\r\n        this.props.close(notification, removeCondition);\r\n    }\r\n\r\n    render() {\r\n        var name = this.props.notification.combatant.displayName || this.props.notification.combatant.name || \"unnamed monster\";\r\n        switch (this.props.notification.type) {\r\n            case \"condition-save\":\r\n                return (\r\n                    <div key={this.props.notification.id} className=\"notification\">\r\n                        <div className=\"text\">\r\n                            {name} must make a {this.props.notification.condition.duration.saveType} save against dc {this.props.notification.condition.duration.saveDC}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <button onClick={() => this.saveSuccess(this.props.notification)}>success</button>\r\n                            <button onClick={() => this.close(this.props.notification)}>ok</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case \"condition-end\":\r\n                return (\r\n                    <div key={this.props.notification.id} className=\"notification\">\r\n                        <div className=\"text\">\r\n                            {name} is no longer affected by condition {this.props.notification.condition.name}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <button onClick={() => this.close(this.props.notification)}>ok</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass PendingCombatantRow extends React.Component {\r\n    getInformationText() {\r\n        if (this.props.selected) {\r\n            return \"selected\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.select) {\r\n            this.props.select(this.props.combatant);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"combatant-row \" + this.props.combatant.type;\r\n        if (this.props.combatant.current || this.props.selected) {\r\n            style += \" highlight\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={e => this.onClick(e)}>\r\n                <div className=\"name\">\r\n                    {this.props.combatant.displayName || this.props.combatant.name || \"combatant\"}\r\n                    <span className=\"info\">{this.getInformationText()}</span>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <Spin\r\n                        source={this.props.combatant}\r\n                        name=\"initiative\"\r\n                        label=\"initiative\"\r\n                        nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"initiative\", delta)}\r\n                    />\r\n                    <button onClick={e => { e.stopPropagation(); this.props.makeActive(this.props.combatant); }}>add to encounter</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CombatantRow extends React.Component {\r\n    getInformationText() {\r\n        if (this.props.combatant.current) {\r\n            return \"current turn\";\r\n        }\r\n\r\n        if (this.props.selected) {\r\n            return \"selected\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.select) {\r\n            this.props.select(this.props.combatant);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var notes = [];\r\n        if (this.props.combat.map) {\r\n            if (!this.props.combatant.pending && !this.props.combat.map.items.find(i => i.id === this.props.combatant.id)) {\r\n                notes.push(\r\n                    <div key=\"not-on-map\" className=\"note\">not on the map</div>\r\n                );\r\n            }\r\n        }\r\n\r\n        var content = null;\r\n\r\n        switch (this.props.combatant.type) {\r\n            case \"pc\":\r\n                content = (\r\n                    <div className=\"content\">\r\n                        <div className=\"section key-stats\">\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.initiative}</div>\r\n                                <div className=\"stat-label\">init</div>\r\n                            </div>\r\n                            <div className=\"key-stat wide\">\r\n                                <div className=\"stat-value\">{this.props.combatant.player ? this.props.combatant.player : \"-\"}</div>\r\n                            </div>\r\n                        </div>\r\n                        {notes}\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"monster\":\r\n                var hp = this.props.combatant.hp;\r\n                if (this.props.combatant.hpTemp > 0) {\r\n                    hp += \"+\" + this.props.combatant.hpTemp;\r\n                }\r\n                var gauge = null;\r\n                if (!this.props.combatant.pending) {\r\n                    gauge = (\r\n                        <HitPointGauge combatant={this.props.combatant} />\r\n                    );\r\n                }\r\n                var conditions = null;\r\n                if (this.props.combatant.conditions) {\r\n                    conditions = this.props.combatant.conditions.map(c => {\r\n                        var name = c.name;\r\n                        if (c.name === \"exhaustion\") {\r\n                            name += \" (\" + c.level + \")\";\r\n                        }\r\n                        if (c.name === \"custom\") {\r\n                            name = c.text;\r\n                        }\r\n                        if (c.duration) {\r\n                            name += \" \" + utils.conditionDurationText(c, this.props.combat);\r\n                        }\r\n                        var description = [];\r\n                        var text = utils.conditionText(c);\r\n                        for (var n = 0; n !== text.length; ++n) {\r\n                            description.push(<li key={n} className=\"condition-text\">{text[n]}</li>);\r\n                        }\r\n                        return (\r\n                            <div key={c.id} className=\"condition\">\r\n                                <div className=\"condition-name\">{name}</div>\r\n                                <ul>\r\n                                    {description}\r\n                                </ul>\r\n                            </div>\r\n                        );\r\n                    });\r\n                }\r\n                content = (\r\n                    <div className=\"content\">\r\n                        <div className=\"section key-stats\">\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.initiative}</div>\r\n                                <div className=\"stat-label\">init</div>\r\n                            </div>\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.ac}</div>\r\n                                <div className=\"stat-label\">ac</div>\r\n                            </div>\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{hp}</div>\r\n                                <div className=\"stat-label\">hp</div>\r\n                            </div>\r\n                        </div>\r\n                        {gauge}\r\n                        {conditions}\r\n                        {notes}\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        var style = \"combatant-row \" + this.props.combatant.type;\r\n        if (this.props.combatant.current || this.props.selected) {\r\n            style += \" highlight\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={e => this.onClick(e)}>\r\n                <div className=\"name\">\r\n                    {this.props.combatant.displayName || this.props.combatant.name || \"combatant\"}\r\n                    <span className=\"info\">{this.getInformationText()}</span>\r\n                </div>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport checked from \"../../resources/images/checked.svg\";\r\nimport unchecked from \"../../resources/images/unchecked.svg\";\r\n\r\n/*\r\n<Checkbox\r\n    label=\"LABEL\"\r\n    checked={BOOLEAN}\r\n    disabled={BOOLEAN}\r\n    changeValue={value => this.changeValue(SOURCEOBJECT, FIELDNAME, value)}\r\n/>\r\n*/\r\n\r\nexport default class Checkbox extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        this.props.changeValue(!this.props.checked);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className={this.props.disabled ? \"checkbox disabled\" : \"checkbox\"} onClick={e => this.click(e)}>\r\n                    <img className=\"image\" src={this.props.checked ? checked : unchecked} alt=\"check\" />\r\n                    <div className=\"checkbox-label\">{this.props.label}</div>\r\n                </div>\r\n            );\r\n\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\n/*\r\nvar options = [\r\n    {\r\n        id: \"one\",\r\n        text: \"One\",\r\n        disabled: false\r\n    },\r\n    {\r\n        id: \"two\",\r\n        text: \"Two\",\r\n        disabled: true\r\n    },\r\n    {\r\n        id: \"three\",\r\n        text: \"Three\",\r\n        disabled: false\r\n    }\r\n];\r\n\r\n<Selector\r\n    tabs={BOOLEAN}\r\n    options={options}\r\n    noBorder={BOOLEAN}\r\n    selectedID={CURRENT_OPTION_ID}\r\n    disabled={BOOLEAN}\r\n    select={optionID => this.changeValue(SOURCEOBJECT, FIELDNAME, optionID)}\r\n/>\r\n*/\r\n\r\nexport default class Selector extends React.Component {\r\n    render() {\r\n        try {\r\n            var style = (this.props.tabs) ? \"selector tabs\" : \"selector radio\";\r\n            if (this.props.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n            if (this.props.noBorder) {\r\n                style += \" no-border\";\r\n            }\r\n\r\n            var itemsPerRow = this.props.itemsPerRow ? this.props.itemsPerRow : this.props.options.length;\r\n            var rowCount = Math.ceil(this.props.options.length / itemsPerRow);\r\n            var rowContents = [];\r\n            for (var n = 0; n !== rowCount; ++n) {\r\n                rowContents.push([]);\r\n            }\r\n\r\n            this.props.options.forEach(option => {\r\n                var index = this.props.options.indexOf(option);\r\n                var rowIndex = Math.floor(index / itemsPerRow);\r\n                var row = rowContents[rowIndex];\r\n                row.push(\r\n                    <SelectorOption\r\n                        key={option.id}\r\n                        option={option}\r\n                        selected={option.id === this.props.selectedID}\r\n                        count={itemsPerRow}\r\n                        select={optionID => this.props.select(optionID)}\r\n                    />\r\n                );\r\n            });\r\n\r\n            var rowSections = rowContents.map(row => {\r\n                var index = rowContents.indexOf(row);\r\n                return <div key={index}>{row}</div>;\r\n            });\r\n\r\n            return (\r\n                <div className={style}>\r\n                    {rowSections}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass SelectorOption extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (!this.props.option.disabled) {\r\n            this.props.select(this.props.option.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var width = \"calc(((100% - 1px) / \" + this.props.count + \") - 2px )\";\r\n\r\n            var style = \"option\";\r\n            if (this.props.selected) {\r\n                style += \" selected\";\r\n            }\r\n            if (this.props.option.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div key={this.props.option.id} className={style} style={{ width: width }} title={this.props.option.text} onClick={e => this.click(e)}>\r\n                    {this.props.option.text}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Checkbox from '../controls/checkbox';\r\nimport Dropdown from '../controls/dropdown';\r\nimport Expander from '../controls/expander';\r\nimport Spin from '../controls/spin';\r\nimport Selector from '../controls/selector';\r\n\r\nexport default class AboutModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showDev: false,\r\n            optionID: \"abc\",\r\n            value: 0,\r\n            selected: false\r\n        };\r\n    }\r\n\r\n    setOption(optionID) {\r\n        this.setState({\r\n            optionID: optionID\r\n        });\r\n    }\r\n\r\n    setValue(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    setSelected(selected) {\r\n        this.setState({\r\n            selected: selected\r\n        });\r\n    }\r\n\r\n    getDevSection() {\r\n        if (this.state.showDev) {\r\n            var devOptions = [\"abc\", \"def\", \"ghi\", \"jkl\"].map(x => {\r\n                return {\r\n                    id: x,\r\n                    text: x\r\n                };\r\n            });\r\n\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"columns small-6 medium-6 large-6 end\">\r\n                        <div className=\"heading\">dev</div>\r\n                        <button onClick={() => this.setSelected(!this.state.selected)}>button</button>\r\n                        <ConfirmButton\r\n                            text=\"confirm\"\r\n                            callback={() => this.setSelected(!this.state.selected)}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"checkbox\"\r\n                            checked={this.state.selected}\r\n                            changeValue={value => this.setSelected(value)}\r\n                        />\r\n                        <Dropdown\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                        <Expander\r\n                            text=\"expander\"\r\n                            content={<div>content</div>}\r\n                        />\r\n                        <Spin\r\n                            source={this.state}\r\n                            name=\"value\"\r\n                            label=\"value\"\r\n                            factors={[1, 10, 100]}\r\n                            nudgeValue={delta => this.setValue(this.state.value + delta)}\r\n                        />\r\n                        <Selector\r\n                            tabs={true}\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                        <Selector\r\n                            tabs={false}\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className=\"about\">\r\n                    <div className=\"row\">\r\n                        <div className=\"columns small-6 medium-6 large-6 list-column\">\r\n                            <div className=\"heading\">about</div>\r\n                            <div className=\"section\">dojo by <a href=\"mailto:andy.aiken@live.co.uk\">andy aiken</a></div>\r\n                            <div className=\"section\">if you would like to contribut to this project, you can do so <a href=\"https://github.com/andyaiken/dojo\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></div>\r\n                            <div className=\"section\">dungeons and dragons copyright wizards of the coast</div>\r\n                        </div>\r\n                        <div className=\"columns small-6 medium-6 large-6 list-column\">\r\n                            <div className=\"heading\">options</div>\r\n                            <ConfirmButton text=\"clear all data\" callback={() => this.props.resetAll()} />\r\n                            <Checkbox\r\n                                label=\"show help cards\"\r\n                                checked={this.props.options.showHelp}\r\n                                changeValue={value => this.props.changeValue(this.props.options, \"showHelp\", value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {this.getDevSection()}\r\n                    <div className=\"row\">\r\n                        <div className=\"columns small-12 medium-12 large-12 list-column\">\r\n                            <div className=\"heading\">open game license</div>\r\n                            <div className=\"section\">The following text is the property of Wizards of the Coast, Inc. and is Copyright 2000 Wizards of the Coast, Inc (\"Wizards\"). All Rights Reserved.</div>\r\n                            <ol>\r\n                                <li>Definitions: (a)\"Contributors\" means the copyright and/or trademark owners who have contributed Open Game Content; (b)\"Derivative Material\" means copyrighted material including derivative works and translations (including into other computer languages), potation, modification, correction, addition, extension, upgrade, improvement, compilation, abridgment or other form in which an existing work may be recast, transformed or adapted; (c) \"Distribute\" means to reproduce, license, rent, lease, sell, broadcast, publicly display, transmit or otherwise distribute; (d)\"Open Game Content\" means the game mechanic and includes the methods, procedures, processes and routines to the extent such content does not embody the Product Identity and is an enhancement over the prior art and any additional content clearly identified as Open Game Content by the Contributor, and means any work covered by this License, including translations and derivative works under copyright law, but specifically excludes Product Identity. (e) \"Product Identity\" means product and product line names, logos and identifying marks including trade dress; artifacts; creatures characters; stories, storylines, plots, thematic elements, dialogue, incidents, language, artwork, symbols, designs, depictions, likenesses, formats, poses, concepts, themes and graphic, photographic and other visual or audio representations; names and descriptions of characters, spells, enchantments, personalities, teams, personas, likenesses and special abilities; places, locations, environments, creatures, equipment, magical or supernatural abilities or effects, logos, symbols, or graphic designs; and any other trademark or registered trademark clearly identified as Product identity by the owner of the Product Identity, and which specifically excludes the Open Game Content; (f) \"Trademark\" means the logos, names, mark, sign, motto, designs that are used by a Contributor to identify itself or its products or the associated products contributed to the Open Game License by the Contributor (g) \"Use\", \"Used\" or \"Using\" means to use, Distribute, copy, edit, format, modify, translate and otherwise create Derivative Material of Open Game Content. (h) \"You\" or \"Your\" means the licensee in terms of this agreement.</li>\r\n                                <li>The License: This License applies to any Open Game Content that contains a notice indicating that the Open Game Content may only be Used under and in terms of this License. You must affix such a notice to any Open Game Content that you Use. No terms may be added to or subtracted from this License except as described by the License itself. No other terms or conditions may be applied to any Open Game Content distributed using this License.</li>\r\n                                <li>Offer and Acceptance: By Using the Open Game Content You indicate Your acceptance of the terms of this License.</li>\r\n                                <li>Grant and Consideration: In consideration for agreeing to use this License, the Contributors grant You a perpetual, worldwide, royalty-free, non-exclusive license with the exact terms of this License to Use, the Open Game Content.</li>\r\n                                <li>Representation of Authority to Contribute: If You are contributing original material as Open Game Content, You represent that Your Contributions are Your original creation and/or You have sufficient rights to grant the rights conveyed by this License.</li>\r\n                                <li>Notice of License Copyright: You must update the COPYRIGHT NOTICE portion of this License to include the exact text of the COPYRIGHT NOTICE of any Open Game Content You are copying, modifying or distributing, and You must add the title, the copyright date, and the copyright holder's name to the COPYRIGHT NOTICE of any original Open Game Content you Distribute.</li>\r\n                                <li>Use of Product Identity: You agree not to Use any Product Identity, including as an indication as to compatibility, except as expressly licensed in another, independent Agreement with the owner of each element of that Product Identity. You agree not to indicate compatibility or co-adaptability with any Trademark or Registered Trademark in conjunction with a work containing Open Game Content except as expressly licensed in another, independent Agreement with the owner of such Trademark or Registered Trademark. The use of any Product Identity in Open Game Content does not constitute a challenge to the ownership of that Product Identity. The owner of any Product Identity used in Open Game Content shall retain all rights, title and interest in and to that Product Identity.</li>\r\n                                <li>Identification: If you distribute Open Game Content You must clearly indicate which portions of the work that you are distributing are Open Game Content.</li>\r\n                                <li>Updating the License: Wizards or its designated Agents may publish updated versions of this License. You may use any authorized version of this License to copy, modify and distribute any Open Game Content originally distributed under any version of this License.</li>\r\n                                <li>Copy of this License: You MUST include a copy of this License with every copy of the Open Game Content You Distribute.</li>\r\n                                <li>Use of Contributor Credits: You may not market or advertise the Open Game Content using the name of any Contributor unless You have written permission from the Contributor to do so.</li>\r\n                                <li>Inability to Comply: If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Open Game Content due to statute, judicial order, or governmental regulation then You may not Use any Open Game Material so affected.</li>\r\n                                <li>Termination: This License will terminate automatically if You fail to comply with all terms herein and fail to cure such breach within 30 days of becoming aware of the breach. All sublicenses shall survive the termination of this License.</li>\r\n                                <li>Reformation: If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable.</li>\r\n                                <li>COPYRIGHT NOTICE Open Game License v 1.0 Copyright 2000, Wizards of the Coast, Inc.</li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport Selector from '../controls/selector';\r\n\r\nexport default class DemographicsModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chart: \"challenge\"\r\n        };\r\n    }\r\n\r\n    selectChart(chart) {\r\n        this.setState({\r\n            chart: chart\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var demographics = null;\r\n\r\n            var allMonsters = [];\r\n            this.props.library.forEach(group => group.monsters.forEach(monster => allMonsters.push(monster)));\r\n            if (allMonsters.length !== 0) {\r\n                var buckets = [];\r\n                var maxBucketSize = 0;\r\n                var monsters = {};\r\n\r\n                switch (this.state.chart) {\r\n                    case \"challenge\":\r\n                        var challenges = [0, 0.125, 0.25, 0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\r\n                        challenges.forEach(cr => {\r\n                            buckets.push({\r\n                                value: cr,\r\n                                title: \"challenge \" + utils.challenge(cr)\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var cr = bucket.value;\r\n                            monsters[cr] = allMonsters.filter(monster => monster.challenge === cr);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var cr = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[cr].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    case \"size\":\r\n                        factory.SIZE_TYPES.forEach(size => {\r\n                            buckets.push({\r\n                                value: size,\r\n                                title: size\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var size = bucket.value;\r\n                            monsters[size] = allMonsters.filter(monster => monster.size === size);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var size = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[size].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    case \"type\":\r\n                        factory.CATEGORY_TYPES.forEach(type => {\r\n                            buckets.push({\r\n                                value: type,\r\n                                title: type\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var type = bucket.value;\r\n                            monsters[type] = allMonsters.filter(monster => monster.category === type);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var type = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[type].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n\r\n                var bars = [];\r\n                for (var index = 0; index !== buckets.length; ++index) {\r\n                    var bucket = buckets[index];\r\n                    var set = monsters[bucket.value];\r\n                    var count = set ? set.length : 0;\r\n                    bars.push(\r\n                        <div\r\n                            key={bucket.title}\r\n                            className=\"bar-container\"\r\n                            style={{\r\n                                width: \"calc((100% - 1px) / \" + buckets.length + \")\",\r\n                                left: \"calc((100% - 1px) * \" + index + \" / \" + buckets.length + \")\"\r\n                            }}\r\n                            title={bucket.title + \": \" + set.length + \" monsters\"}>\r\n                            <div\r\n                                className=\"bar-space\"\r\n                                style={{\r\n                                    height: \"calc((100% - 1px) * \" + (maxBucketSize - count) + \" / \" + maxBucketSize + \")\"\r\n                                }}>\r\n                            </div>\r\n                            <div\r\n                                className=\"bar\"\r\n                                style={{\r\n                                    height: \"calc((100% - 1px) * \" + count + \" / \" + maxBucketSize + \")\"\r\n                                }}>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                };\r\n\r\n                var chartOptions = [\r\n                    {\r\n                        id: \"challenge\",\r\n                        text: \"challenge rating\"\r\n                    },\r\n                    {\r\n                        id: \"size\",\r\n                        text: \"size\"\r\n                    },\r\n                    {\r\n                        id: \"type\",\r\n                        text: \"type\"\r\n                    }\r\n                ]\r\n\r\n                demographics = (\r\n                    <div>\r\n                        <Selector\r\n                            options={chartOptions}\r\n                            selectedID={this.state.chart}\r\n                            select={optionID => this.selectChart(optionID)}\r\n                        />\r\n                        <div className=\"chart\">\r\n                            <div className=\"plot\">{bars}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return demographics;\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport Checkbox from '../controls/checkbox';\r\nimport Dropdown from '../controls/dropdown';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport Spin from '../controls/spin';\r\nimport AbilityScorePanel from '../panels/ability-score-panel';\r\nimport TraitsPanel from '../panels/traits-panel';\r\nimport Selector from '../controls/selector';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class MonsterEditorModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            monster: props.monster,\r\n            page: \"overview\",\r\n            showFilter: false,\r\n            helpSection: \"speed\",\r\n            filter: {\r\n                size: true,\r\n                type: true,\r\n                subtype: false,\r\n                alignment: false,\r\n                challenge: true,\r\n            }\r\n        };\r\n    }\r\n\r\n    setPage(page) {\r\n        var sections = this.getHelpOptionsForPage(page);\r\n        this.setState({\r\n            page: page,\r\n            helpSection: sections[0]\r\n        });\r\n    }\r\n\r\n    toggleFilter() {\r\n        this.setState({\r\n            showFilter: !this.state.showFilter\r\n        });\r\n    }\r\n\r\n    setHelpSection(section) {\r\n        this.setState({\r\n            helpSection: section\r\n        });\r\n    }\r\n\r\n    toggleMatch(type) {\r\n        // eslint-disable-next-line\r\n        this.state.filter[type] = !this.state.filter[type];\r\n        this.setState({\r\n            filter: this.state.filter\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Helper methods\r\n\r\n    getHelpOptionsForPage(page) {\r\n        switch (page) {\r\n            case \"overview\":\r\n                return [\"speed\", \"senses\", \"languages\", \"equipment\"];\r\n            case \"abilities\":\r\n                return [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\", \"saves\", \"skills\"];\r\n            case \"combat\":\r\n                return [\"armor class\", \"hit dice\", \"resistances\", \"vulnerabilities\", \"immunities\", \"conditions\"];\r\n            case \"actions\":\r\n                return [\"actions\"];\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    getMonsters() {\r\n        var monsters = [];\r\n        this.props.library.forEach(group => {\r\n            group.monsters.forEach(monster => {\r\n                var match = true;\r\n\r\n                if (this.state.monster.id === monster.id) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.size && (this.state.monster.size !== monster.size)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.type && (this.state.monster.category !== monster.category)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.subtype && (this.state.monster.tag !== monster.tag)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.alignment && (this.state.monster.alignment !== monster.alignment)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.challenge && (this.state.monster.challenge !== monster.challenge)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (match) {\r\n                    monsters.push(monster);\r\n                }\r\n            })\r\n        });\r\n\r\n        return monsters;\r\n    }\r\n\r\n    setRandomValue(field, monsters, notify) {\r\n        var index = Math.floor(Math.random() * monsters.length);\r\n        var m = monsters[index];\r\n\r\n        var source = m;\r\n        var value = null;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                value = source[token];\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n\r\n        this.changeValue(field, value, notify);\r\n    }\r\n\r\n    geneSplice(monsters) {\r\n        [\r\n            \"speed\",\r\n            \"senses\",\r\n            \"languages\",\r\n            \"equipment\",\r\n            \"abilityScores.str\",\r\n            \"abilityScores.dex\",\r\n            \"abilityScores.con\",\r\n            \"abilityScores.int\",\r\n            \"abilityScores.wis\",\r\n            \"abilityScores.cha\",\r\n            \"savingThrows\",\r\n            \"skills\",\r\n            \"ac\",\r\n            \"hitDice\",\r\n            \"damage.resist\",\r\n            \"damage.vulnerable\",\r\n            \"damage.immune\",\r\n            \"conditionImmunities\"\r\n        ].forEach(field => {\r\n            this.setRandomValue(field, monsters, false);\r\n        });\r\n\r\n        factory.TRAIT_TYPES.forEach(type => {\r\n            // Clear current traits of this type\r\n            var current = this.state.monster.traits.filter(t => t.type === type);\r\n            current.forEach(c => {\r\n                var index = this.state.monster.traits.findIndex(t => t === c);\r\n                this.state.monster.traits.splice(index, 1);\r\n            })\r\n\r\n            // Get all traits of this type\r\n            var traits = [];\r\n            monsters.forEach(m => {\r\n                m.traits.filter(t => t.type === type)\r\n                    .forEach(t => traits.push(t));\r\n            });\r\n\r\n            // Collate by name\r\n            var distinct = [];\r\n            traits.forEach(t => {\r\n                var current = distinct.find(d => d.trait.name === t.name);\r\n                if (current) {\r\n                    current.count += 1;\r\n                } else {\r\n                    distinct.push({\r\n                        trait: t,\r\n                        count: 1\r\n                    });\r\n                }\r\n            });\r\n\r\n            // If any are common to all monsters, copy them and remove from the candidates\r\n            var addedIDs = [];\r\n            distinct.filter(d => d.count === monsters.length)\r\n                .forEach(d => {\r\n                    this.copyTrait(d.trait);\r\n                    addedIDs.push(d.trait.id);\r\n                });\r\n            addedIDs.forEach(id => {\r\n                var index = distinct.findIndex(d => d.trait.id === id);\r\n                distinct.splice(index, 1);\r\n            });\r\n\r\n            var avg = traits.length / monsters.length;\r\n            while (this.state.monster.traits.filter(t => t.type === type).length < avg) {\r\n                var index = Math.floor(Math.random() * distinct.length);\r\n                var t = distinct[index].trait;\r\n                this.copyTrait(t);\r\n                distinct.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    addTrait(type) {\r\n        var trait = factory.createTrait();\r\n        trait.type = type;\r\n        trait.name = \"New \" + this.getActionTypeName(type, false).toLowerCase();\r\n        this.state.monster.traits.push(trait);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    addRandomTrait(type, monsters) {\r\n        var traits = [];\r\n        monsters.forEach(m => {\r\n            m.traits.filter(t => t.type === type)\r\n                .forEach(t => {\r\n                    traits.push(t);\r\n                });\r\n        });\r\n\r\n        var index = Math.floor(Math.random() * traits.length);\r\n        var trait = traits[index];\r\n\r\n        this.copyTrait(trait);\r\n    }\r\n\r\n    removeTrait(trait) {\r\n        var index = this.state.monster.traits.indexOf(trait);\r\n        this.state.monster.traits.splice(index, 1);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    getActionTypeName(type, plural) {\r\n        var name = utils.traitType(type);\r\n        if (plural) {\r\n            name += \"s\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    copyTrait(trait) {\r\n        var copy = JSON.parse(JSON.stringify(trait));\r\n        copy.id = utils.guid();\r\n        this.state.monster.traits.push(copy);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    changeTrait(trait, field, value) {\r\n        trait[field] = value;\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    nudgeValue(field, delta) {\r\n        var source = this.state.monster;\r\n        var value = null;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                value = source[token];\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n\r\n        var newValue = null;\r\n        if (field === \"challenge\") {\r\n            newValue = utils.nudgeChallenge(value, delta);\r\n        } else {\r\n            newValue = value + delta;\r\n        }\r\n\r\n        this.changeValue(field, newValue);\r\n    }\r\n\r\n    changeValue(field, value, notify = true) {\r\n        var source = this.state.monster;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                source[token] = value;\r\n\r\n                if ((field === \"abilityScores.con\") || (field === \"size\") || (field === \"hitDice\")) {\r\n                    var sides = utils.hitDieType(this.state.monster.size);\r\n                    var conMod = Math.floor((this.state.monster.abilityScores.con - 10) / 2)\r\n                    var hpPerDie = ((sides + 1) / 2) + conMod;\r\n                    var hp = Math.floor(this.state.monster.hitDice * hpPerDie);\r\n                    // eslint-disable-next-line\r\n                    this.state.monster.hpMax = hp;\r\n                }  \r\n\r\n                if (notify) {\r\n                    this.setState({\r\n                        monster: this.state.monster\r\n                    });\r\n                }\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // HTML render methods\r\n\r\n    getHelpSection(monsters) {\r\n        switch (this.state.helpSection) {\r\n            case \"speed\":\r\n                return this.getValueSection(\"speed\", \"text\", monsters);\r\n            case \"senses\":\r\n                return this.getValueSection(\"senses\", \"text\", monsters);\r\n            case \"languages\":\r\n                return this.getValueSection(\"languages\", \"text\", monsters);\r\n            case \"equipment\":\r\n                return this.getValueSection(\"equipment\", \"text\", monsters);\r\n            case \"str\":\r\n                return this.getValueSection(\"abilityScores.str\", \"number\", monsters);\r\n            case \"dex\":\r\n                return this.getValueSection(\"abilityScores.dex\", \"number\", monsters);\r\n            case \"con\":\r\n                return this.getValueSection(\"abilityScores.con\", \"number\", monsters);\r\n            case \"int\":\r\n                return this.getValueSection(\"abilityScores.int\", \"number\", monsters);\r\n            case \"wis\":\r\n                return this.getValueSection(\"abilityScores.wis\", \"number\", monsters);\r\n            case \"cha\":\r\n                return this.getValueSection(\"abilityScores.cha\", \"number\", monsters);\r\n            case \"saves\":\r\n                return this.getValueSection(\"savingThrows\", \"text\", monsters);\r\n            case \"skills\":\r\n                return this.getValueSection(\"skills\", \"text\", monsters);\r\n            case \"armor class\":\r\n                return this.getValueSection(\"ac\", \"number\", monsters);\r\n            case \"hit dice\":\r\n                return this.getValueSection(\"hitDice\", \"number\", monsters);\r\n            case \"resistances\":\r\n                return this.getValueSection(\"damage.resist\", \"text\", monsters);\r\n            case \"vulnerabilities\":\r\n                return this.getValueSection(\"damage.vulnerable\", \"text\", monsters);\r\n            case \"immunities\":\r\n                return this.getValueSection(\"damage.immune\", \"text\", monsters);\r\n            case \"conditions\":\r\n                return this.getValueSection(\"conditionImmunities\", \"text\", monsters);\r\n            case \"actions\":\r\n                return this.getActionsSection(monsters);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    getValueSection(field, dataType, monsters) {\r\n        var values = monsters\r\n            .map(m => {\r\n                var tokens = field.split(\".\");\r\n                var source = m;\r\n                var value = null;\r\n                tokens.forEach(token => {\r\n                    if (token === tokens[tokens.length - 1]) {\r\n                        value = source[token];\r\n                    } else {\r\n                        source = source[token];\r\n                    }\r\n                });\r\n                if ((dataType === \"text\") && (value === \"\")) {\r\n                    value = null;\r\n                }\r\n                return value;\r\n            })\r\n            .filter(v => v !== null);\r\n\r\n        var distinct = [];\r\n        if (dataType === \"number\") {\r\n            var min = null, max = null;\r\n            values.forEach(v => {\r\n                if ((min === null) || (v < min)) {\r\n                    min = v;\r\n                }\r\n                if ((max === null) || (v > max)) {\r\n                    max = v;\r\n                }\r\n            });\r\n            if ((min !== null) && (max !== null)) {\r\n                for (var n = min; n <= max; ++n) {\r\n                    distinct.push({\r\n                        value: n,\r\n                        count: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        values.forEach(v => {\r\n            var current = distinct.find(d => d.value === v);\r\n            if (current) {\r\n                current.count += 1;\r\n            } else {\r\n                distinct.push({\r\n                    value: v,\r\n                    count: 1\r\n                });\r\n            }\r\n        });\r\n\r\n        switch (dataType) {\r\n            case \"number\":\r\n                utils.sortByValue(distinct);\r\n                break;\r\n            case \"text\":\r\n                utils.sortByCount(distinct);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        if (dataType === \"text\") {\r\n            var count = monsters.length - values.length;\r\n            if (count !== 0) {\r\n                distinct.push({\r\n                    value: \"\",\r\n                    count: monsters.length - values.length\r\n                });\r\n            }\r\n        }\r\n\r\n        var valueSections = distinct.map(d => {\r\n            var width = 100 * d.count / monsters.length;\r\n            return (\r\n                <div className=\"row small-up-3 medium-up-3 large-up-3 value-list\" key={distinct.indexOf(d)}>\r\n                    <div className=\"column\">\r\n                        <div className=\"text-container\">\r\n                            {d.value || \"(none specified)\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar\" style={{ width: width + \"%\" }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <button onClick={() => this.changeValue(field, d.value)}>use this value</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {valueSections}\r\n                <button onClick={() => this.setRandomValue(field, monsters, true)}>select random value</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionsSection(monsters) {\r\n        var rows = [];\r\n        rows.push(\r\n            <div className=\"row small-up-3 medium-up-3 large-up-3 value-list\" key=\"header\">\r\n                <div className=\"column\">\r\n                    <div className=\"text-container\">\r\n                        <b>type</b>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"text-container number\">\r\n                        <b>average number</b>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"text-container number\">\r\n                        <b>min - max</b>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        factory.TRAIT_TYPES.forEach(type => {\r\n            var min = null, max = null, count = null;\r\n            monsters.forEach(m => {\r\n                var n = m.traits.filter(t => t.type === type).length;\r\n                if ((min === null) || (n < min)) {\r\n                    min = n;\r\n                }\r\n                if ((max === null) || (n > max)) {\r\n                    max = n;\r\n                }\r\n                count += n;\r\n            });\r\n            var avg = Math.round(count / monsters.length);    \r\n\r\n            rows.push(\r\n                <div className=\"row small-up-4 medium-up-4 large-up-4 value-list\" key={type}>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container disabled\" : \"text-container\"}>\r\n                            {this.getActionTypeName(type, true)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container number disabled\" : \"text-container number\"}>\r\n                            {avg}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container number disabled\" : \"text-container number\"}>\r\n                            {min} - {max}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <button className={count === 0 ? \"disabled\" : \"\"} onClick={() => this.addRandomTrait(type, monsters)}>add random</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {rows}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFilterCard(monsters) {\r\n        var similar = (\r\n            <div className=\"section\">\r\n                {monsters.length} similar monsters\r\n            </div>\r\n        );\r\n\r\n        var filterContent = null;\r\n        if (this.state.showFilter) {\r\n            filterContent = (\r\n                <div>\r\n                    <Checkbox\r\n                        label={\"size \" + this.state.monster.size}\r\n                        checked={this.state.filter.size}\r\n                        changeValue={value => this.toggleMatch(\"size\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={\"type \" + this.state.monster.category}\r\n                        checked={this.state.filter.type}\r\n                        changeValue={value => this.toggleMatch(\"type\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={this.state.monster.tag ? \"subtype \" + this.state.monster.tag : \"subtype\"}\r\n                        checked={this.state.filter.subtype}\r\n                        disabled={!this.state.monster.tag}\r\n                        changeValue={value => this.toggleMatch(\"subtype\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={this.state.monster.alignment ? \"alignment \" + this.state.monster.alignment : \"alignment\"}\r\n                        checked={this.state.filter.alignment}\r\n                        disabled={!this.state.monster.alignment}\r\n                        changeValue={value => this.toggleMatch(\"alignment\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={\"challenge rating \" + utils.challenge(this.state.monster.challenge)}\r\n                        checked={this.state.filter.challenge}\r\n                        changeValue={value => this.toggleMatch(\"challenge\")}\r\n                    />\r\n                    <div className=\"divider\"></div>\r\n                    <button className={monsters.length < 2 ? \"disabled\" : \"\"} onClick={() => this.geneSplice(monsters)}>build random monster</button>\r\n                    <div className=\"divider\"></div>\r\n                    {similar}\r\n                </div>\r\n            );\r\n        } else {\r\n            filterContent = (\r\n                <div>\r\n                    {similar}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">similar monsters</div>\r\n                        <img className={this.state.showFilter ? \"image rotate\" : \"image\"} src={arrow} alt=\"arrow\" onClick={() => this.toggleFilter()} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {filterContent}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMonsterCards(monsters) {\r\n        var sorted = utils.sort(monsters);\r\n        var monsterCards = sorted.map(m => (\r\n            <div className=\"section\" key={m.id}>\r\n                <MonsterCard\r\n                    combatant={m}\r\n                    mode={\"template \" + this.state.page}\r\n                    copyTrait={trait => this.copyTrait(trait)}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return monsterCards;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var pages = [\r\n                {\r\n                    id: 'overview',\r\n                    text: 'overview'\r\n                },\r\n                {\r\n                    id: 'abilities',\r\n                    text: 'abilities'\r\n                },\r\n                {\r\n                    id: 'combat',\r\n                    text: 'combat'\r\n                },\r\n                {\r\n                    id: 'actions',\r\n                    text: 'actions'\r\n                },\r\n            ];\r\n\r\n            var monsters = [];\r\n            if (this.props.showMonsters) {\r\n                monsters = this.getMonsters();\r\n            }\r\n\r\n            var content = null;\r\n            switch (this.state.page) {\r\n                case 'overview':\r\n                    var catOptions = factory.CATEGORY_TYPES.map(cat => { return { id: cat, text: cat }; });\r\n                    var sizeOptions = factory.SIZE_TYPES.map(size => { return { id: size, text: size }; });\r\n\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">name</div>\r\n                                <input type=\"text\" value={this.state.monster.name} onChange={event => this.changeValue(\"name\", event.target.value)} />\r\n                                <div className=\"subheading\">size</div>\r\n                                <Dropdown\r\n                                    options={sizeOptions}\r\n                                    selectedID={this.state.monster.size}\r\n                                    select={optionID => this.changeValue(\"size\", optionID)}\r\n                                />\r\n                                <div className=\"subheading\">type</div>\r\n                                <Dropdown\r\n                                    options={catOptions}\r\n                                    selectedID={this.state.monster.category}\r\n                                    select={optionID => this.changeValue(\"category\", optionID)}\r\n                                />\r\n                                <div className=\"subheading\">subtype</div>\r\n                                <input type=\"text\" value={this.state.monster.tag} onChange={event => this.changeValue(\"tag\", event.target.value)} />\r\n                                <div className=\"subheading\">alignment</div>\r\n                                <input type=\"text\" value={this.state.monster.alignment} onChange={event => this.changeValue(\"alignment\", event.target.value)} />\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">challenge rating</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"challenge\"\r\n                                    display={value => utils.challenge(value)}\r\n                                    nudgeValue={delta => this.nudgeValue(\"challenge\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">speed</div>\r\n                                <input type=\"text\" value={this.state.monster.speed} onChange={event => this.changeValue(\"speed\", event.target.value)} />\r\n                                <div className=\"subheading\">senses</div>\r\n                                <input type=\"text\" value={this.state.monster.senses} onChange={event => this.changeValue(\"senses\", event.target.value)} />\r\n                                <div className=\"subheading\">languages</div>\r\n                                <input type=\"text\" value={this.state.monster.languages} onChange={event => this.changeValue(\"languages\", event.target.value)} />\r\n                                <div className=\"subheading\">equipment</div>\r\n                                <input type=\"text\" value={this.state.monster.equipment} onChange={event => this.changeValue(\"equipment\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'abilities':\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">ability scores</div>\r\n                                <AbilityScorePanel\r\n                                    edit={true}\r\n                                    combatant={this.state.monster}\r\n                                    nudgeValue={(source, type, delta) => this.nudgeValue(type, delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">saving throws</div>\r\n                                <input type=\"text\" value={this.state.monster.savingThrows} onChange={event => this.changeValue(\"savingThrows\", event.target.value)} />\r\n                                <div className=\"subheading\">skills</div>\r\n                                <input type=\"text\" value={this.state.monster.skills} onChange={event => this.changeValue(\"skills\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'combat':\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">armor class</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"ac\"\r\n                                    nudgeValue={delta => this.nudgeValue(\"ac\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">hit dice</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"hitDice\"\r\n                                    display={value => value + \"d\" + utils.hitDieType(this.state.monster.size)}\r\n                                    nudgeValue={delta => this.nudgeValue(\"hitDice\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">hit points</div>\r\n                                <div className=\"hp-value\">{this.state.monster.hpMax} hp</div>\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">damage resistances</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.resist} onChange={event => this.changeValue(\"damage.resist\", event.target.value)} />\r\n                                <div className=\"subheading\">damage vulnerabilities</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.vulnerable} onChange={event => this.changeValue(\"damage.vulnerable\", event.target.value)} />\r\n                                <div className=\"subheading\">damage immunities</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.immune} onChange={event => this.changeValue(\"damage.immune\", event.target.value)} />\r\n                                <div className=\"subheading\">condition immunities</div>\r\n                                <input type=\"text\" value={this.state.monster.conditionImmunities} onChange={event => this.changeValue(\"conditionImmunities\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'actions':\r\n                    content = (\r\n                        <TraitsPanel\r\n                            combatant={this.state.monster}\r\n                            edit={true}\r\n                            addTrait={type => this.addTrait(type)}\r\n                            removeTrait={trait => this.removeTrait(trait)}\r\n                            changeTrait={(trait, type, value) => this.changeTrait(trait, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                default:\r\n                    // Do nothing\r\n                    break;\r\n            }\r\n\r\n            var help = null;\r\n            if (this.props.showMonsters && (monsters.length > 1)) {\r\n                var selector = null;\r\n                if (this.getHelpOptionsForPage(this.state.page).length > 1) {\r\n                    var options = this.getHelpOptionsForPage(this.state.page).map(s => {\r\n                        return {\r\n                            id: s,\r\n                            text: s\r\n                        };\r\n                    });\r\n                    selector = (\r\n                        <Selector\r\n                            tabs={false}\r\n                            options={options}\r\n                            selectedID={this.state.helpSection}\r\n                            select={optionID => this.setHelpSection(optionID)}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                help = (\r\n                    <div className=\"monster-help\">\r\n                        <div className=\"subheading\">information from similar monsters</div>\r\n                        {selector}\r\n                        {this.getHelpSection(monsters)}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var monsterList = null;\r\n            if (this.props.showMonsters) {\r\n                monsterList = (\r\n                    <div className=\"columns small-4 medium-4 large-4 scrollable\">\r\n                        {this.getFilterCard(monsters)}\r\n                        {this.getMonsterCards(monsters)}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"row\" style={{ height: \"100%\", margin: \"0 -15px\" }}>\r\n                    <div className={this.props.showMonsters ? \"columns small-8 medium-8 large-8 scrollable\" : \"columns small-12 medium-12 large-12 scrollable\"} style={{ transition: \"none\" }}>\r\n                        <div className=\"section\">\r\n                            <Selector\r\n                                tabs={true}\r\n                                options={pages}\r\n                                selectedID={this.state.page}\r\n                                select={optionID => this.setPage(optionID)}\r\n                            />\r\n                            {content}\r\n                            {help}\r\n                        </div>\r\n                    </div>\r\n                    {monsterList}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as factory from '../../models/factory';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport Radial from '../controls/radial';\r\n\r\nexport default class MapTileCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var terrainOptions = factory.TERRAIN_TYPES.map(function (t) {\r\n                return { id: t, text: t };\r\n            });\r\n\r\n            return (\r\n                <div className=\"card map-tile\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">map tile</div>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"subheading\">size</div>\r\n                        <div className=\"section\">{this.props.tile.width} sq x {this.props.tile.height} sq</div>\r\n                        <div className=\"section\">{this.props.tile.width * 5} ft x {this.props.tile.height * 5} ft</div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">terrain</div>\r\n                        <Dropdown\r\n                            options={terrainOptions}\r\n                            placeholder=\"select terrain\"\r\n                            selectedID={this.props.tile.terrain}\r\n                            select={optionID => this.props.changeValue(this.props.tile, \"terrain\", optionID)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">move</div>\r\n                        <div className=\"section centered\">\r\n                            <Radial direction=\"out\" click={dir => this.props.moveMapItem(this.props.tile, dir)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">resize</div>\r\n                        <div className=\"section centered\">\r\n                            <Radial direction=\"both\" click={(dir, dir2) => this.props.resizeMapItem(this.props.tile, dir, dir2)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.cloneMapItem(this.props.tile)}>clone tile</button>\r\n                            <button onClick={() => this.props.removeMapItem(this.props.tile)}>remove tile</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport MapTileCard from '../cards/map-tile-card';\r\nimport MapPanel from '../panels/map-panel';\r\n\r\nexport default class MapEditorModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            map: props.map,\r\n            selectedTileID: null\r\n        };\r\n    }\r\n\r\n    setSelectedTileID(id) {\r\n        this.setState({\r\n            selectedTileID: id\r\n        });\r\n    }\r\n\r\n    addMapTile(x, y) {\r\n        var tile = factory.createMapItem();\r\n        tile.x = x;\r\n        tile.y = y;\r\n        this.state.map.items.push(tile);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: tile.id\r\n        });\r\n    }\r\n\r\n    moveMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                item.y -= 1;\r\n                break;\r\n            case \"E\":\r\n                item.x += 1;\r\n                break;\r\n            case \"S\":\r\n                item.y += 1;\r\n                break;\r\n            case \"W\":\r\n                item.x -= 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    bigMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                item.y -= 1;\r\n                item.height += 1;\r\n                break;\r\n            case \"E\":\r\n                item.width += 1;\r\n                break;\r\n            case \"S\":\r\n                item.height += 1;\r\n                break;\r\n            case \"W\":\r\n                item.x -= 1;\r\n                item.width += 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    smallMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                if (item.height > 1) {\r\n                    item.y += 1;\r\n                    item.height -= 1;\r\n                }\r\n                break;\r\n            case \"E\":\r\n                if (item.width > 1) {\r\n                    item.width -= 1;\r\n                }\r\n                break;\r\n            case \"S\":\r\n                if (item.height > 1) {\r\n                    item.height -= 1;\r\n                }\r\n                break;\r\n            case \"W\":\r\n                if (item.width > 1) {\r\n                    item.x += 1;\r\n                    item.width -= 1;\r\n                }\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    resizeMapItem(item, dir, dir2) {\r\n        switch (dir2) {\r\n            case \"in\":\r\n                this.smallMapItem(item, dir);\r\n                break;\r\n            case \"out\":\r\n                this.bigMapItem(item, dir);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n    }\r\n\r\n    cloneMapItem(item) {\r\n        var copy = JSON.parse(JSON.stringify(item));\r\n        copy.id = utils.guid();\r\n        copy.x += 1;\r\n        copy.y += 1;\r\n        this.state.map.items.push(copy);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: copy.id\r\n        });\r\n    }\r\n\r\n    removeMapItem(item) {\r\n        var index = this.state.map.items.indexOf(item);\r\n        this.state.map.items.splice(index, 1);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: null\r\n        });\r\n    }\r\n\r\n    changeValue(source, field, value) {\r\n        source[field] = value;\r\n        \r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var tools = null;\r\n            if (this.state.selectedTileID) {\r\n                var item = this.state.map.items.find(i => i.id === this.state.selectedTileID);\r\n                tools = (\r\n                    <div className=\"tools\">\r\n                        <MapTileCard\r\n                            tile={item}\r\n                            moveMapItem={(item, dir) => this.moveMapItem(item, dir)}\r\n                            resizeMapItem={(item, dir, dir2) => this.resizeMapItem(item, dir, dir2)}\r\n                            cloneMapItem={item => this.cloneMapItem(item)}\r\n                            removeMapItem={item => this.removeMapItem(item)}\r\n                            changeValue={(source, field, value) => this.changeValue(source, field, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                tools = (\r\n                    <div className=\"tools\">\r\n                        <p>to add a new tile to the map, double-click on an empty grid square</p>\r\n                        <p>to edit an existing tile, click on it once to select it</p>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"map-editor\">\r\n                    {tools}\r\n                    <MapPanel\r\n                        map={this.state.map}\r\n                        mode=\"edit\"\r\n                        selectedItemID={this.state.selectedTileID}\r\n                        setSelectedItemID={id => this.setSelectedTileID(id)}\r\n                        addMapTile={(x, y) => this.addMapTile(x, y)}\r\n                    />\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport Selector from '../controls/selector';\r\nimport MapPanel from '../panels/map-panel';\r\nimport DifficultyChartPanel from '../panels/difficulty-chart-panel';\r\n\r\nexport default class CombatStartModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            combat: props.combat\r\n        }\r\n    }\r\n\r\n    setParty(partyID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.partyID = partyID;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setEncounter(encounterID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.encounterID = encounterID;\r\n        var enc = this.props.encounters.find(enc => enc.id === encounterID);\r\n        // eslint-disable-next-line\r\n        this.state.combat.monsterNames = utils.getMonsterNames(enc);\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setFolioID(id) {\r\n        if (id) {\r\n            var folio = this.props.mapFolios.find(f => f.id === id);\r\n            // eslint-disable-next-line\r\n            this.state.combat.folioID = folio.id;\r\n            // eslint-disable-next-line\r\n            this.state.combat.mapID = folio.maps.length === 1 ? folio.maps[0].id : null;\r\n        } else {\r\n            // eslint-disable-next-line\r\n            this.state.combat.folioID = null;\r\n            // eslint-disable-next-line\r\n            this.state.combat.mapID = null;    \r\n        }\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    setMapID(id) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.mapID = id;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    setWave(waveID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.waveID = waveID;\r\n        var enc = this.props.encounters.find(enc => enc.id === this.state.combat.encounterID);\r\n        var wave = enc.waves.find(w => w.id === waveID);\r\n        // eslint-disable-next-line\r\n        this.state.combat.monsterNames = utils.getMonsterNames(wave);\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setEncounterInitMode(mode) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.encounterInitMode = mode;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    changeName(slotID, index, name) {\r\n        var slot = this.state.combat.monsterNames.find(s => s.id === slotID);\r\n        if (slot) {\r\n            slot.names[index] = name;\r\n            this.setState({\r\n                combat: this.state.combat\r\n            });\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    getPartySection() {\r\n        if (this.props.parties.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not defined any parties</div>\r\n            );\r\n        }\r\n\r\n        var partyOptions = this.props.parties.map(party => {\r\n            return {\r\n                id: party.id,\r\n                text: party.name || \"unnamed party\"\r\n            };\r\n        });\r\n\r\n        var partyContent = null;\r\n        if (this.state.combat.partyID) {\r\n            var selectedParty = this.props.parties.find(p => p.id === this.state.combat.partyID);\r\n            var pcs = selectedParty.pcs.filter(pc => pc.active);\r\n\r\n            var pcSections = pcs.map(pc => \r\n                <li key={pc.id}>\r\n                    {pc.name || \"unnamed pc\"} (level {pc.level})\r\n                </li>\r\n            );\r\n\r\n            if (pcSections.length === 0) {\r\n                pcSections.push(\r\n                    <li key={\"empty\"}>no pcs</li>\r\n                );\r\n            }\r\n    \r\n            partyContent = (\r\n                <div>\r\n                    <div className=\"subheading\">pcs</div>\r\n                    <ul>{pcSections}</ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">party</div>\r\n                <Dropdown\r\n                    options={partyOptions}\r\n                    placeholder=\"select party...\"\r\n                    selectedID={this.state.combat.partyID}\r\n                    select={optionID => this.setParty(optionID)}\r\n                />\r\n                {partyContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getEncounterSection() {\r\n        if (this.props.encounters.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not built any encounters</div>\r\n            );\r\n        }\r\n\r\n        var encounterOptions = this.props.encounters.map(encounter => {\r\n            return {\r\n                id: encounter.id,\r\n                text: encounter.name || \"unnamed encounter\"\r\n            }\r\n        });\r\n\r\n        var encounterContent = null;\r\n        if (this.state.combat.encounterID) {\r\n            var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n            var monsterSections = selectedEncounter.slots.map(slot => {\r\n                var name = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    name += \" (x\" + slot.count + \")\";\r\n                }\r\n                return (\r\n                    <li key={slot.id}>{name}</li>\r\n                );\r\n            });\r\n\r\n            if (monsterSections.length === 0) {\r\n                monsterSections.push(\r\n                    <li key={\"empty\"}>no monsters</li>\r\n                );\r\n            }\r\n\r\n            var waves = selectedEncounter.waves.map(wave => {\r\n                if (wave.slots.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                var waveMonsters = wave.slots.map(slot => {\r\n                    var name = slot.monsterName || \"unnamed monster\";\r\n                    if (slot.count > 1) {\r\n                        name += \" x\" + slot.count;\r\n                    }\r\n                    return (\r\n                        <li key={slot.id}>{name}</li>\r\n                    );\r\n                });\r\n    \r\n                return (\r\n                    <div key={wave.id}>\r\n                        <div className=\"subheading\">{wave.name || \"unnamed wave\"}</div>\r\n                        <ul>{waveMonsters}</ul>\r\n                    </div>\r\n                );\r\n            });\r\n    \r\n            encounterContent = (\r\n                <div>\r\n                    <div className=\"subheading\">monsters</div>\r\n                    <ul>{monsterSections}</ul>\r\n                    {waves}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">encounter</div>\r\n                <Dropdown\r\n                    options={encounterOptions}\r\n                    placeholder=\"select encounter...\"\r\n                    selectedID={this.state.combat.encounterID}\r\n                    select={optionID => this.setEncounter(optionID)}\r\n                />\r\n                {encounterContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMapSection() {\r\n        var folios = this.props.mapFolios.filter(folio => folio.maps.length > 0);\r\n        if (folios.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        var folioOptions = folios.map(folio => {\r\n            return {\r\n                id: folio.id,\r\n                text: folio.name || \"unnamed folio\"\r\n            };\r\n        });\r\n        folioOptions = [{id: null, text: \"none\"}].concat(folioOptions);\r\n\r\n        var selectMapSection = null;\r\n        var thumbnailSection = null;\r\n\r\n        if (this.state.combat.folioID) {\r\n            var folio = this.props.mapFolios.find(f => f.id === this.state.combat.folioID);\r\n            var mapOptions = folio.maps.map(m => {\r\n                return {\r\n                    id: m.id,\r\n                    text: m.name || \"unnamed map\"\r\n                };\r\n            });            \r\n\r\n            if (mapOptions.length !== 1) {\r\n                selectMapSection = (\r\n                    <Selector\r\n                        options={mapOptions}\r\n                        placeholder=\"select map...\"\r\n                        selectedID={this.state.combatmapID}\r\n                        select={optionID => this.setMapID(optionID)}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (this.state.combat.mapID) {\r\n                var map = folio.maps.find(m => m.id === this.state.combat.mapID);\r\n                thumbnailSection = (\r\n                    <MapPanel\r\n                        map={map}\r\n                        mode=\"thumbnail\"\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">map</div>\r\n                <Dropdown\r\n                    options={folioOptions}\r\n                    placeholder=\"select map folio...\"\r\n                    selectedID={this.state.combat.folioID}\r\n                    select={optionID => this.setFolioID(optionID)}\r\n                />\r\n                {selectMapSection}\r\n                {thumbnailSection}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getWaveSection() {\r\n        if (this.state.combat.encounterID === null) {\r\n            return (\r\n                <div className=\"section\">you have not selected an encounter</div>\r\n            );\r\n        }\r\n\r\n        var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n        if (selectedEncounter.waves.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not defined any waves</div>\r\n            );\r\n        }\r\n\r\n        var waveOptions = selectedEncounter.waves.map(wave => {\r\n            return {\r\n                id: wave.id,\r\n                text: wave.name || \"unnamed wave\"\r\n            };\r\n        });\r\n\r\n        var waveContent = null;\r\n        if (this.state.combat.waveID) {\r\n            var selectedWave = selectedEncounter.waves.find(w => w.id === this.state.combat.waveID);\r\n\r\n            var monsterSections = selectedWave.slots.map(slot => {\r\n                var name = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    name += \" (x\" + slot.count + \")\";\r\n                }\r\n                return (\r\n                    <li key={slot.id}>{name}</li>\r\n                );\r\n            });\r\n\r\n            if (monsterSections.length === 0) {\r\n                monsterSections.push(\r\n                    <li key={\"empty\"}>no monsters</li>\r\n                );\r\n            }\r\n    \r\n            waveContent = (\r\n                <div>\r\n                    <div className=\"subheading\">monsters</div>\r\n                    <ul>{monsterSections}</ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">wave</div>\r\n                <Dropdown\r\n                    options={waveOptions}\r\n                    placeholder=\"select wave...\"\r\n                    selectedID={this.state.combat.waveID}\r\n                    select={optionID => this.setWave(optionID)}\r\n                />\r\n                {waveContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDifficultySection() {\r\n        if (!this.state.combat.partyID || !this.state.combat.encounterID) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">encounter difficulty</div>\r\n                    <div className=\"section\">select a party and an encounter on the left to see difficulty information.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">encounter difficulty</div>\r\n                <DifficultyChartPanel\r\n                    partyID={this.state.combat.partyID}\r\n                    encounterID={this.state.combat.encounterID}\r\n                    parties={this.props.parties}\r\n                    encounters={this.props.encounters}\r\n                    getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMonsterSection() {\r\n        if (this.state.combat.encounterID === null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">monsters</div>\r\n                    <div className=\"section\">select an encounter to see monster options here.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.props.parties && this.state.combat.waveID === null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">monsters</div>\r\n                    <div className=\"section\">select a wave to see monster options here.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n        if (this.state.combat.waveID) {\r\n            selectedEncounter = selectedEncounter.waves.find(w => w.id === this.state.combat.waveID);\r\n        }\r\n\r\n        if (selectedEncounter.slots.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        var initOptions = [\r\n            {\r\n                id: \"manual\",\r\n                text: \"enter manually\"\r\n            },\r\n            {\r\n                id: \"individual\",\r\n                text: \"roll individually\"\r\n            },\r\n            {\r\n                id: \"group\",\r\n                text: \"roll in groups\"\r\n            }\r\n        ];\r\n\r\n        var names = this.state.combat.monsterNames.map(slotNames => {\r\n            var slot = selectedEncounter.slots.find(s => s.id === slotNames.id);\r\n            var inputs = [];\r\n            for (var n = 0; n !== slotNames.names.length; ++n) {\r\n                inputs.push(\r\n                    <div key={n}>\r\n                        <MonsterName\r\n                            value={slotNames.names[n]}\r\n                            slotID={slot.id}\r\n                            index={n}\r\n                            changeName={(slotID, index, value) => this.changeName(slotID, index, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div key={slotNames.id} className=\"name-row\">\r\n                    <div className=\"name-label\">\r\n                        {slot.monsterName}\r\n                    </div>\r\n                    <div className=\"name-inputs\">\r\n                        {inputs}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">monsters</div>\r\n                <div className=\"subheading\">initiative</div>\r\n                <Selector\r\n                    options={initOptions}\r\n                    selectedID={this.state.combat.encounterInitMode}\r\n                    select={optionID => this.setEncounterInitMode(optionID)}\r\n                />\r\n                <div className=\"subheading\">names</div>\r\n                <div>{names}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var leftSection = null;\r\n            var rightSection = null;\r\n\r\n            if (this.props.parties) {\r\n                leftSection = (\r\n                    <div>\r\n                        {this.getPartySection()}\r\n                        {this.getEncounterSection()}\r\n                        {this.getMapSection()}\r\n                    </div>\r\n                );\r\n    \r\n                rightSection = (\r\n                    <div>\r\n                        {this.getDifficultySection()}\r\n                        {this.getMonsterSection()}\r\n                    </div>\r\n                );\r\n            } else {\r\n                leftSection = (\r\n                    <div>\r\n                        {this.getWaveSection()}\r\n                    </div>\r\n                );\r\n    \r\n                rightSection = (\r\n                    <div>\r\n                        {this.getMonsterSection()}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"row\" style={{ height: \"100%\", margin: \"0 -15px\" }}>\r\n                    <div className=\"column small-6 medium-6 large-6 scrollable\">\r\n                        {leftSection}\r\n                    </div>\r\n                    <div className=\"column small-6 medium-6 large-6 scrollable\">\r\n                        {rightSection}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass MonsterName extends React.Component {\r\n    render() {\r\n        return (\r\n            <input type=\"text\" value={this.props.value} onChange={event => this.props.changeName(this.props.slotID, this.props.index, event.target.value)} />\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n/*\r\n<RadioGroup\r\n    items={[{id, text, details, disabled}]}\r\n    selectedItemID=\"0\"\r\n    select={itemID => null}\r\n/>\r\n*/\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    render() {\r\n        try {\r\n            var content = this.props.items.map(item => {\r\n                return (\r\n                    <RadioGroupItem\r\n                        item={item}\r\n                        selected={this.props.selectedItemID === item.id}\r\n                        select={itemID => this.props.select(itemID)}\r\n                    />\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"radio-group\">\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadioGroupItem extends React.Component {\r\n    render() {\r\n        var style = \"radio-item\";\r\n        var details = null;\r\n\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n            details = (\r\n                <div className=\"radio-item-details\">\r\n                    {this.props.item.details}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.props.item.disabled) {\r\n            style += \" disabled\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={() => this.props.select(this.props.item.id)}>\r\n                <div className=\"radio-item-text\">{this.props.item.text}</div>\r\n                {details}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Selector from '../controls/selector';\r\nimport Dropdown from '../controls/dropdown';\r\nimport RadioGroup from '../controls/radio-group';\r\n\r\nexport default class ConditionModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            condition: props.condition,\r\n        };\r\n    }\r\n\r\n    setCondition(conditionName) {\r\n        // eslint-disable-next-line\r\n        this.state.condition.name = conditionName;\r\n        // eslint-disable-next-line\r\n        this.state.condition.level = 1;\r\n        // eslint-disable-next-line\r\n        this.state.condition.text = conditionName === \"custom\" ? \"custom condition\" : null;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    setDuration(durationType) {\r\n        var duration = null;\r\n\r\n        switch (durationType) {\r\n            case \"saves\":\r\n                duration = {\r\n                    type: \"saves\",\r\n                    count: 1,\r\n                    saveType: \"str\",\r\n                    saveDC: 10,\r\n                    point: \"start\"\r\n                };\r\n                break;\r\n            case \"combatant\":\r\n                duration = {\r\n                    type: \"combatant\",\r\n                    point: \"start\",\r\n                    combatantID: null\r\n                };\r\n                break;\r\n            case \"rounds\":\r\n                duration = {\r\n                    type: \"rounds\",\r\n                    count: 1\r\n                };\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        this.state.condition.duration = duration;\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    changeValue(object, field, value) {\r\n        object[field] = value;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    nudgeValue(object, field, delta) {\r\n        var value = object[field] + delta;\r\n        if (field === \"level\") {\r\n            value = Math.max(value, 1);\r\n            value = Math.min(value, 6);\r\n        }\r\n        if (field === \"count\") {\r\n            value = Math.max(value, 1);\r\n        }\r\n        if (field === \"saveDC\") {\r\n            value = Math.max(value, 0);\r\n        }\r\n        object[field] = value;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var conditions = factory.CONDITION_TYPES.map(condition => {\r\n                var controls = [];\r\n                var description = [];\r\n                if (condition === this.state.condition.name) {\r\n                    if (condition === \"custom\") {\r\n                        controls.push(\r\n                            <input type=\"text\" placeholder=\"custom condition\" value={this.state.condition.text} onChange={event => this.changeValue(this.state.condition, \"text\", event.target.value)} />\r\n                        );\r\n                    }\r\n                    if (condition === \"exhaustion\") {\r\n                        controls.push(\r\n                            <Spin\r\n                                source={this.props.condition}\r\n                                name=\"level\"\r\n                                label=\"exhaustion\"\r\n                                nudgeValue={delta => this.nudgeValue(this.props.condition, \"level\", delta)}\r\n                            />\r\n                        );\r\n                    }\r\n                    var text = utils.conditionText(this.state.condition);\r\n                    for (var n = 0; n !== text.length; ++n) {\r\n                        description.push(<li key={n} className=\"section\">{text[n]}</li>);\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    id: condition,\r\n                    text: condition,\r\n                    details: (\r\n                        <div key={condition}>\r\n                            {controls}\r\n                            <ul>\r\n                                {description}\r\n                            </ul>\r\n                        </div>\r\n                    ),\r\n                    disabled: this.props.combatant.conditionImmunities ? this.props.combatant.conditionImmunities.indexOf(condition) !== -1 : false\r\n                };\r\n            });\r\n\r\n            var saveOptions = [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\", \"death\"].map(c => { return { id: c, text: c }; });\r\n            var pointOptions = [\r\n                {\r\n                    id: \"start\",\r\n                    text: \"start of turn\"\r\n                },\r\n                {\r\n                    id: \"end\",\r\n                    text: \"end of turn\"\r\n                }\r\n            ]\r\n            var combatantOptions = this.props.combat.combatants.map(c => { return { id: c.id, text: (c.displayName || c.name || \"unnamed monster\") }; });\r\n\r\n            var durations = [\r\n                {\r\n                    id: \"none\",\r\n                    text: \"until removed (default)\",\r\n                    details: (\r\n                        <div className=\"section\">\r\n                            <div>the condition persists until it is manually removed</div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"saves\",\r\n                    text: \"until a successful save\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">number of saves required</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"count\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"count\", delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">save dc</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"saveDC\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"saveDC\", delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">type of save</div>\r\n                                <Selector\r\n                                    options={saveOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.saveType : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"saveType\", optionID)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">make the save at the start or end of the turn</div>\r\n                                <Selector\r\n                                    options={pointOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.point : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"point\", optionID)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"combatant\",\r\n                    text: \"until someone's next turn\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">combatant</div>\r\n                                <Dropdown\r\n                                    options={combatantOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.combatantID : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"combatantID\", optionID)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">start or end of the turn</div>\r\n                                <Selector\r\n                                    options={pointOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.point : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"point\", optionID)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"rounds\",\r\n                    text: \"for a number of rounds\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">number of rounds</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"count\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"count\", delta)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            ];\r\n\r\n            return (\r\n                <div className=\"condition-modal\">\r\n                    <div className=\"row\" style={{ height: \"100%\" }}>\r\n                        <div className=\"columns small-6 medium-6 large-6 scrollable\">\r\n                            <div className=\"heading\">condition</div>\r\n                            <RadioGroup\r\n                                items={conditions}\r\n                                selectedItemID={this.state.condition.name}\r\n                                select={itemID => this.setCondition(itemID)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"columns small-6 medium-6 large-6 scrollable\">\r\n                            <div className=\"heading\">duration</div>\r\n                            <RadioGroup\r\n                                items={durations}\r\n                                selectedItemID={this.state.condition.duration ? this.state.condition.duration.type : \"none\"}\r\n                                select={itemID => this.setDuration(itemID)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport cog from '../../resources/images/settings.svg';\r\n\r\nexport default class Titlebar extends React.Component {\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className={this.props.blur ? \"titlebar blur\" : \"titlebar\"}>\r\n                    <div className=\"app-name\" onClick={() => this.props.openHome()}>dojo</div>\r\n                    {this.props.actions}\r\n                    <img className=\"settings-icon\" src={cog} title=\"about\" alt=\"about\" onClick={() => this.props.openAbout()} />\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        try {\r\n            var partiesStyle = this.props.view === \"parties\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var libraryStyle = this.props.view === \"library\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var encounterStyle = this.props.view === \"encounter\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var mapStyle = this.props.view === \"maps\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var combatStyle = this.props.view === \"combat\" ? \"navigator-item selected\" : \"navigator-item\";\r\n\r\n            var encountersEnabled = this.props.library.length !== 0;\r\n            var combatEnabled = (this.props.parties.length !== 0) && (this.props.encounters.length !== 0);\r\n            if (!encountersEnabled) {\r\n                encounterStyle += \" disabled\";\r\n            }\r\n            if (!combatEnabled) {\r\n                combatStyle += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.blur ? \"navbar blur\" : \"navbar\"}>\r\n                    <div className={partiesStyle} onClick={() => this.props.setView(\"parties\")}>player characters</div>\r\n                    <div className={libraryStyle} onClick={() => this.props.setView(\"library\")}>monster library</div>\r\n                    <div className={encounterStyle} onClick={() => encountersEnabled ? this.props.setView(\"encounter\") : null}>encounter builder</div>\r\n                    <div className={mapStyle} onClick={() => this.props.setView(\"maps\")}>map folios</div>\r\n                    <div className={combatStyle} onClick={() => combatEnabled ? this.props.setView(\"combat\") : null}>combat manager</div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../utils';\r\nimport * as factory from '../models/factory';\r\n\r\nimport HomeScreen from './screens/home-screen';\r\nimport PartiesScreen from './screens/parties-screen';\r\nimport MonsterLibraryScreen from './screens/monster-library-screen';\r\nimport EncounterBuilderScreen from './screens/encounter-builder-screen';\r\nimport MapFoliosScreen from './screens/map-folios-screen';\r\nimport CombatManagerScreen from './screens/combat-manager-screen';\r\n\r\nimport AboutModal from './modals/about-modal';\r\nimport DemographicsModal from './modals/demographics-modal';\r\nimport MonsterEditorModal from './modals/monster-editor-modal';\r\nimport MapEditorModal from './modals/map-editor-modal';\r\nimport CombatStartModal from './modals/combat-start-modal';\r\nimport ConditionModal from './modals/condition-modal';\r\n\r\nimport Checkbox from './controls/checkbox';\r\nimport Titlebar from './controls/titlebar';\r\nimport Navbar from './controls/navbar';\r\n\r\nimport close from \"../resources/images/close-black.svg\";\r\nimport monsters from '../resources/data/monsters.json';\r\n\r\nexport default class Dojo extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            view: \"home\",\r\n            options: {\r\n                showHelp: true\r\n            },\r\n            parties: [],\r\n            library: [],\r\n            encounters: [],\r\n            mapFolios: [],\r\n            combats: [],\r\n            selectedPartyID: null,\r\n            selectedMonsterGroupID: null,\r\n            selectedEncounterID: null,\r\n            selectedMapFolioID: null,\r\n            selectedCombatID: null,\r\n            modal: null\r\n        };\r\n\r\n        try {\r\n            var data = null;\r\n\r\n            try {\r\n                var json = window.localStorage.getItem('data');\r\n                data = JSON.parse(json);\r\n            } catch (ex) {\r\n                console.error(\"Could not parse JSON: \", ex);\r\n                data = null;\r\n            }\r\n\r\n            if (data !== null) {\r\n                if (!data.mapFolios) {\r\n                    data.mapFolios = [];\r\n                    data.selectedMapFolioID = null;\r\n                }\r\n\r\n                data.encounters.forEach(enc => {\r\n                    if (!enc.waves) {\r\n                        enc.waves = [];\r\n                    }\r\n                });\r\n\r\n                data.combats.forEach(c => {\r\n                    if (!c.notifications) {\r\n                        c.notifications = [];\r\n                    }\r\n                    c.combatants.forEach(c => {\r\n                        if (c.altitude === undefined) {\r\n                            c.altitude = 0;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.state = data;\r\n                this.state.view = \"home\";\r\n                this.state.modal = null;\r\n            }\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            this.state.parties = [];\r\n            this.state.library = [];\r\n            this.state.encounters = [];\r\n            this.state.mapFolios = [];\r\n            this.state.combats = [];\r\n            this.state.selectedPartyID = null;\r\n            this.state.selectedMonsterGroupID = null;\r\n            this.state.selectedEncounterID = null;\r\n            this.state.selectedMapFolioID = null;\r\n            this.state.selectedCombatID = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var json = null;\r\n        try {\r\n            json = JSON.stringify(this.state);\r\n        } catch (ex) {\r\n            console.error(\"Could not stringify data: \", ex);\r\n            json = null;\r\n        }\r\n\r\n        if (json !== null) {\r\n            window.localStorage.setItem('data', json);\r\n        }\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Party screen\r\n\r\n    addParty(name) {\r\n        var party = factory.createParty();\r\n        party.name = name;\r\n        var parties = [].concat(this.state.parties, [party]);\r\n        utils.sort(parties);\r\n        this.setState({\r\n            parties: parties,\r\n            selectedPartyID: party.id\r\n        });\r\n    }\r\n\r\n    removeParty() {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        var index = this.state.parties.indexOf(party);\r\n        this.state.parties.splice(index, 1);\r\n        this.setState({\r\n            parties: this.state.parties,\r\n            selectedPartyID: null\r\n        });\r\n    }\r\n\r\n    addPC(name) {\r\n        var pc = factory.createPC();\r\n        pc.name = name;\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        party.pcs.push(pc);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n        return pc;\r\n    }\r\n\r\n    removePC(pc) {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        var index = party.pcs.indexOf(pc);\r\n        party.pcs.splice(index, 1);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n    }\r\n\r\n    sortPCs() {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        utils.sort(party.pcs);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Library screen\r\n\r\n    addMonsterGroup(name) {\r\n        var group = factory.createMonsterGroup();\r\n        group.name = name;\r\n        var library = [].concat(this.state.library, [group]);\r\n        utils.sort(library);\r\n        this.setState({\r\n            library: library,\r\n            selectedMonsterGroupID: group.id\r\n        });\r\n    }\r\n\r\n    removeMonsterGroup() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var index = this.state.library.indexOf(group);\r\n        this.state.library.splice(index, 1);\r\n        this.setState({\r\n            library: this.state.library,\r\n            selectedMonsterGroupID: null\r\n        });\r\n    }\r\n\r\n    addMonster(name) {\r\n        var monster = factory.createMonster();\r\n        monster.name = name;\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        group.monsters.push(monster);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    removeMonster(monster) {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var index = group.monsters.indexOf(monster);\r\n        group.monsters.splice(index, 1);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    sortMonsters() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        utils.sort(group.monsters);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    moveToGroup(monster, groupID) {\r\n        var sourceGroup = this.findMonster(monster);\r\n        var index = sourceGroup.monsters.indexOf(monster);\r\n\r\n        sourceGroup.monsters.splice(index, 1);\r\n        var group = this.getMonsterGroup(groupID);\r\n        group.monsters.push(monster);\r\n        utils.sort(group.monsters);\r\n\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    editMonster(monster) {\r\n        var copy = JSON.parse(JSON.stringify(monster));\r\n        this.setState({\r\n            modal: {\r\n                type: \"monster\",\r\n                monster: copy,\r\n                showMonsters: false\r\n            }\r\n        });\r\n    }\r\n\r\n    saveMonster() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var original = group.monsters.find(m => m.id === this.state.modal.monster.id);\r\n        var index = group.monsters.indexOf(original);\r\n        group.monsters[index] = this.state.modal.monster;\r\n        this.setState({\r\n            library: this.state.library,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    toggleShowSimilarMonsters() {\r\n        // eslint-disable-next-line\r\n        this.state.modal.showMonsters = !this.state.modal.showMonsters;\r\n        this.setState({\r\n            modal: this.state.modal\r\n        });\r\n    }\r\n\r\n    openDemographics() {\r\n        this.setState({\r\n            modal: {\r\n                type: \"demographics\"\r\n            }\r\n        });\r\n    }\r\n\r\n    cloneMonster(monster, name) {\r\n        var group = this.findMonster(monster);\r\n\r\n        var clone = {\r\n            id: utils.guid(),\r\n            type: \"monster\",\r\n            name: name || monster.name + \" copy\",\r\n            size: monster.size,\r\n            category: monster.category,\r\n            tag: monster.tag,\r\n            alignment: monster.alignment,\r\n            challenge: monster.challenge,\r\n            abilityScores: {\r\n                str: monster.abilityScores.str,\r\n                dex: monster.abilityScores.dex,\r\n                con: monster.abilityScores.con,\r\n                int: monster.abilityScores.int,\r\n                wis: monster.abilityScores.wis,\r\n                cha: monster.abilityScores.cha\r\n            },\r\n            ac: monster.ac,\r\n            hpMax: monster.hpMax,\r\n            hpTemp: monster.hpTemp,\r\n            hitDice: monster.hitDice,\r\n            damage: {\r\n                resist: monster.damage.resist,\r\n                vulnerable: monster.damage.vulnerable,\r\n                immune: monster.damage.immune\r\n            },\r\n            savingThrows: monster.savingThrows,\r\n            speed: monster.speed,\r\n            skills: monster.skills,\r\n            senses: monster.senses,\r\n            languages: monster.languages,\r\n            equipment: monster.equipment,\r\n            traits: monster.traits.map(trait => {\r\n                return {\r\n                    id: utils.guid(),\r\n                    name: trait.name,\r\n                    usage: trait.usage,\r\n                    type: trait.type,\r\n                    text: trait.text\r\n                };\r\n            }),\r\n            conditionImmunities: monster.conditionImmunities\r\n        };\r\n\r\n        group.monsters.push(clone);\r\n        utils.sort(group.monsters);\r\n\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    addOpenGameContent() {\r\n        monsters.forEach(data => {\r\n            try {\r\n                if (data.name) {\r\n                    var monster = factory.createMonster();\r\n\r\n                    monster.type = \"monster\";\r\n                    monster.name = data.name;\r\n                    monster.size = data.size.toLowerCase();\r\n                    monster.category = data.type;\r\n                    monster.tag = data.subtype;\r\n                    monster.alignment = data.alignment;\r\n                    monster.challenge = utils.parseChallenge(data.challenge_rating);\r\n                    monster.ac = data.armor_class;\r\n                    monster.hp = data.hit_points;\r\n                    monster.hpMax = data.hit_points;\r\n                    monster.speed = data.speed;\r\n                    monster.senses = data.senses;\r\n                    monster.languages = data.languages;\r\n\r\n                    var index = data.hit_dice.indexOf(\"d\");\r\n                    monster.hitDice = parseInt(data.hit_dice.substring(0, index));\r\n\r\n                    monster.abilityScores.str = data.strength;\r\n                    monster.abilityScores.dex = data.dexterity;\r\n                    monster.abilityScores.con = data.constitution;\r\n                    monster.abilityScores.int = data.intelligence;\r\n                    monster.abilityScores.wis = data.wisdom;\r\n                    monster.abilityScores.cha = data.charisma;\r\n\r\n                    monster.damage.resist = data.damage_resistances;\r\n                    monster.damage.vulnerable = data.damage_vulnerabilities;\r\n                    monster.damage.immune = data.damage_immunities;\r\n                    monster.conditionImmunities = data.condition_immunities;\r\n\r\n                    var saves = [\r\n                        {\r\n                            field: \"strength_save\",\r\n                            text: \"Strength\"\r\n                        },\r\n                        {\r\n                            field: \"dexterity_save\",\r\n                            text: \"Dexterity\"\r\n                        },\r\n                        {\r\n                            field: \"constitution_save\",\r\n                            text: \"Constitution\"\r\n                        },\r\n                        {\r\n                            field: \"intelligence_save\",\r\n                            text: \"Intelligence\"\r\n                        },\r\n                        {\r\n                            field: \"wisdom_save\",\r\n                            text: \"Wisdom\"\r\n                        },\r\n                        {\r\n                            field: \"charisma_save\",\r\n                            text: \"Charisma\"\r\n                        }\r\n                    ];\r\n                    saves.forEach(save => {\r\n                        if (data[save.field]) {\r\n                            var str = save.text + \" \" + data[save.field];\r\n                            monster.savingThrows += monster.savingThrows === \"\" ? str : \", \" + str;\r\n                        }\r\n                    });\r\n\r\n                    var skills = [\r\n                        {\r\n                            field: \"acrobatics\",\r\n                            text: \"Acrobatics\"\r\n                        },\r\n                        {\r\n                            field: \"animal_handling\",\r\n                            text: \"Animal handling\"\r\n                        },\r\n                        {\r\n                            field: \"arcana\",\r\n                            text: \"Arcana\"\r\n                        },\r\n                        {\r\n                            field: \"athletics\",\r\n                            text: \"Athletics\"\r\n                        },\r\n                        {\r\n                            field: \"deception\",\r\n                            text: \"Deception\"\r\n                        },\r\n                        {\r\n                            field: \"history\",\r\n                            text: \"History\"\r\n                        },\r\n                        {\r\n                            field: \"insight\",\r\n                            text: \"Insight\"\r\n                        },\r\n                        {\r\n                            field: \"intimidation\",\r\n                            text: \"Intimidation\"\r\n                        },\r\n                        {\r\n                            field: \"investigation\",\r\n                            text: \"Investigation\"\r\n                        },\r\n                        {\r\n                            field: \"medicine\",\r\n                            text: \"Medicine\"\r\n                        },\r\n                        {\r\n                            field: \"nature\",\r\n                            text: \"Nature\"\r\n                        },\r\n                        {\r\n                            field: \"perception\",\r\n                            text: \"Perception\"\r\n                        },\r\n                        {\r\n                            field: \"performance\",\r\n                            text: \"Performance\"\r\n                        },\r\n                        {\r\n                            field: \"persuasion\",\r\n                            text: \"Persuasion\"\r\n                        },\r\n                        {\r\n                            field: \"religion\",\r\n                            text: \"Religion\"\r\n                        },\r\n                        {\r\n                            field: \"sleight_of_hand\",\r\n                            text: \"Sleight of hand\"\r\n                        },\r\n                        {\r\n                            field: \"stealth\",\r\n                            text: \"Stealth\"\r\n                        },\r\n                        {\r\n                            field: \"survival\",\r\n                            text: \"Survival\"\r\n                        }\r\n                    ];\r\n                    skills.forEach(skill => {\r\n                        if (data[skill.field]) {\r\n                            var str = skill.text + \" \" + data[skill.field];\r\n                            monster.skills += monster.skills === \"\" ? str : \", \" + str;\r\n                        }\r\n                    });\r\n\r\n                    if (data.special_abilities) {\r\n                        data.special_abilities.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"trait\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n                    if (data.actions) {\r\n                        data.actions.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"action\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n                    if (data.legendary_actions) {\r\n                        data.legendary_actions.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"legendary\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n\r\n                    var groupName = monster.tag;\r\n                    if (groupName === \"\") {\r\n                        groupName = monster.category;\r\n                    }\r\n                    if (groupName.indexOf(\"swarm\") === 0) {\r\n                        groupName = \"swarm\";\r\n                    }\r\n                    if (groupName === \"any race\") {\r\n                        groupName = \"npc\";\r\n                    }\r\n\r\n                    var group = this.getMonsterGroupByName(groupName);\r\n                    if (!group) {\r\n                        group = {\r\n                            id: utils.guid(),\r\n                            name: groupName,\r\n                            monsters: []\r\n                        };\r\n                        this.state.library.push(group);\r\n                    }\r\n                    group.monsters.push(monster);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n\r\n        utils.sort(this.state.library);\r\n\r\n        this.setState({\r\n            view: \"library\",\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    buildTrait(rawTrait, type) {\r\n        var name = \"\";\r\n        var usage = \"\";\r\n\r\n        var openBracket = rawTrait.name.indexOf(\"(\");\r\n        if (openBracket === -1) {\r\n            name = rawTrait.name;\r\n        } else {\r\n            var closeBracket = rawTrait.name.indexOf(\")\");\r\n            name = rawTrait.name.substring(0, openBracket - 1);\r\n            usage = rawTrait.name.substring(openBracket + 1, closeBracket);\r\n        }\r\n\r\n        return {\r\n            id: utils.guid(),\r\n            type: type,\r\n            name: name,\r\n            usage: usage,\r\n            text: rawTrait.desc\r\n        };\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Encounter screen\r\n\r\n    addEncounter(name) {\r\n        var encounter = factory.createEncounter();\r\n        encounter.name = name;\r\n        var encounters = [].concat(this.state.encounters, [encounter]);\r\n        utils.sort(encounters);\r\n\r\n        this.setState({\r\n            encounters: encounters,\r\n            selectedEncounterID: encounter.id\r\n        });\r\n    }\r\n\r\n    removeEncounter() {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        var index = this.state.encounters.indexOf(encounter);\r\n        this.state.encounters.splice(index, 1);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters,\r\n            selectedEncounterID: null\r\n        });\r\n    }\r\n\r\n    addEncounterSlot(monster, waveID) {\r\n        var group = this.findMonster(monster);\r\n\r\n        var slot = factory.createEncounterSlot();\r\n        slot.monsterGroupName = group.name;\r\n        slot.monsterName = monster.name;\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        if (waveID !== null) {\r\n            var wave = encounter.waves.find(w => w.id === waveID);\r\n            wave.slots.push(slot);\r\n            this.sortEncounterSlots(wave);\r\n        } else {\r\n            encounter.slots.push(slot);\r\n            this.sortEncounterSlots(encounter);\r\n        }\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n\r\n        return slot;\r\n    }\r\n\r\n    removeEncounterSlot(slot, waveID) {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        if (waveID) {\r\n            var wave = encounter.waves.find(w => w.id === waveID);\r\n            var index = wave.slots.indexOf(slot);\r\n            wave.slots.splice(index, 1);\r\n        } else {\r\n            var n = encounter.slots.indexOf(slot);\r\n            encounter.slots.splice(n, 1);\r\n        }\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    sortEncounterSlots(slotContaimer) {\r\n        slotContaimer.slots.sort((a, b) => {\r\n            var aName = a.monsterName.toLowerCase();\r\n            var bName = b.monsterName.toLowerCase();\r\n            if (aName < bName) return -1;\r\n            if (aName > bName) return 1;\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    addWaveToEncounter() {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n\r\n        var wave = factory.createEncounterWave();\r\n        wave.name = \"wave \" + (encounter.waves.length + 2);\r\n        encounter.waves.push(wave);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    removeWave(wave) {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        var index = encounter.waves.indexOf(wave);\r\n        encounter.waves.splice(index, 1);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Map screen\r\n\r\n    addMapFolio(name) {\r\n        var folio = factory.createMapFolio();\r\n        folio.name = name;\r\n        var folios = [].concat(this.state.mapFolios, [folio]);\r\n        utils.sort(folios);\r\n\r\n        this.setState({\r\n            mapFolios: folios,\r\n            selectedMapFolioID: folio.id\r\n        });\r\n    }\r\n\r\n    removeMapFolio() {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var index = this.state.mapFolios.indexOf(folio);\r\n        this.state.mapFolios.splice(index, 1);\r\n\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios,\r\n            selectedMapFolioID: null\r\n        });\r\n    }\r\n\r\n    addMap(name) {\r\n        var map = factory.createMap();\r\n        map.name = name;\r\n\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        folio.maps.push(map);\r\n\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios\r\n        });\r\n    }\r\n\r\n    editMap(map) {\r\n        var copy = JSON.parse(JSON.stringify(map));\r\n        this.setState({\r\n            modal: {\r\n                type: \"map\",\r\n                map: copy\r\n            }\r\n        });\r\n    }\r\n\r\n    saveMap() {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var original = folio.maps.find(m => m.id === this.state.modal.map.id);\r\n        var index = folio.maps.indexOf(original);\r\n        folio.maps[index] = this.state.modal.map;\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeMap(map) {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var index = folio.maps.indexOf(map);\r\n        folio.maps.splice(index, 1);\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Combat screen\r\n\r\n    createCombat() {\r\n        var party = this.state.parties.length === 1 ? this.state.parties[0] : null;\r\n        var encounter = this.state.encounters.length === 1 ? this.state.encounters[0] : null;\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"combat-start\",\r\n                combat: {\r\n                    partyID: party ? party.id : null,\r\n                    encounterID: encounter ? encounter.id : null,\r\n                    folioID: null,\r\n                    mapID: null,\r\n                    encounterInitMode: \"group\",\r\n                    monsterNames: utils.getMonsterNames(encounter),\r\n                    map: null\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    startCombat() {\r\n        var party = this.getParty(this.state.modal.combat.partyID);\r\n        var partyName = party.name || \"unnamed party\";\r\n\r\n        var encounter = this.getEncounter(this.state.modal.combat.encounterID);\r\n        var encounterName = encounter.name || \"unnamed encounter\";\r\n\r\n        var combat = factory.createCombat();\r\n        combat.name = partyName + \" vs \" + encounterName;\r\n        combat.encounterID = encounter.id;\r\n\r\n        // Add a copy of each PC to the encounter\r\n        party.pcs.filter(pc => pc.active).forEach(pc => {\r\n            var combatant = JSON.parse(JSON.stringify(pc));\r\n\r\n            combatant.current = false;\r\n            combatant.pending = true;\r\n            combatant.active = false;\r\n            combatant.defeated = false;\r\n\r\n            combat.combatants.push(combatant);\r\n        });\r\n\r\n        encounter.slots.forEach(slot => {\r\n            var group = this.getMonsterGroupByName(slot.monsterGroupName);\r\n            var monster = this.getMonster(slot.monsterName, group);\r\n\r\n            if (monster) {\r\n                var init = parseInt(utils.modifier(monster.abilityScores.dex));\r\n                var groupRoll = utils.dieRoll();\r\n\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    var singleRoll = utils.dieRoll();\r\n\r\n                    var combatant = JSON.parse(JSON.stringify(monster));\r\n                    combatant.id = utils.guid();\r\n\r\n                    combatant.displayName = null;\r\n                    if (this.state.modal.combat.monsterNames) {\r\n                        var slotNames = this.state.modal.combat.monsterNames.find(names => names.id === slot.id);\r\n                        if (slotNames) {\r\n                            combatant.displayName = slotNames.names[n];\r\n                        }\r\n                    }\r\n\r\n                    switch (this.state.modal.combat.encounterInitMode) {\r\n                        case \"manual\":\r\n                            combatant.initiative = 10;\r\n                            break;\r\n                        case \"group\":\r\n                            combatant.initiative = init + groupRoll;\r\n                            break;\r\n                        case \"individual\":\r\n                            combatant.initiative = init + singleRoll;\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n\r\n                    combatant.current = false;\r\n                    combatant.pending = (this.state.modal.combat.encounterInitMode === \"manual\");\r\n                    combatant.active = (this.state.modal.combat.encounterInitMode !== \"manual\");\r\n                    combatant.defeated = false;\r\n        \r\n                    combatant.hp = combatant.hpMax;\r\n                    combatant.conditions = [];\r\n                    combat.combatants.push(combatant);\r\n                }\r\n            } else {\r\n                combat.issues.push(\"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName);\r\n            }\r\n        });\r\n\r\n        combat.combatants.forEach(c => c.altitude = 0);\r\n\r\n        this.sortCombatants(combat);\r\n\r\n        if (this.state.modal.combat.folioID && this.state.modal.combat.mapID) {\r\n            var folio = this.getMapFolio(this.state.modal.combat.folioID);\r\n            var map = folio.maps.find(m => m.id === this.state.modal.combat.mapID);\r\n            combat.map = JSON.parse(JSON.stringify(map));\r\n        }\r\n\r\n        this.setState({\r\n            combats: [].concat(this.state.combats, [combat]),\r\n            selectedCombatID: combat.id,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    openWaveModal() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var encounter = this.getEncounter(combat.encounterID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"combat-wave\",\r\n                combat: {\r\n                    encounterID: combat.encounterID,\r\n                    encounterInitMode: \"group\",\r\n                    waveID: null,\r\n                    monsterNames: utils.getMonsterNames(encounter)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    pauseCombat() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        combat.timestamp = new Date().toLocaleString();\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    resumeCombat(combat) {\r\n        this.setState({\r\n            selectedCombatID: combat.id\r\n        });\r\n    }\r\n\r\n    endCombat() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = this.state.combats.indexOf(combat);\r\n        this.state.combats.splice(index, 1);\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    makeCurrent(combatant, newRound) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        // Handle start-of-turn conditions\r\n        combat.combatants.filter(actor => actor.conditions).forEach(actor => {\r\n            actor.conditions.filter(c => c.duration !== null)\r\n                .forEach(c => {\r\n                    switch (c.duration.type) {\r\n                        case \"saves\":\r\n                            // If it's my condition, and point is START, notify the user\r\n                            if ((actor.id === combatant.id) && (c.duration.point === \"start\")) {\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-save\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"combatant\":\r\n                            // If this refers to me, and point is START, remove it\r\n                            if ((c.duration.combatantID === combatant.id) && (c.duration.point === \"start\")) {\r\n                                var index = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(index, 1);\r\n                                // Notify the user\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-end\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"rounds\":\r\n                            // If it's my condition, decrement the condition\r\n                            if (actor.id === combatant.id) {\r\n                                c.duration.count -= 1;\r\n                            }\r\n                            // If it's now at 0, remove it\r\n                            if (c.duration.count === 0) {\r\n                                var n = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(n, 1);\r\n                                // Notify the user\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-end\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n                });\r\n        });\r\n\r\n        combat.combatants.forEach(combatant => {\r\n            combatant.current = false;\r\n        });\r\n        if (combatant) {\r\n            combatant.current = true;\r\n        }\r\n\r\n        if (newRound) {\r\n            combat.round += 1;\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    makeActive(combatant) {\r\n        combatant.pending = false;\r\n        combatant.active = true;\r\n        combatant.defeated = false;\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        this.sortCombatants(combat);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    makeDefeated(combatant) {\r\n        combatant.pending = false;\r\n        combatant.active = false;\r\n        combatant.defeated = true;\r\n\r\n        if (combatant.current) {\r\n            this.endTurn(combatant);\r\n        } else {\r\n            this.setState({\r\n                combats: this.state.combats\r\n            });\r\n        }\r\n    }\r\n\r\n    addWaveToCombat() {\r\n        var encounter = this.getEncounter(this.state.modal.combat.encounterID);\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var wave = encounter.waves.find(w => w.id === this.state.modal.combat.waveID);\r\n\r\n        wave.slots.forEach(slot => {\r\n            var group = this.getMonsterGroupByName(slot.monsterGroupName);\r\n            var monster = this.getMonster(slot.monsterName, group);\r\n\r\n            if (monster) {\r\n                var init = parseInt(utils.modifier(monster.abilityScores.dex));\r\n                var groupRoll = utils.dieRoll();\r\n\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    var singleRoll = utils.dieRoll();\r\n\r\n                    var combatant = JSON.parse(JSON.stringify(monster));\r\n                    combatant.id = utils.guid();\r\n\r\n                    combatant.displayName = null;\r\n                    if (this.state.modal.combat.monsterNames) {\r\n                        var slotNames = this.state.modal.combat.monsterNames.find(names => names.id === slot.id);\r\n                        if (slotNames) {\r\n                            combatant.displayName = slotNames.names[n];\r\n                        }\r\n                    }\r\n\r\n                    switch (this.state.modal.combat.encounterInitMode) {\r\n                        case \"manual\":\r\n                            combatant.initiative = 10;\r\n                            break;\r\n                        case \"group\":\r\n                            combatant.initiative = init + groupRoll;\r\n                            break;\r\n                        case \"individual\":\r\n                            combatant.initiative = init + singleRoll;\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n\r\n                    combatant.current = false;\r\n                    combatant.pending = (this.state.modal.combat.encounterInitMode === \"manual\");\r\n                    combatant.active = (this.state.modal.combat.encounterInitMode !== \"manual\");\r\n                    combatant.defeated = false;\r\n        \r\n                    combatant.hp = combatant.hpMax;\r\n                    combatant.conditions = [];\r\n                    combat.combatants.push(combatant);\r\n                }\r\n            } else {\r\n                combat.issues.push(\"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName);\r\n            }\r\n        });\r\n\r\n        this.sortCombatants(combat);\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeCombatant(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = combat.combatants.indexOf(combatant);\r\n        combat.combatants.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapAdd(combatant, x, y) {\r\n        var item = factory.createMapItem();\r\n        item.id = combatant.id;\r\n        item.type = combatant.type;\r\n        item.x = x;\r\n        item.y = y;\r\n        var size = 1;\r\n        if (combatant.type === 'monster') {\r\n            size = utils.miniSize(combatant.size);\r\n        }\r\n        item.height = size;\r\n        item.width = size;\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        combat.map.items.push(item);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapMove(combatant, dir) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var item = combat.map.items.find(i => i.id === combatant.id);\r\n        switch (dir) {\r\n            case 'N':\r\n                item.y -= 1;\r\n                break;\r\n            case 'NE':\r\n                item.x += 1;\r\n                item.y -= 1;\r\n                break;\r\n            case 'E':\r\n                item.x += 1;\r\n                break;\r\n            case 'SE':\r\n                item.x += 1;\r\n                item.y += 1;\r\n                break;\r\n            case 'S':\r\n                item.y += 1;\r\n                break;\r\n            case 'SW':\r\n                item.x -= 1;\r\n                item.y += 1;\r\n                break;\r\n            case 'W':\r\n                item.x -= 1;\r\n                break;\r\n            case 'NW':\r\n                item.x -= 1;\r\n                item.y -= 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapRemove(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var item = combat.map.items.find(i => i.id === combatant.id);\r\n        var index = combat.map.items.indexOf(item);\r\n        combat.map.items.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    endTurn(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        // Handle end-of-turn conditions\r\n        combat.combatants.filter(actor => actor.conditions).forEach(actor => {\r\n            actor.conditions.filter(c => c.duration !== null)\r\n                .forEach(c => {\r\n                    switch (c.duration.type) {\r\n                        case \"saves\":\r\n                            // If it's my condition, and point is END, notify the user\r\n                            if ((actor.id === combatant.id) && (c.duration.point === \"end\")) {\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-save\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"combatant\":\r\n                            // If this refers to me, and point is END, remove it\r\n                            if ((c.duration.combatantID === combatant.id) && (c.duration.point === \"end\")) {\r\n                                var index = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(index, 1);\r\n                                // Notify the user\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-end\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"rounds\":\r\n                            // We check this at the beginning of each turn, not at the end\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n                });\r\n        });\r\n\r\n        var active = combat.combatants.filter(combatant => {\r\n            return combatant.current || (!combatant.pending && combatant.active && !combatant.defeated);\r\n        });\r\n        if (active.length === 0) {\r\n            // There's no-one left in the fight\r\n            this.makeCurrent(null, false);\r\n        } else if ((active.length === 1) && (active[0].defeated)) {\r\n            // The only person in the fight is me, and I'm defeated\r\n            this.makeCurrent(null, false);\r\n        } else {\r\n            var index = active.indexOf(combatant) + 1;\r\n            var newRound = false;\r\n            if (index >= active.length) {\r\n                index = 0;\r\n                newRound = true;\r\n            }\r\n            this.makeCurrent(active[index], newRound);\r\n        }\r\n    }\r\n\r\n    changeHP(combatant, hp, temp) {\r\n        combatant.hp = hp;\r\n        combatant.hpTemp = temp;\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    addCondition(combatant) {\r\n        var condition = {\r\n            id: utils.guid(),\r\n            name: \"blinded\",\r\n            level: 1,\r\n            text: null,\r\n            duration: null\r\n        }\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"condition-add\",\r\n                condition: condition,\r\n                combatant: combatant,\r\n                combat: combat\r\n            }\r\n        });\r\n    }\r\n\r\n    addConditionFromModal() {\r\n        this.state.modal.combatant.conditions.push(this.state.modal.condition);\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    editCondition(combatant, condition) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"condition-edit\",\r\n                condition: condition,\r\n                combatant: combatant,\r\n                combat: combat\r\n            }\r\n        });\r\n    }\r\n\r\n    editConditionFromModal() {\r\n        var original = this.state.modal.combatant.conditions.find(c => c.id === this.state.modal.condition.id);\r\n        var index = this.state.modal.combatant.conditions.indexOf(original);\r\n        // eslint-disable-next-line\r\n        this.state.modal.combatant.conditions[index] = this.state.modal.condition;\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeCondition(combatant, conditionID) {\r\n        var condition = combatant.conditions.find(c => c.id === conditionID);\r\n        var index = combatant.conditions.indexOf(condition);\r\n        combatant.conditions.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    sortCombatants(combat) {\r\n        combat.combatants.sort((a, b) => {\r\n            // First sort by initiative, descending\r\n            if (a.initiative < b.initiative) return 1;\r\n            if (a.initiative > b.initiative) return -1;\r\n            // Then sort by name, ascending\r\n            if (a.name < b.name) return -1;\r\n            if (a.name > b.name) return 1;\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    closeNotification(notification, removeCondition) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = combat.notifications.indexOf(notification);\r\n        combat.notifications.splice(index, 1);\r\n\r\n        if (removeCondition) {\r\n            var conditionIndex = notification.combatant.conditions.indexOf(notification.condition);\r\n            notification.combatant.conditions.splice(conditionIndex, 1);\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    setView(view) {\r\n        this.setState({\r\n            view: view\r\n        });\r\n    }\r\n\r\n    openAbout() {\r\n        this.setState({\r\n            modal: {\r\n                type: \"about\"\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    selectParty(party) {\r\n        this.setState({\r\n            selectedPartyID: party ? party.id : null\r\n        });\r\n    }\r\n\r\n    selectMonsterGroup(group) {\r\n        this.setState({\r\n            selectedMonsterGroupID: group ? group.id : null\r\n        });\r\n    }\r\n\r\n    selectEncounter(encounter) {\r\n        this.setState({\r\n            selectedEncounterID: encounter ? encounter.id : null\r\n        });\r\n    }\r\n\r\n    selectMapFolio(mapFolio) {\r\n        this.setState({\r\n            selectedMapFolioID: mapFolio ? mapFolio.id : null\r\n        });\r\n    }\r\n\r\n    getParty(id) {\r\n        var result = null;\r\n        this.state.parties.forEach(party => {\r\n            if (party.id === id) {\r\n                result = party;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMonsterGroup(id) {\r\n        var result = null;\r\n        this.state.library.forEach(group => {\r\n            if (group.id === id) {\r\n                result = group;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getEncounter(id) {\r\n        var result = null;\r\n        this.state.encounters.forEach(encounter => {\r\n            if (encounter.id === id) {\r\n                result = encounter;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMapFolio(id) {\r\n        var result = null;\r\n        this.state.mapFolios.forEach(folio => {\r\n            if (folio.id === id) {\r\n                result = folio;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getCombat(id) {\r\n        var result = null;\r\n        this.state.combats.forEach(combat => {\r\n            if (combat.id === id) {\r\n                result = combat;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMonsterGroupByName(groupName) {\r\n        var result = null;\r\n\r\n        this.state.library.forEach(group => {\r\n            if (group.name === groupName) {\r\n                result = group;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMonster(monsterName, monsterGroup) {\r\n        var result = null;\r\n\r\n        if (monsterGroup && monsterGroup.monsters) {\r\n            monsterGroup.monsters.forEach(monster => {\r\n                if (monster.name === monsterName) {\r\n                    result = monster;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    findMonster(monster) {\r\n        var result = null;\r\n        this.state.library.forEach(group => {\r\n            if (group.monsters.indexOf(monster) !== -1) {\r\n                result = group;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    resetAll() {\r\n        this.setState({\r\n            parties: [],\r\n            selectedPartyID: null,\r\n            library: [],\r\n            selectedMonsterGroupID: null,\r\n            encounters: [],\r\n            selectedEncounterID: null,\r\n            mapFolios: [],\r\n            selectedMapFolioID: null,\r\n            combats: [],\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    changeValue(combatant, type, value) {\r\n        switch (type) {\r\n            case \"hp\":\r\n                value = Math.min(value, combatant.hpMax);\r\n                value = Math.max(value, 0);\r\n                break;\r\n            case \"hpTemp\":\r\n                value = Math.max(value, 0);\r\n                break;\r\n            case \"level\":\r\n                value = Math.max(value, 1);\r\n                if (combatant.player !== undefined) {\r\n                    value = Math.min(value, 20)\r\n                } else {\r\n                    value = Math.min(value, 6);\r\n                }\r\n                break;\r\n            case \"count\":\r\n                value = Math.max(value, 1);\r\n                break;\r\n            case \"hitDice\":\r\n                value = Math.max(value, 1);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        var tokens = type.split(\".\");\r\n        var obj = combatant;\r\n        for (var n = 0; n !== tokens.length; ++n) {\r\n            var token = tokens[n];\r\n            if (n === tokens.length - 1) {\r\n                obj[token] = value;\r\n            } else {\r\n                obj = obj[token];\r\n            }\r\n        }\r\n\r\n        utils.sort(this.state.parties);\r\n        utils.sort(this.state.library);\r\n        utils.sort(this.state.encounters);\r\n\r\n        this.setState({\r\n            parties: this.state.parties,\r\n            library: this.state.library,\r\n            encounters: this.state.encounters,\r\n            combats: this.state.combats,\r\n            selectedPartyID: this.state.selectedPartyID,\r\n            selectedMonsterGroupID: this.state.selectedMonsterGroupID,\r\n            selectedEncounterID: this.state.selectedEncounterID,\r\n            selectedCombatID: this.state.selectedCombatID,\r\n            options: this.state.options,\r\n            modal: this.state.modal\r\n        });\r\n    }\r\n\r\n    nudgeValue(combatant, type, delta) {\r\n        var tokens = type.split(\".\");\r\n        var obj = combatant;\r\n        for (var n = 0; n !== tokens.length; ++n) {\r\n            var token = tokens[n];\r\n            if (n === tokens.length - 1) {\r\n                var value = null;\r\n                if (token === \"challenge\") {\r\n                    value = utils.nudgeChallenge(obj.challenge, delta);\r\n                } else {\r\n                    value = obj[token] + delta;\r\n                }\r\n                this.changeValue(combatant, type, value);\r\n            } else {\r\n                obj = obj[token];\r\n            }\r\n        }\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var content = null;\r\n            var actions = null;\r\n            switch (this.state.view) {\r\n                case \"home\":\r\n                    content = (\r\n                        <HomeScreen\r\n                            library={this.state.library}\r\n                            addOpenGameContent={() => this.addOpenGameContent()}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"parties\":\r\n                    content = (\r\n                        <PartiesScreen\r\n                            parties={this.state.parties}\r\n                            selection={this.getParty(this.state.selectedPartyID)}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectParty={party => this.selectParty(party)}\r\n                            addParty={name => this.addParty(name)}\r\n                            removeParty={() => this.removeParty()}\r\n                            addPC={name => this.addPC(name)}\r\n                            removePC={pc => this.removePC(pc)}\r\n                            sortPCs={() => this.sortPCs()}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"library\":\r\n                    content = (\r\n                        <MonsterLibraryScreen\r\n                            library={this.state.library}\r\n                            selection={this.getMonsterGroup(this.state.selectedMonsterGroupID)}\r\n                            filter={this.state.libraryFilter}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectMonsterGroup={group => this.selectMonsterGroup(group)}\r\n                            addMonsterGroup={name => this.addMonsterGroup(name)}\r\n                            removeMonsterGroup={() => this.removeMonsterGroup()}\r\n                            addMonster={name => this.addMonster(name)}\r\n                            removeMonster={monster => this.removeMonster(monster)}\r\n                            sortMonsters={() => this.sortMonsters()}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                            editMonster={combatant => this.editMonster(combatant)}\r\n                            cloneMonster={(combatant, name) => this.cloneMonster(combatant, name)}\r\n                            moveToGroup={(combatant, groupID) => this.moveToGroup(combatant, groupID)}\r\n                            addOpenGameContent={() => this.addOpenGameContent()}\r\n                        />\r\n                    );\r\n                    var count = 0;\r\n                    this.state.library.forEach(group => {\r\n                        count += group.monsters.length;\r\n                    });\r\n                    if (count > 0) {\r\n                        actions = (\r\n                            <div className=\"actions\">\r\n                                <div className=\"section\">\r\n                                    <input type=\"text\" placeholder=\"filter\" value={this.state.libraryFilter} onChange={event => this.changeValue(this.state, \"libraryFilter\", event.target.value)} />\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.openDemographics()}>demographics</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    break;\r\n                case \"encounter\":\r\n                    content = (\r\n                        <EncounterBuilderScreen\r\n                            encounters={this.state.encounters}\r\n                            selection={this.getEncounter(this.state.selectedEncounterID)}\r\n                            parties={this.state.parties}\r\n                            library={this.state.library}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectEncounter={encounter => this.selectEncounter(encounter)}\r\n                            addEncounter={name => this.addEncounter(name)}\r\n                            removeEncounter={encounter => this.removeEncounter(encounter)}\r\n                            addWave={() => this.addWaveToEncounter()}\r\n                            removeWave={wave => this.removeWave(wave)}\r\n                            getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                            addEncounterSlot={(monster, waveID) => this.addEncounterSlot(monster, waveID)}\r\n                            removeEncounterSlot={(slot, waveID) => this.removeEncounterSlot(slot, waveID)}\r\n                            nudgeValue={(slot, type, delta) => this.nudgeValue(slot, type, delta)}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"maps\":\r\n                    content = (\r\n                        <MapFoliosScreen\r\n                            mapFolios={this.state.mapFolios}\r\n                            selection={this.getMapFolio(this.state.selectedMapFolioID)}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectMapFolio={folio => this.selectMapFolio(folio)}\r\n                            addMapFolio={name => this.addMapFolio(name)}\r\n                            removeMapFolio={() => this.removeMapFolio()}\r\n                            addMap={name => this.addMap(name)}\r\n                            editMap={map => this.editMap(map)}\r\n                            removeMap={map => this.removeMap(map)}\r\n                            nudgeValue={(source, type, delta) => this.nudgeValue(source, type, delta)}\r\n                            changeValue={(source, type, value) => this.changeValue(source, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"combat\":\r\n                    var combat = this.getCombat(this.state.selectedCombatID);\r\n                    content = (\r\n                        <CombatManagerScreen\r\n                            parties={this.state.parties}\r\n                            encounters={this.state.encounters}\r\n                            combats={this.state.combats}\r\n                            combat={combat}\r\n                            showHelp={this.state.options.showHelp}\r\n                            createCombat={() => this.createCombat()}\r\n                            resumeEncounter={combat => this.resumeCombat(combat)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            makeCurrent={(combatant) => this.makeCurrent(combatant)}\r\n                            makeActive={(combatant) => this.makeActive(combatant)}\r\n                            makeDefeated={(combatant) => this.makeDefeated(combatant)}\r\n                            removeCombatant={(combatant) => this.removeCombatant(combatant)}\r\n                            addCondition={(combatant) => this.addCondition(combatant)}\r\n                            editCondition={(combatant, condition) => this.editCondition(combatant, condition)}\r\n                            removeCondition={(combatant, conditionID) => this.removeCondition(combatant, conditionID)}\r\n                            mapAdd={(combatant, x, y) => this.mapAdd(combatant, x, y)}\r\n                            mapMove={(combatant, dir) => this.mapMove(combatant, dir)}\r\n                            mapRemove={combatant => this.mapRemove(combatant)}\r\n                            endTurn={(combatant) => this.endTurn(combatant)}\r\n                            changeHP={(combatant, hp, temp) => this.changeHP(combatant, hp, temp)}\r\n                            close={(notification, removeCondition) => this.closeNotification(notification, removeCondition)}\r\n                        />\r\n                    );\r\n                    if (combat) {\r\n                        var xp = 0;\r\n                        combat.combatants.filter(c => c.type === \"monster\")\r\n                            .forEach(combatant => {\r\n                                xp += utils.experience(combatant.challenge);\r\n                            });\r\n                        \r\n                        var encounter = this.getEncounter(combat.encounterID);\r\n\r\n                        actions = (\r\n                            <div className=\"actions\">\r\n                                <div className=\"section\">\r\n                                    <div className=\"text\">round: {combat.round}</div>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <div className=\"text\">xp: {xp}</div>\r\n                                </div>\r\n                                <div className=\"section\" style={{ display: encounter.waves.length === 0 ? \"none\" : \"\"}}>\r\n                                    <button onClick={() => this.openWaveModal()}>add wave</button>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.pauseCombat()}>pause encounter</button>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.endCombat()}>end encounter</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Do nothing\r\n                    break;\r\n            }\r\n\r\n            var modal = null;\r\n            if (this.state.modal) {\r\n                var modalTitle = null;\r\n                var modalContent = null;\r\n                var modalAllowClose = true;\r\n                var modalAllowScroll = true;\r\n                var modalButtons = {\r\n                    left: [],\r\n                    right: []\r\n                };\r\n\r\n                switch (this.state.modal.type) {\r\n                    case \"about\":\r\n                        modalContent = (\r\n                            <AboutModal\r\n                                options={this.state.options}\r\n                                resetAll={() => this.resetAll()}\r\n                                changeValue={(source, type, value) => this.changeValue(source, type, value)}\r\n                            />\r\n                        );\r\n                        break;\r\n                    case \"demographics\":\r\n                        modalTitle = \"demographics\";\r\n                        modalContent = (\r\n                            <DemographicsModal\r\n                                library={this.state.library}\r\n                            />\r\n                        );\r\n                        break;\r\n                    case \"monster\":\r\n                        modalTitle = \"monster editor\";\r\n                        modalContent = (\r\n                            <MonsterEditorModal\r\n                                monster={this.state.modal.monster}\r\n                                library={this.state.library}\r\n                                showMonsters={this.state.modal.showMonsters}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.left = [\r\n                            <Checkbox\r\n                                key=\"similar\"\r\n                                label=\"similar monsters\"\r\n                                checked={this.state.modal.showMonsters}\r\n                                changeValue={() => this.toggleShowSimilarMonsters()}\r\n                            /> \r\n                        ];\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.saveMonster()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"map\":\r\n                        modalTitle = \"map editor\";\r\n                        modalContent = (\r\n                            <MapEditorModal\r\n                                map={this.state.modal.map}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.saveMap()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"combat-start\":\r\n                        modalTitle = \"start a new encounter\";\r\n                        modalContent = (\r\n                            <CombatStartModal\r\n                                combat={this.state.modal.combat}\r\n                                parties={this.state.parties}\r\n                                encounters={this.state.encounters}\r\n                                mapFolios={this.state.mapFolios}\r\n                                getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                                notify={() => this.setState({modal: this.state.modal})}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"start encounter\" className={this.state.modal.combat.partyID && this.state.modal.combat.encounterID ? \"\" : \"disabled\"} onClick={() => this.startCombat()}>start encounter</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"combat-wave\":\r\n                        modalTitle = \"encounter waves\";\r\n                        modalContent = (\r\n                            <CombatStartModal\r\n                                combat={this.state.modal.combat}\r\n                                encounters={this.state.encounters}\r\n                                getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                                notify={() => this.setState({modal: this.state.modal})}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"add wave\" className={this.state.modal.combat.waveID !== null ? \"\" : \"disabled\"} onClick={() => this.addWaveToCombat()}>add wave</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"condition-add\":\r\n                        modalTitle = \"add a condition\";\r\n                        modalContent = (\r\n                            <ConditionModal\r\n                                condition={this.state.modal.condition}\r\n                                combatant={this.state.modal.combatant}\r\n                                combat={this.state.modal.combat}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"add\" onClick={() => this.addConditionFromModal()}>add</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"condition-edit\":\r\n                        modalTitle = \"edit condition\";\r\n                        modalContent = (\r\n                            <ConditionModal\r\n                                condition={this.state.modal.condition}\r\n                                combatant={this.state.modal.combatant}\r\n                                combat={this.state.modal.combat}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.editConditionFromModal()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n\r\n                modal = (\r\n                    <div className=\"overlay\">\r\n                        <div className=\"modal\">\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"title\">{modalTitle}</div>\r\n                                {modalAllowClose ? <img className=\"image\" src={close} alt=\"close\" onClick={() => this.closeModal()} /> : null}\r\n                            </div>\r\n                            <div className={modalAllowScroll ? \"modal-content scrollable\" : \"modal-content\"}>\r\n                                {modalContent}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <div className=\"left\">{modalButtons.left}</div>\r\n                                <div className=\"right\">{modalButtons.right}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"dojo\">\r\n                    <Titlebar\r\n                        actions={actions}\r\n                        blur={modal !== null}\r\n                        openHome={() => this.setView(\"home\")}\r\n                        openAbout={() => this.openAbout()}\r\n                    />\r\n                    <div className={(modal === null) ? \"page-content\" : \"page-content blur\"}>\r\n                        {content}\r\n                    </div>\r\n                    <Navbar\r\n                        view={this.state.view}\r\n                        parties={this.state.parties}\r\n                        library={this.state.library}\r\n                        encounters={this.state.encounters}\r\n                        blur={modal !== null}\r\n                        setView={view => this.setView(view)}\r\n                    />\r\n                    {modal}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/css/foundation.css';\r\nimport './style/scss/app.scss';\r\nimport './style/scss/controls.scss';\r\n\r\nimport Dojo from './components/dojo';\r\n\r\nReactDOM.render(<Dojo />, document.getElementById('root'));\r\n"],"sourceRoot":""}
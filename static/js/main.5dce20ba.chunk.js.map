{"version":3,"sources":["resources/images/down-arrow-black.svg","resources/images/down-arrow.svg","resources/images/close-black.svg","resources/images/warning.svg","resources/images/plus.svg","resources/images/minus.svg","resources/images/ellipsis.svg","resources/images/checked.svg","resources/images/unchecked.svg","resources/images/settings.svg","utils.ts","models/factory.ts","components/screens/home-screen.jsx","components/cards/info-card.jsx","components/cards/information/parties-card.jsx","components/list-items/party-list-item.jsx","components/controls/confirm-button.jsx","components/cards/party-card.jsx","components/controls/radial.jsx","components/controls/spin.jsx","components/cards/pc-card.jsx","components/panels/card-group.jsx","components/screens/parties-screen.jsx","components/cards/information/monster-library-card.jsx","components/list-items/monster-group-list-item.jsx","components/cards/monster-group-card.jsx","components/controls/expander.jsx","components/controls/dropdown.jsx","components/panels/ability-score-panel.jsx","components/panels/trait-panel.jsx","components/panels/traits-panel.jsx","components/panels/condition-panel.jsx","components/panels/conditions-panel.jsx","components/cards/monster-card.jsx","components/screens/monster-library-screen.jsx","components/cards/error-card.jsx","models/models.ts","components/cards/filter-card.jsx","components/cards/wave-card.jsx","components/cards/information/encounter-builder-card.jsx","components/panels/difficulty-chart-panel.jsx","components/cards/encounter-card.jsx","components/list-items/encounter-list-item.jsx","components/screens/encounter-builder-screen.jsx","components/cards/information/map-folios-card.jsx","components/list-items/map-folio-list-item.jsx","components/cards/map-folio-card.jsx","components/panels/hit-point-gauge.jsx","components/panels/map-panel.jsx","components/cards/map-card.jsx","components/screens/map-folios-screen.jsx","components/cards/information/combat-manager-card.jsx","components/list-items/combat-list-item.jsx","components/screens/combat-manager-screen.jsx","components/controls/checkbox.jsx","components/controls/selector.jsx","components/modals/about-modal.jsx","components/modals/demographics-modal.jsx","components/modals/monster-editor-modal.jsx","components/cards/map-tile-card.jsx","components/modals/map-editor-modal.jsx","components/modals/combat-start-modal.jsx","components/controls/radio-group.jsx","components/modals/condition-modal.jsx","components/controls/titlebar.jsx","components/controls/navbar.jsx","components/dojo.jsx","index.js"],"names":["module","exports","__webpack_require__","p","monsterIdToGroup","match","filter","text","result","toLowerCase","split","forEach","token","indexOf","ex","console","log","guid","s4","Math","floor","random","toString","substring","sort","collection","a","b","aName","name","bName","modifier","score","mod","str","dieRoll","hitDieType","size","challenge","cr","experience","pcExperience","level","difficulty","traitType","type","nudgeChallenge","value","delta","conditionText","condition","conditionDurationText","combat","duration","saveType","toUpperCase","saves","count","saveDC","point","c","combatants","find","id","combatantID","displayName","rounds","getMonsterNames","encounter","monsterNames","slots","slot","names","push","monsterName","n","createMonster","utils","category","tag","alignment","abilityScores","dex","con","int","wis","cha","ac","hpMax","hpTemp","hitDice","damage","resist","vulnerable","immune","savingThrows","speed","skills","senses","languages","equipment","traits","conditionImmunities","createMapItem","x","y","width","height","terrain","createNotification","combatant","HomeScreen","_this","this","monsters","props","library","length","react_default","createElement","className","href","target","rel","onClick","addOpenGameContent","e","error","React","Component","InfoCard","heading","getHeading","content","getContent","PartiesCard","action","parties","info_card_InfoCard","PartyListItem","partyName","party","pcs","pc","player","key","selected","setSelection","ConfirmButton","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pressed","setState","toggle","callback","_this2","src","warning","alt","details","perform","disabled","PartyCard","selection","activePCs","active","map","join","reduce","array","localeCompare","insightSummary","investigationSummary","perceptionSummary","insight","min","max","investigation","perception","passiveInsight","passiveInvestigation","passivePerception","placeholder","onChange","event","changeValue","addPC","sortPCs","confirm_button_ConfirmButton","removeParty","Radial","dir","dir2","stopPropagation","click","style","direction","showOut","showIn","showDiag","display","arrow","transform","padding","Spin","expanded","factor","nudgeValue","preventDefault","source","minusBtns","plusBtns","factors","onTouchEnd","touchEnd","reverse","minus","plus","infoWidth","label","PCCard","showDetails","options","mode","removeCombatant","radial_Radial","mapMove","spin_Spin","mapRemove","mapAdd","pending","defeated","current","endTurn","makeDefeated","makeCurrent","makeActive","commonStatBlock","race","classes","url","stats","imageStyle","toggleDetails","CardGroup","showCards","hidden","closeBtn","showClose","close","showToggle","toggleCards","cards","PartiesScreen","help","showHelp","parties_card_PartiesCard","party_list_item_PartyListItem","selectParty","activeCards","inactiveCards","party_card_PartyCard","pc_card_PCCard","removePC","addParty","card_group_CardGroup","MonsterLibraryCard","MonsterGroupListItem","groupName","group","matchGroup","monster","matchMonster","MonsterGroupCard","addMonster","sortMonsters","removeMonsterGroup","Expander","Dropdown","open","optionID","select","selectedText","title","selectedID","option","o","ellipsis","items","dropdown_DropdownOption","toggleOpen","DropdownOption","_this3","AbilityScorePanel","showAbilityScores","edit","toggleAbilityScores","TraitPanel","trait","usage","changeTrait","removeTrait","expander_Expander","template","copyTrait","TraitsPanel","actions","legendaryActions","lairActions","regionalEffects","item","trait_panel_TraitPanel","addTrait","ConditionPanel","description","nudgeConditionValue","editCondition","removeCondition","ConditionsPanel","conditions","condition_panel_ConditionPanel","changeConditionValue","conditionID","addCondition","MonsterCard","cloneName","showHP","hp","changeHP","temp","val","sizeAndType","align","wave","_this4","some","s","g","monsterGroupName","_this5","editMonster","setCloneName","cloneMonster","groupOptions","dropdown_Dropdown","moveToGroup","removeEncounterSlot","canAdd","monsterIsInWave","addEncounterSlot","waves","slotSection","ability_score_panel_AbilityScorePanel","traits_panel_TraitsPanel","nudgeDamage","heal","setDamage","conditions_panel_ConditionsPanel","MonsterLibraryScreen","monster_library_card_MonsterLibraryCard","listItems","showMonsterGroup","monster_group_list_item_MonsterGroupListItem","selectMonsterGroup","monster_group_card_MonsterGroupCard","monster_card_MonsterCard","groupID","removeMonster","addMonsterGroup","ErrorCard","SIZE_TYPES","CATEGORY_TYPES","TRAIT_TYPES","CONDITION_TYPES","TERRAIN_TYPES","FilterCard","showAll","sizeOptions","concat","catOptions","cat","resetFilter","summary","challengeMin","challengeMax","toggleAll","WaveCard","removeWave","EncounterBuilderCard","encounters","DifficultyChartPanel","encounterID","partyID","monsterCount","monsterXp","getMonster","xpThresholds","diffSection","adjustedXp","xpEasy","xpMedium","xpHard","xpDeadly","adjustedDifficulty","small","getLeft","xp","getRight","left","right","EncounterCard","partyOptions","difficultySection","difficulty_chart_panel_DifficultyChartPanel","addWave","removeEncounter","EncounterListItem","encounterName","EncounterBuilderScreen","includes","changeFilterValue","waveID","index","error_card_ErrorCard","libraryCards","filter_card_FilterCard","nudgeFilterValue","encounter_builder_card_EncounterBuilderCard","encounter_list_item_EncounterListItem","selectEncounter","encounterCards","encounter_card_EncounterCard","getMonsterCards","card","waveCards","wave_card_WaveCard","field","addEncounter","getLibrarySection","MapFoliosCard","mapFolios","MapFolioListItem","maps","mapFolio","MapFolioCard","addMap","removeMapFolio","HitPointGauge","hpBloodied","hpWidth","hpTempBar","hpTempWidth","MapPanel","border","arguments","undefined","dimensions","i","minX","maxX","minY","maxY","mapDimensions","sideLength","getSideLength","top","getMapDimensions","grid","pos","getPosition","map_panel_GridSquare","position","setSelectedItemID","onDoubleClick","addMapTile","tiles","map_panel_MapTile","tile","selectable","selectedItemID","thumbnail","tokens","map_panel_MapToken","simple","dragOverlay","showOverlay","yOver","xOver","posOver","overlay","gridSquareClicked","GridSquare","doubleClick","MapTile","MapToken","initials","hpGauge","altitudeBadge","conditionsBadge","hit_point_gauge_HitPointGauge","altitude","MapCard","map_panel_MapPanel","editMap","removeMap","MapFoliosScreen","map_folios_card_MapFoliosCard","folios","map_folio_list_item_MapFolioListItem","selectMapFolio","folio","folioCards","map_folio_card_MapFolioCard","map_card_MapCard","addMapFolio","CombatManagerCard","CombatListItem","combatName","timestamp","CombatManagerScreen","selectedTokenID","addingToMapID","setAddingToMapID","leftPaneContent","centrePaneContent","rightPaneContent","createCard","combat_manager_screen_PendingCombatantRow","setSelectedTokenID","combat_manager_screen_CombatantRow","pendingHelp","activeHelp","notifications","combat_manager_screen_Notification","notification","mapSection","addCombatantToMap","selectedCombatant","combat_manager_card_CombatManagerCard","combats","combat_list_item_CombatListItem","resumeEncounter","createCombat","Notification","saveSuccess","PendingCombatantRow","_this6","getInformationText","CombatantRow","_this7","notes","initiative","gauge","Checkbox","checked","unchecked","Selector","tabs","noBorder","itemsPerRow","rowCount","ceil","rowContents","rowIndex","selector_SelectorOption","rowSections","row","SelectorOption","AboutModal","showDev","devOptions","setSelected","checkbox_Checkbox","setOption","setValue","selector_Selector","resetAll","getDevSection","DemographicsModal","chart","demographics","allMonsters","buckets","maxBucketSize","bucket","bars","set","selectChart","MonsterEditorModal","page","showFilter","helpSection","subtype","sections","getHelpOptionsForPage","section","notify","setRandomValue","t","findIndex","splice","m","distinct","d","addedIDs","avg","getActionTypeName","plural","copy","JSON","parse","stringify","newValue","hpPerDie","getValueSection","getActionsSection","dataType","values","v","aValue","bValue","valueSections","rows","round","addRandomTrait","similar","filterContent","toggleMatch","geneSplice","toggleFilter","_this8","_this9","showMonsters","getMonsters","selector","setHelpSection","getHelpSection","monsterList","getFilterCard","margin","transition","setPage","MapTileCard","terrainOptions","moveMapItem","resizeMapItem","cloneMapItem","removeMapItem","MapEditorModal","selectedTileID","factory","smallMapItem","bigMapItem","tools","map_tile_card_MapTileCard","setSelectedTileID","CombatStartModal","enc","f","folioID","mapID","w","encounterInitMode","slotID","partyContent","pcSections","setParty","encounterOptions","encounterContent","selectedEncounter","monsterSections","waveMonsters","setEncounter","folioOptions","selectMapSection","thumbnailSection","mapOptions","combatmapID","setMapID","setFolioID","waveOptions","waveContent","setWave","_this10","slotNames","inputs","combat_start_modal_MonsterName","changeName","setEncounterInitMode","leftSection","rightSection","getPartySection","getEncounterSection","getMapSection","getDifficultySection","getMonsterSection","getWaveSection","MonsterName","_this11","RadioGroup","radio_group_RadioGroupItem","itemID","RadioGroupItem","ConditionModal","conditionName","durationType","object","controls","saveOptions","pointOptions","combatantOptions","durations","radio_group_RadioGroup","setCondition","setDuration","Titlebar","blur","openHome","cog","openAbout","Navbar","partiesStyle","view","libraryStyle","encounterStyle","mapStyle","combatStyle","encountersEnabled","combatEnabled","setView","Dojo","selectedPartyID","selectedMonsterGroupID","selectedEncounterID","selectedMapFolioID","selectedCombatID","modal","data","json","window","localStorage","getItem","setItem","getParty","background","getMonsterGroup","sourceGroup","findMonster","original","clone","parseInt","challenge_rating","armor_class","hit_points","hit_dice","strength","dexterity","constitution","intelligence","wisdom","charisma","damage_resistances","damage_vulnerabilities","damage_immunities","condition_immunities","save","skill","special_abilities","rawTrait","buildTrait","legendary_actions","getMonsterGroupByName","openBracket","closeBracket","desc","getEncounter","sortEncounterSlots","slotContaimer","getMapFolio","issues","init","groupRoll","singleRoll","sortCombatants","getCombat","Date","toLocaleString","newRound","actor","saveNotification","endNotification","conditionIndex","monsterGroup","obj","home_screen_HomeScreen","parties_screen_PartiesScreen","monster_library_screen_MonsterLibraryScreen","libraryFilter","openDemographics","encounter_builder_screen_EncounterBuilderScreen","addWaveToEncounter","map_folios_screen_MapFoliosScreen","combat_manager_screen_CombatManagerScreen","resumeCombat","closeNotification","openWaveModal","pauseCombat","endCombat","modalTitle","modalContent","modalAllowClose","modalAllowScroll","modalButtons","about_modal_AboutModal","demographics_modal_DemographicsModal","monster_editor_modal_MonsterEditorModal","toggleShowSimilarMonsters","saveMonster","closeModal","map_editor_modal_MapEditorModal","saveMap","combat_start_modal_CombatStartModal","startCombat","addWaveToCombat","condition_modal_ConditionModal","addConditionFromModal","editConditionFromModal","titlebar_Titlebar","navbar_Navbar","ReactDOM","render","dojo_Dojo","document","getElementById"],"mappings":"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","file":"static/js/main.5dce20ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow-black.a2fc7a1f.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.697dc1af.svg\";","module.exports = __webpack_public_path__ + \"static/media/close-black.7645a5b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.67a11a95.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.b60accff.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.7003cf50.svg\";","module.exports = __webpack_public_path__ + \"static/media/ellipsis.9650a20f.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.5cbd1005.svg\";","module.exports = __webpack_public_path__ + \"static/media/unchecked.3d4ae2dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.042bb1c2.svg\";","import { Monster, MonsterGroup, Combat, Encounter, Condition } from \"./models/models\";\r\n\r\n// This is an internal dictionary to speed up lookup\r\nvar monsterIdToGroup: { [ id:string ]: MonsterGroup; } = {}\r\n\r\nexport function getMonsterGroup(monster: Monster, library: MonsterGroup[]): MonsterGroup {\r\n    var group = monsterIdToGroup[monster.id];\r\n\r\n    if (!group) {\r\n        var g = library.find(g => g.monsters.includes(monster));\r\n        if (g) {\r\n            group = g;\r\n            monsterIdToGroup[monster.id] = group;\r\n        }\r\n    }\r\n\r\n    return group;\r\n}\r\n\r\nexport function match(filter: string, text: string): boolean {\r\n    if (!filter) {\r\n        return true;\r\n    }\r\n\r\n    var result = true;\r\n\r\n    try {\r\n        var tokens = filter.toLowerCase().split(' ');\r\n        tokens.forEach(token => {\r\n            if (text.toLowerCase().indexOf(token) === -1) {\r\n                result = false;\r\n            }\r\n        });\r\n    } catch (ex) {\r\n        console.log(ex);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function guid(): string {\r\n    var s4 = () => {\r\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n    };\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nexport function sort(collection: any[]): any[] {\r\n    collection.sort((a, b) => {\r\n        var aName = a.name.toLowerCase();\r\n        var bName = b.name.toLowerCase();\r\n        if (aName < bName) return -1;\r\n        if (aName > bName) return 1;\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function sortByValue(collection: any[]): any[] {\r\n    collection.sort((a, b) => {\r\n        if (a.value < b.value) return -1;\r\n        if (a.value > b.value) return 1;\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function sortByCount(collection: any[]): any[] {\r\n    collection.sort((a, b) => {\r\n        if (a.count < b.count) return 1;\r\n        if (a.count > b.count) return -1;\r\n\r\n        var aValue = a.value.toLowerCase();\r\n        var bValue = b.value.toLowerCase();\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n\r\n        return 0;\r\n    });\r\n    return collection;\r\n}\r\n\r\nexport function modifier(score: number): string {\r\n    var mod = Math.floor((score - 10) / 2);\r\n    var str = mod.toString();\r\n    if (mod >= 0) {\r\n        str = '+' + str;\r\n    }\r\n    return str;\r\n}\r\n\r\nexport function dieRoll(): number {\r\n    return Math.floor(Math.random() * 20) + 1;\r\n}\r\n\r\nexport function miniSize(size: string): number {\r\n    switch (size) {\r\n        case 'tiny': return 1;\r\n        case 'small': return 1;\r\n        case 'medium': return 1;\r\n        case 'large': return 2;\r\n        case 'huge': return 3;\r\n        case 'gargantuan': return 4;\r\n        default: return 1;\r\n    }\r\n}\r\n\r\nexport function hitDieType(size: string) {\r\n    switch (size) {\r\n        case 'tiny': return 4;\r\n        case 'small': return 6;\r\n        case 'medium': return 8;\r\n        case 'large': return 10;\r\n        case 'huge': return 12;\r\n        case 'gargantuan': return 20;\r\n        default: return 8;\r\n    }\r\n}\r\n\r\nexport function challenge(cr: number): string {\r\n    switch (cr) {\r\n        case 0.125: return '1/8';\r\n        case 0.25: return '1/4';\r\n        case 0.5: return '1/2';\r\n        default: return cr.toString();\r\n    }\r\n}\r\n\r\nexport function parseChallenge(cr: string): number {\r\n    switch (cr) {\r\n        case '1/8': return 0.125;\r\n        case '1/4': return 0.25;\r\n        case '1/2': return 0.5;\r\n        default: return parseInt(cr);\r\n    }\r\n}\r\n\r\nexport function challengeDetails(): any[] {\r\n    var result: any[] = [];\r\n\r\n    result.push({ cr: 0,        ac: 13,       hpMin: 1, hpMax: 6,       attack: 3,  dmgMin: 0,   dmgMax: 1,   save: 13 });\r\n    result.push({ cr: 0.125,    ac: 13,       hpMin: 7, hpMax: 35,      attack: 3,  dmgMin: 2,   dmgMax: 3,   save: 13 });\r\n    result.push({ cr: 0.25,     ac: 13,       hpMin: 36, hpMax: 49,     attack: 3,  dmgMin: 4,   dmgMax: 5,   save: 13 });\r\n    result.push({ cr: 0.5,      ac: 13,       hpMin: 50, hpMax: 70,     attack: 3,  dmgMin: 6,   dmgMax: 8,   save: 13 });\r\n    result.push({ cr: 1,        ac: 13,       hpMin: 71, hpMax: 85,     attack: 3,  dmgMin: 9,   dmgMax: 14,  save: 13 });\r\n    result.push({ cr: 2,        ac: 13,       hpMin: 86, hpMax: 100,    attack: 3,  dmgMin: 15,  dmgMax: 20,  save: 13 });\r\n    result.push({ cr: 3,        ac: 13,       hpMin: 101, hpMax: 115,   attack: 4,  dmgMin: 21,  dmgMax: 26,  save: 13 });\r\n    result.push({ cr: 4,        ac: 14,       hpMin: 116, hpMax: 130,   attack: 5,  dmgMin: 27,  dmgMax: 32,  save: 14 });\r\n    result.push({ cr: 5,        ac: 15,       hpMin: 131, hpMax: 145,   attack: 6,  dmgMin: 33,  dmgMax: 38,  save: 15 });\r\n    result.push({ cr: 6,        ac: 15,       hpMin: 146, hpMax: 160,   attack: 6,  dmgMin: 39,  dmgMax: 44,  save: 15 });\r\n    result.push({ cr: 7,        ac: 15,       hpMin: 161, hpMax: 175,   attack: 6,  dmgMin: 45,  dmgMax: 50,  save: 15 });\r\n    result.push({ cr: 8,        ac: 16,       hpMin: 176, hpMax: 190,   attack: 7,  dmgMin: 51,  dmgMax: 56,  save: 16 });\r\n    result.push({ cr: 9,        ac: 16,       hpMin: 191, hpMax: 205,   attack: 7,  dmgMin: 57,  dmgMax: 62,  save: 16 });\r\n    result.push({ cr: 10,       ac: 17,       hpMin: 206, hpMax: 220,   attack: 7,  dmgMin: 63,  dmgMax: 68,  save: 16 });\r\n    result.push({ cr: 11,       ac: 17,       hpMin: 221, hpMax: 235,   attack: 8,  dmgMin: 69,  dmgMax: 74,  save: 17 });\r\n    result.push({ cr: 12,       ac: 17,       hpMin: 236, hpMax: 250,   attack: 8,  dmgMin: 75,  dmgMax: 80,  save: 17 });\r\n    result.push({ cr: 13,       ac: 18,       hpMin: 251, hpMax: 265,   attack: 8,  dmgMin: 81,  dmgMax: 86,  save: 18 });\r\n    result.push({ cr: 14,       ac: 18,       hpMin: 266, hpMax: 280,   attack: 8,  dmgMin: 87,  dmgMax: 92,  save: 18 });\r\n    result.push({ cr: 15,       ac: 18,       hpMin: 281, hpMax: 295,   attack: 8,  dmgMin: 93,  dmgMax: 98,  save: 18 });\r\n    result.push({ cr: 16,       ac: 18,       hpMin: 296, hpMax: 310,   attack: 9,  dmgMin: 99,  dmgMax: 104, save: 18 });\r\n    result.push({ cr: 17,       ac: 19,       hpMin: 311, hpMax: 325,   attack: 10, dmgMin: 105, dmgMax: 110, save: 19 });\r\n    result.push({ cr: 18,       ac: 19,       hpMin: 326, hpMax: 340,   attack: 10, dmgMin: 111, dmgMax: 116, save: 19 });\r\n    result.push({ cr: 19,       ac: 19,       hpMin: 341, hpMax: 355,   attack: 10, dmgMin: 117, dmgMax: 122, save: 19 });\r\n    result.push({ cr: 20,       ac: 19,       hpMin: 356, hpMax: 400,   attack: 10, dmgMin: 123, dmgMax: 140, save: 19 });\r\n    result.push({ cr: 21,       ac: 19,       hpMin: 401, hpMax: 445,   attack: 11, dmgMin: 141, dmgMax: 158, save: 20 });\r\n    result.push({ cr: 22,       ac: 19,       hpMin: 446, hpMax: 490,   attack: 11, dmgMin: 159, dmgMax: 176, save: 20 });\r\n    result.push({ cr: 23,       ac: 19,       hpMin: 491, hpMax: 535,   attack: 11, dmgMin: 177, dmgMax: 194, save: 20 });\r\n    result.push({ cr: 24,       ac: 19,       hpMin: 536, hpMax: 580,   attack: 12, dmgMin: 195, dmgMax: 212, save: 21 });\r\n    result.push({ cr: 25,       ac: 19,       hpMin: 581, hpMax: 625,   attack: 12, dmgMin: 213, dmgMax: 230, save: 21 });\r\n    result.push({ cr: 26,       ac: 19,       hpMin: 626, hpMax: 670,   attack: 12, dmgMin: 231, dmgMax: 248, save: 21 });\r\n    result.push({ cr: 27,       ac: 19,       hpMin: 671, hpMax: 715,   attack: 13, dmgMin: 249, dmgMax: 266, save: 22 });\r\n    result.push({ cr: 28,       ac: 19,       hpMin: 716, hpMax: 760,   attack: 13, dmgMin: 267, dmgMax: 284, save: 22 });\r\n    result.push({ cr: 29,       ac: 19,       hpMin: 761, hpMax: 805,   attack: 13, dmgMin: 285, dmgMax: 302, save: 22 });\r\n    result.push({ cr: 30,       ac: 19,       hpMin: 806, hpMax: 850,   attack: 14, dmgMin: 303, dmgMax: 320, save: 23 });\r\n\r\n    return result;\r\n}\r\n\r\nexport function experience(cr: number): number {\r\n    switch (cr) {\r\n        case 0: return 10;\r\n        case 0.125: return 25;\r\n        case 0.25: return 50;\r\n        case 0.5: return 100;\r\n        case 1: return 200;\r\n        case 2: return 450;\r\n        case 3: return 700;\r\n        case 4: return 1100;\r\n        case 5: return 1800;\r\n        case 6: return 2300;\r\n        case 7: return 2900;\r\n        case 8: return 3900;\r\n        case 9: return 5000;\r\n        case 10: return 5900;\r\n        case 11: return 7200;\r\n        case 12: return 8400;\r\n        case 13: return 10000;\r\n        case 14: return 11500;\r\n        case 15: return 13000;\r\n        case 16: return 15000;\r\n        case 17: return 18000;\r\n        case 18: return 20000;\r\n        case 19: return 22000;\r\n        case 20: return 25000;\r\n        case 21: return 33000;\r\n        case 22: return 41000;\r\n        case 23: return 50000;\r\n        case 24: return 62000;\r\n        case 30: return 155000;\r\n        default: return 0;\r\n    }\r\n}\r\n\r\nexport function experienceFactor(count: number): number {\r\n    switch (count) {\r\n        case 0:\r\n            return 0;\r\n        case 1:\r\n            return 1;\r\n        case 2:\r\n            return 1.5;\r\n        case 3:\r\n        case 4:\r\n        case 5:\r\n        case 6:\r\n            return 2;\r\n        case 7:\r\n        case 8:\r\n        case 9:\r\n        case 10:\r\n            return 2.5;\r\n        case 11:\r\n        case 12:\r\n        case 13:\r\n        case 14:\r\n            return 3;\r\n        default:\r\n            return 4;\r\n    }\r\n}\r\n\r\nexport function pcExperience(level: number, difficulty: string): number {\r\n    switch (difficulty) {\r\n        case 'easy':\r\n            switch (level) {\r\n                case 1: return 25;\r\n                case 2: return 50;\r\n                case 3: return 75;\r\n                case 4: return 125;\r\n                case 5: return 250;\r\n                case 6: return 300;\r\n                case 7: return 350;\r\n                case 8: return 450;\r\n                case 9: return 550;\r\n                case 10: return 600;\r\n                case 11: return 800;\r\n                case 12: return 1000;\r\n                case 13: return 1100;\r\n                case 14: return 1250;\r\n                case 15: return 1400;\r\n                case 16: return 1600;\r\n                case 17: return 2000;\r\n                case 18: return 2100;\r\n                case 19: return 2400;\r\n                case 20: return 2800;\r\n                default: return 0;\r\n            }\r\n        case 'medium':\r\n            switch (level) {\r\n                case 1: return 50;\r\n                case 2: return 100;\r\n                case 3: return 150;\r\n                case 4: return 250;\r\n                case 5: return 500;\r\n                case 6: return 600;\r\n                case 7: return 750;\r\n                case 8: return 900;\r\n                case 9: return 1100;\r\n                case 10: return 1200;\r\n                case 11: return 1600;\r\n                case 12: return 2000;\r\n                case 13: return 2200;\r\n                case 14: return 2500;\r\n                case 15: return 2800;\r\n                case 16: return 3200;\r\n                case 17: return 3900;\r\n                case 18: return 4200;\r\n                case 19: return 4900;\r\n                case 20: return 5700;\r\n                default: return 0;\r\n            }\r\n        case 'hard':\r\n            switch (level) {\r\n                case 1: return 75;\r\n                case 2: return 150;\r\n                case 3: return 225;\r\n                case 4: return 375;\r\n                case 5: return 750;\r\n                case 6: return 900;\r\n                case 7: return 1100;\r\n                case 8: return 1400;\r\n                case 9: return 1600;\r\n                case 10: return 1900;\r\n                case 11: return 2400;\r\n                case 12: return 3000;\r\n                case 13: return 3400;\r\n                case 14: return 3800;\r\n                case 15: return 4300;\r\n                case 16: return 4800;\r\n                case 17: return 5900;\r\n                case 18: return 6300;\r\n                case 19: return 7300;\r\n                case 20: return 8500;\r\n                default: return 0;\r\n            }\r\n        case 'deadly':\r\n            switch (level) {\r\n                case 1: return 100;\r\n                case 2: return 200;\r\n                case 3: return 400;\r\n                case 4: return 500;\r\n                case 5: return 1100;\r\n                case 6: return 1400;\r\n                case 7: return 1700;\r\n                case 8: return 2100;\r\n                case 9: return 2400;\r\n                case 10: return 2800;\r\n                case 11: return 3600;\r\n                case 12: return 4500;\r\n                case 13: return 5100;\r\n                case 14: return 5700;\r\n                case 15: return 6400;\r\n                case 16: return 7200;\r\n                case 17: return 8800;\r\n                case 18: return 9500;\r\n                case 19: return 10900;\r\n                case 20: return 12700;\r\n                default: return 0;\r\n            }\r\n        default:\r\n            return 0;\r\n    }\r\n}\r\n\r\nexport function traitType(type: string): string {\r\n    switch (type) {\r\n        case 'trait':\r\n            return 'trait';\r\n        case 'action':\r\n            return 'action';\r\n        case 'legendary':\r\n            return 'legendary action';\r\n        case 'lair':\r\n            return 'lair action';\r\n        case 'regional':\r\n            return 'regional effect';\r\n        default:\r\n            return type;\r\n    }\r\n}\r\n\r\nexport function nudgeChallenge(value: number, delta: number): number {\r\n    var result = 0;\r\n\r\n    switch (value) {\r\n        case 0:\r\n            if (delta === -1) {\r\n                result = 0;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.125;\r\n            }\r\n            break;\r\n        case 0.125:\r\n            if (delta === -1) {\r\n                result = 0;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.25;\r\n            }\r\n            break;\r\n        case 0.25:\r\n            if (delta === -1) {\r\n                result = 0.125;\r\n            }\r\n            if (delta === +1) {\r\n                result = 0.5;\r\n            }\r\n            break;\r\n        case 0.5:\r\n            if (delta === -1) {\r\n                result = 0.25;\r\n            }\r\n            if (delta === +1) {\r\n                result = 1;\r\n            }\r\n            break;\r\n        case 1:\r\n            if (delta === -1) {\r\n                result = 0.5;\r\n            }\r\n            if (delta === +1) {\r\n                result = 2;\r\n            }\r\n            break;\r\n        default:\r\n            result = value + delta;\r\n            break;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function conditionText(condition: Condition): string[] {\r\n    switch (condition.name) {\r\n        case 'blinded':\r\n            return [\r\n                'a blinded creature can’t see and automatically fails any ability check that requires sight',\r\n                'attack rolls against the creature have advantage, and the creature’s attack rolls have disadvantage'\r\n            ];\r\n        case 'charmed':\r\n            return [\r\n                'a charmed creature can’t attack the charmer or target the charmer with harmful abilities or magical effects',\r\n                'the charmer has advantage on any ability check to interact socially with the creature'\r\n            ];\r\n        case 'deafened':\r\n            return [\r\n                'a deafened creature can’t hear and automatically fails any ability check that requires hearing.'\r\n            ];\r\n        case 'exhaustion': {\r\n            switch (condition.level) {\r\n            case 1:\r\n                return [\r\n                    'disadvantage on ability checks'\r\n                ];\r\n            case 2:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved'\r\n                ];\r\n            case 3:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws'\r\n                ];\r\n            case 4:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved'\r\n                ];\r\n            case 5:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved',\r\n                    'speed reduced to 0'\r\n                ];\r\n            case 6:\r\n                return [\r\n                    'disadvantage on ability checks',\r\n                    'speed halved',\r\n                    'disadvantage on attack rolls and saving throws',\r\n                    'hit point maximum halved',\r\n                    'speed reduced to 0',\r\n                    'death'\r\n                ];\r\n            default:\r\n                return [];\r\n            }\r\n        }\r\n        case 'frightened':\r\n            return [\r\n                'a frightened creature has disadvantage on ability checks and attack rolls while the source of its fear is within line of sight',\r\n                'the creature can’t willingly move closer to the source of its fear'\r\n            ];\r\n        case 'grappled':\r\n            return [\r\n                'a grappled creature’s speed becomes 0, and it can’t benefit from any bonus to its speed',\r\n                'the condition ends if the grappler is incapacitated',\r\n                'the condition also ends if an effect removes the grappled creature from the reach of the grappler or grappling effect'\r\n            ];\r\n        case 'incapacitated':\r\n            return [\r\n                'an incapacitated creature can’t take actions or reactions'\r\n            ];\r\n        case 'invisible':\r\n            return [\r\n                'an invisible creature is impossible to see without the aid of magic or a special sense',\r\n                'for the purpose of hiding, the creature is heavily obscured',\r\n                'the creature’s location can be detected by any noise it makes or any tracks it leaves',\r\n                'attack rolls against the creature have disadvantage, and the creature’s attack rolls have advantage'\r\n            ];\r\n        case 'paralyzed':\r\n            return [\r\n                'a paralyzed creature is incapacitated (can’t take actions or reactions) and can’t move or speak',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage',\r\n                'any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature'\r\n            ];\r\n        case 'petrified':\r\n            return [\r\n                'a petrified creature is transformed, along with any nonmagical object it is wearing or carrying, into a solid inanimate substance (usually stone)',\r\n                'its weight increases by a factor of ten, and it ceases aging',\r\n                'the creature is incapacitated (can’t take actions or reactions), can’t move or speak, and is unaware of its surroundings',\r\n                'attack rolls against the creature have advantage',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'the creature has resistance to all damage',\r\n                'the creature is immune to poison and disease, although a poison or disease already in its system is suspended, not neutralized'\r\n            ];\r\n        case 'poisoned':\r\n            return [\r\n                'a poisoned creature has disadvantage on attack rolls and ability checks'\r\n            ];\r\n        case 'prone':\r\n            return [\r\n                'a prone creature’s only movement option is to crawl, unless it stands up and thereby ends the condition',\r\n                'the creature has disadvantage on attack rolls',\r\n                'an attack roll against the creature has advantage if the attacker is Within 5 feet of the creature; otherwise, the attack roll has disadvantage'\r\n            ];\r\n        case 'restrained':\r\n            return [\r\n                'a restrained creature’s speed becomes 0, and it can’t benefit from any bonus to its speed',\r\n                'attack rolls against the creature have advantage, and the creature’s attack rolls have disadvantage',\r\n                'the creature has disadvantage on dexterity saving throws'\r\n            ];\r\n        case 'stunned':\r\n            return [\r\n                'a stunned creature is incapacitated (can’t take actions or reactions), can’t move, and can speak only falteringly',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage'\r\n            ];\r\n        case 'unconscious':\r\n            return [\r\n                'an unconscious creature is incapacitated (can’t take actions or reactions), can’t move or speak, and is unaware of its surroundings',\r\n                'the creature drops whatever its holding and falls prone',\r\n                'the creature automatically fails strength and dexterity saving throws',\r\n                'attack rolls against the creature have advantage',\r\n                'any attack that hits the creature is a critical hit if the attacker is within 5 feet of the creature'\r\n            ];\r\n        case \"custom\":\r\n            return [];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n\r\nexport function conditionDurationText(condition: Condition, combat: Combat) {\r\n    if (condition.duration !== null) {\r\n        switch (condition.duration.type) {\r\n            case \"saves\":\r\n                var saveType = condition.duration.saveType;\r\n                if (saveType !== \"death\") {\r\n                    saveType = saveType.toUpperCase();\r\n                }\r\n                var saves = condition.duration.count > 1 ? \"saves\" : \"save\";\r\n                return \"until you make \" + condition.duration.count + \" \" + saveType + \" \" + saves + \" at dc \" + condition.duration.saveDC;\r\n            case \"combatant\":\r\n                var point = condition.duration.point;\r\n                var c = combat.combatants.find(c => c.id == condition.duration.combatantID);\r\n                var combatant = c ? (c.displayName || c.name || \"unnamed monster\") + \"'s\" : \"someone's\";\r\n                return \"until the \" + point + \" of \" + combatant + \" next turn\";\r\n            case \"rounds\":\r\n                var rounds = condition.duration.count > 1 ? \"rounds\" : \"round\";\r\n                return \"for \" + condition.duration.count + \" \" + rounds;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function getMonsterNames(encounter: Encounter): any[] {\r\n    var monsterNames: any[] = [];\r\n    if (encounter) {\r\n        encounter.slots.forEach(slot => {\r\n            var names: any[] = [];\r\n            if (slot.count === 1) {\r\n                names.push(slot.monsterName);\r\n            } else {\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    names.push(slot.monsterName + \" \" + (n + 1));\r\n                }\r\n            }\r\n\r\n            monsterNames.push({\r\n                id: slot.id,\r\n                names: names\r\n            });\r\n        });\r\n    }\r\n\r\n    return monsterNames;\r\n}","import * as utils from '../utils';\r\n\r\nimport { Party, PC, MonsterGroup, Monster, Trait, Encounter, EncounterSlot, EncounterWave, MapFolio, Map, MapItem, Combat, Notification, Condition } from './models';\r\n\r\nexport function createParty(): Party {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        pcs: []\r\n    };\r\n}\r\n\r\nexport function createPC(): PC {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"pc\",\r\n        active: true,\r\n        player: \"\",\r\n        name: \"\",\r\n        race: \"\",\r\n        classes: \"\",\r\n        background: \"\",\r\n        level: 1,\r\n        languages: \"Common\",\r\n        passiveInsight: 10,\r\n        passiveInvestigation: 10,\r\n        passivePerception: 10,\r\n        initiative: 10,\r\n        url: \"\"\r\n    };\r\n}\r\n\r\nexport function createMonsterGroup(): MonsterGroup {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        monsters: []\r\n    };\r\n}\r\n\r\nexport function createMonster(): Monster {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"monster\",\r\n        name: \"\",\r\n        size: \"medium\",\r\n        category: \"humanoid\",\r\n        tag: \"\",\r\n        alignment: \"\",\r\n        challenge: 1,\r\n        abilityScores: {\r\n            str: 10,\r\n            dex: 10,\r\n            con: 10,\r\n            int: 10,\r\n            wis: 10,\r\n            cha: 10\r\n        },\r\n        ac: 10,\r\n        hpMax: 4,\r\n        hpTemp: 0,\r\n        hitDice: 1,\r\n        damage: {\r\n            resist: \"\",\r\n            vulnerable: \"\",\r\n            immune: \"\"\r\n        },\r\n        savingThrows: \"\",\r\n        speed: \"\",\r\n        skills: \"\",\r\n        senses: \"\",\r\n        languages: \"\",\r\n        equipment: \"\",\r\n        traits: [],\r\n        conditionImmunities: \"\"\r\n    };\r\n}\r\n\r\nexport function createTrait(): Trait {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        usage: \"\",\r\n        type: \"action\",\r\n        text: \"\"\r\n    };\r\n}\r\n\r\nexport function createEncounter(): Encounter {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        slots: [],\r\n        waves: []\r\n    };\r\n}\r\n\r\nexport function createEncounterSlot(): EncounterSlot {\r\n    return {\r\n        id: utils.guid(),\r\n        monsterGroupName: \"\",\r\n        monsterName: \"\",\r\n        count: 1\r\n    };\r\n}\r\n\r\nexport function createEncounterWave(): EncounterWave {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        slots: []\r\n    };\r\n}\r\n\r\nexport function createMapFolio(): MapFolio {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        maps: []\r\n    };\r\n}\r\n\r\nexport function createMap(): Map {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        items: []\r\n    };\r\n}\r\n\r\nexport function createMapItem(): MapItem {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"tile\",\r\n        x: 0,\r\n        y: 0,\r\n        width: 4,\r\n        height: 4,\r\n        terrain: null\r\n    };\r\n}\r\n\r\nexport function createCombat(): Combat {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        encounterID: null,\r\n        combatants: [],\r\n        map: null,\r\n        round: 1,\r\n        notifications: [],\r\n        issues: []\r\n    };\r\n}\r\n\r\nexport function createNotification(): Notification {\r\n    return {\r\n        id: utils.guid(),\r\n        type: \"\",\r\n        condition: null,\r\n        combatant: null\r\n    };\r\n}\r\n\r\nexport function createCondition(): Condition {\r\n    return {\r\n        id: utils.guid(),\r\n        name: \"\",\r\n        level: 1,\r\n        text: null,\r\n        duration: null\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class HomeScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var monsters = null;\r\n            if (this.props.library.length === 0) {\r\n                monsters = (\r\n                    <div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"text\">\r\n                            <div>since your collection of monsters is empty, you might want to start by pressing the button below to add monsters from the <a href=\"http://dnd.wizards.com/articles/features/systems-reference-document-srd\" target=\"_blank\" rel=\"noopener noreferrer\">system reference document</a></div>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                            <button onClick={() => this.props.addOpenGameContent()}>add monsters</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"home scrollable\">\r\n                <div className=\"vertical-center-outer\">\r\n                    <div className=\"vertical-center-middle\">\r\n                        <div className=\"vertical-center-inner\">\r\n                            <div className=\"welcome-panel\">\r\n                                <div className=\"heading\">welcome to <b>dojo</b></div>\r\n                                <div className=\"text\">\r\n                                    <div><b>dojo</b> is an app for dms of dungeons and dragons fifth edition</div>\r\n                                </div>\r\n                                <div className=\"text\">\r\n                                    <div>\r\n                                        with <b>dojo</b> you can:\r\n                                        <ul>\r\n                                            <li>build unique, challenging monsters</li>\r\n                                            <li>create encounters of just the right difficulty for your players</li>\r\n                                            <li>design intricate tactical maps</li>\r\n                                            <li>run combat without the book-keeping</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                {monsters}\r\n                                <div className=\"divider\"></div>\r\n                                <div className=\"text\">\r\n                                    <div>use the buttons at the bottom of the screen to access the app's features</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class InfoCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            if (this.props.getHeading) {\r\n                heading = this.props.getHeading();\r\n            }\r\n\r\n            var content = null;\r\n            if (this.props.getContent) {\r\n                content = this.props.getContent();\r\n            }\r\n            if (!content) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div className=\"card\">\r\n                    {heading}\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class PartiesCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.parties.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start adding a party, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select a party from the list to see pc details</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">\r\n                        <div>this page is where you can tell dojo all about your pcs</div>\r\n                    </div>\r\n                    <div className=\"section\">\r\n                        <div>you can add a party for each of your gaming groups</div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class PartyListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var partyName = this.props.party.name;\r\n            if (!partyName) {\r\n                partyName = \"unnamed party\";\r\n            }\r\n\r\n            var pcs = [];\r\n            for (var n = 0; n !== this.props.party.pcs.length; ++n) {\r\n                var pc = this.props.party.pcs[n];\r\n                var name = pc.name;\r\n                if (pc.player) {\r\n                    name += \" (\" + pc.player + \")\";\r\n                }\r\n                if (!name) {\r\n                    name = \"unnamed pc\";\r\n                }\r\n                pcs.push(<div key={pc.id} className=\"text\">{name}</div>);\r\n            }\r\n            if (pcs.length === 0) {\r\n                pcs.push(<div key=\"empty\" className=\"text\">no pcs</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.party)}>\r\n                    <div className=\"heading\">{partyName}</div>\r\n                    {pcs}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport warning from \"../../resources/images/warning.svg\";\r\n\r\n/*\r\n<ConfirmButton\r\n    text=\"TEXT\"\r\n    details=\"TEXT\"\r\n    disabled={BOOLEAN}\r\n    callback={() => CALLBACK_FUNCTION}\r\n/>\r\n*/\r\n\r\nexport default class ConfirmButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pressed: false\r\n        };\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            pressed: !this.state.pressed\r\n        });\r\n    }\r\n\r\n    perform() {\r\n        this.toggle();\r\n        this.props.callback();\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var content = null;\r\n            if (this.state.pressed) {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"title\">{this.props.text} - are you sure?</div>\r\n                        <img className=\"image\" src={warning} alt=\"warning\" />\r\n                        {this.props.details ? <div className=\"details\">{this.props.details}</div> : null}\r\n                        <div className=\"confirmation\">\r\n                            <div className=\"destructive\" onClick={() => this.perform()}>yes</div>\r\n                            <div className=\"non-destructive\" onClick={() => this.toggle()}>no</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"title\">{this.props.text}</div>\r\n                        <img className=\"image\" src={warning} alt=\"warning\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <button className={this.props.disabled ? \"disabled\" : \"\"} onClick={() => this.toggle()}>\r\n                    {content}\r\n                </button>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class PartyCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                var activePCs = this.props.selection.pcs.filter(pc => pc.active);\r\n\r\n                var languages = activePCs\r\n                    .map(pc => pc.languages)\r\n                    .join(\", \")\r\n                    .split(/[ ,;]+/)\r\n                    .reduce((array, value) => {\r\n                        if (array.indexOf(value) === -1) {\r\n                            array.push(value);\r\n                        }\r\n                        return array;\r\n                    }, [])\r\n                    .sort((a, b) => {\r\n                        if (a === \"Common\") {\r\n                            return -1;\r\n                        }\r\n                        if (b === \"Common\") {\r\n                            return 1;\r\n                        }\r\n                        return a.localeCompare(b);\r\n                    })\r\n                    .join(\", \");\r\n\r\n                var insightSummary = \"-\";\r\n                var investigationSummary = \"-\";\r\n                var perceptionSummary = \"-\";\r\n\r\n                if (activePCs.length !== 0) {\r\n                    var insight = { min: null, max: null };\r\n                    var investigation = { min: null, max: null };\r\n                    var perception = { min: null, max: null };\r\n\r\n                    activePCs.forEach(pc => {\r\n                        insight.min = insight.min === null ? pc.passiveInsight : Math.min(insight.min, pc.passiveInsight);\r\n                        insight.max = insight.max === null ? pc.passiveInsight : Math.max(insight.max, pc.passiveInsight);\r\n                        investigation.min = investigation.min === null ? pc.passiveInvestigation : Math.min(investigation.min, pc.passiveInvestigation);\r\n                        investigation.max = investigation.max === null ? pc.passiveInvestigation : Math.max(investigation.max, pc.passiveInvestigation);\r\n                        perception.min = perception.min === null ? pc.passivePerception : Math.min(perception.min, pc.passivePerception);\r\n                        perception.max = perception.max === null ? pc.passivePerception : Math.max(perception.max, pc.passivePerception);\r\n                    });\r\n\r\n                    insightSummary = insight.min === insight.max ? insight.min : insight.min + \" - \" + insight.max;\r\n                    investigationSummary = investigation.min === investigation.max ? investigation.min : investigation.min + \" - \" + investigation.max;\r\n                    perceptionSummary = perception.min === perception.max ? perception.min : perception.min + \" - \" + perception.max;\r\n                }\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">party</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"party name\" value={this.props.selection.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <div className=\"subheading\">languages</div>\r\n                        </div>\r\n                        <div className=\"section\">\r\n                            {languages}\r\n                        </div>\r\n                        <div className=\"section\">\r\n                            <div className=\"subheading\">passive skills</div>\r\n                        </div>\r\n                        <div className=\"table\">\r\n                            <div>\r\n                                <div className=\"cell three\"><b>insight</b></div>\r\n                                <div className=\"cell three\"><b>invest.</b></div>\r\n                                <div className=\"cell three\"><b>percep.</b></div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"cell three\">{insightSummary}</div>\r\n                                <div className=\"cell three\">{investigationSummary}</div>\r\n                                <div className=\"cell three\">{perceptionSummary}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                        <button onClick={() => this.props.addPC(\"new pc\")}>add a new pc</button>\r\n                            <button onClick={() => this.props.sortPCs()}>sort pcs</button>\r\n                            <ConfirmButton text=\"delete party\" callback={() => this.props.removeParty()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\n\r\n/*\r\n<Radial\r\n    direction=\"out\" \"in\" \"both\" \"eight\"\r\n    disabled=BOOLEAN\r\n    click={(dir, in|out => null}\r\n/>\r\n*/\r\n\r\nexport default class Radial extends React.Component {\r\n    click(e, dir, dir2) {\r\n        e.stopPropagation();\r\n        this.props.click(dir, dir2);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"radial \"+ (this.props.direction || \"out\");\r\n            if (this.props.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            var showOut = (this.props.direction === \"out\") | (this.props.direction === \"both\") | (this.props.direction === \"eight\");\r\n            var showIn = (this.props.direction === \"in\") | (this.props.direction === \"both\");\r\n            var showDiag = (this.props.direction === \"eight\");\r\n\r\n            return (\r\n                <div className={style}>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(135deg)\" }} alt=\"nw\" onClick={e => this.click(e, \"NW\")}/>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(180deg)\" }} alt=\"n\" onClick={e => this.click(e, \"N\", \"out\")}/>\r\n                        </div>\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\" }} alt=\"n\" onClick={e => this.click(e, \"N\", \"in\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-135deg)\" }} alt=\"ne\" onClick={e => this.click(e, \"NE\")}/>\r\n                    </div>\r\n                    <div className=\"btn\" style={{ padding: (showIn && showOut) ? \"10px 0\" : \"0\"}}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(90deg)\" }} alt=\"w\" onClick={e => this.click(e, \"W\", \"out\")}/>\r\n                        <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(-90deg)\" }} alt=\"w\" onClick={e => this.click(e, \"W\", \"in\")}/>\r\n                    </div>\r\n                    <div className=\"empty\"></div>\r\n                    <div className=\"btn\" style={{ padding: (showIn && showOut) ? \"10px 0\" : \"0\"}}>\r\n                        <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(90deg)\" }} alt=\"e\" onClick={e => this.click(e, \"E\", \"in\")}/>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-90deg)\" }} alt=\"e\" onClick={e => this.click(e, \"E\", \"out\")}/>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(45deg)\" }} alt=\"sw\" onClick={e => this.click(e, \"SW\")}/>\r\n                    </div>\r\n                    <div className=\"btn\">\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showIn ? \"inline-block\" : \"none\", transform: \"rotate(180deg)\" }} alt=\"s\" onClick={e => this.click(e, \"S\", \"in\")}/>\r\n                        </div>\r\n                        <div>\r\n                            <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\" }} alt=\"s\" onClick={e => this.click(e, \"S\", \"out\")}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"empty\" style={{ display: showDiag ? \"none\" : \"inline-block\" }}></div>\r\n                    <div className=\"btn diag\" style={{ display: showDiag ? \"inline-block\" : \"none\" }}>\r\n                        <img src={arrow} style={{ display: showOut ? \"inline-block\" : \"none\", transform: \"rotate(-45deg)\" }} alt=\"se\" onClick={e => this.click(e, \"SE\")}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport plus from \"../../resources/images/plus.svg\";\r\nimport minus from \"../../resources/images/minus.svg\";\r\n\r\n/*\r\n<Spin\r\n    source={SOURCEOBJECT}\r\n    name=\"FIELDNAME\"\r\n    label=\"LABEL\"\r\n    factors={[1, 10, 100]}\r\n    disabled={BOOLEAN}\r\n    display={value => this.displayValue(value)}\r\n    nudgeValue={delta => this.nudgeValue(SOURCEOBJECT, FIELDNAME, delta)}\r\n/>\r\n*/\r\n\r\nexport default class Spin extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            expanded: false,\r\n            factor: 1\r\n        };\r\n    }\r\n\r\n    toggleExpanded() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    click(e, delta) {\r\n        e.stopPropagation();\r\n        this.props.nudgeValue(delta);\r\n    }\r\n\r\n    touchEnd(e, delta) {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.props.nudgeValue(delta);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"info-value\";\r\n            var value = this.props.source[this.props.name];\r\n            if (value === 0) {\r\n                style += \" dimmed\";\r\n            }\r\n\r\n            if (this.props.display) {\r\n                value = this.props.display(value);\r\n            }\r\n\r\n            var minusBtns = [];\r\n            var plusBtns = [];\r\n\r\n            if (this.props.factors) {\r\n                this.props.factors.forEach(factor => {\r\n                    minusBtns.push(\r\n                        <div key={\"minus\" + factor} className=\"spin-button factor\" onTouchEnd={e => this.touchEnd(e, -1 * factor)} onClick={e => this.click(e, -1 * factor)}>\r\n                            {\"-\" + factor}\r\n                        </div>\r\n                    );\r\n        \r\n                    plusBtns.push(\r\n                        <div key={\"plus\" + factor} className=\"spin-button factor\" onTouchEnd={e => this.touchEnd(e, +1 * factor)} onClick={e => this.click(e, +1 * factor)}>\r\n                            {\"+\" + factor}\r\n                        </div>\r\n                    );        \r\n                });\r\n\r\n                minusBtns.reverse();\r\n            } else {\r\n                minusBtns.push(\r\n                    <div key=\"minus1\" className=\"spin-button\" onTouchEnd={e => this.touchEnd(e, -1)} onClick={e => this.click(e, -1)}>\r\n                        <img className=\"image\" src={minus} alt=\"minus\" />\r\n                    </div>\r\n                );\r\n    \r\n                plusBtns.push(\r\n                    <div key=\"plus1\" className=\"spin-button\" onTouchEnd={e => this.touchEnd(e, +1)} onClick={e => this.click(e, +1)}>\r\n                        <img className=\"image\" src={plus} alt=\"plus\" />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var infoWidth = 80 * (this.props.factors? this.props.factors.length : 1);\r\n\r\n            return (\r\n                <div className={this.props.disabled ? \"spin disabled\" : \"spin\"}>\r\n                    <div className=\"minus\">\r\n                        {minusBtns}\r\n                    </div>\r\n                    <div className=\"info\" style={{ width: \"calc(100% - \" + infoWidth + \"px)\" }}>\r\n                        <div className=\"info-label\">{this.props.label}</div>\r\n                        <div className={style}>{value}</div>\r\n                    </div>\r\n                    <div className=\"plus\">\r\n                        {plusBtns}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Radial from '../controls/radial';\r\nimport Spin from '../controls/spin';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class PCCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showDetails: false\r\n        };\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var options = [];\r\n            if (this.props.mode.indexOf(\"edit\") !== -1) {\r\n                if (this.props.combatant.active) {\r\n                    options.push(<button key=\"toggle-active\" onClick={() => this.props.changeValue(this.props.combatant, \"active\", false)}>mark inactive</button>);\r\n                } else {\r\n                    options.push(<button key=\"toggle-active\" onClick={() => this.props.changeValue(this.props.combatant, \"active\", true)}>mark active</button>);\r\n                }\r\n                options.push(<ConfirmButton key=\"remove\" text=\"delete pc\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                if (this.props.mode.indexOf(\"tactical\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"on-map\") !== -1) {\r\n                        options.push(\r\n                            <div key=\"mapMove\" className=\"section centered\">\r\n                                <Radial\r\n                                    direction=\"eight\"\r\n                                    click={dir => this.props.mapMove(this.props.combatant, dir)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                        options.push(\r\n                            <Spin\r\n                                key=\"altitude\"\r\n                                source={this.props.combatant}\r\n                                name=\"altitude\"\r\n                                label=\"altitude\"\r\n                                display={value => value + \" ft.\"}\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"altitude\", delta * 5)}\r\n                            />\r\n                        );\r\n                        options.push(<button key=\"mapRemove\" onClick={() => this.props.mapRemove(this.props.combatant)}>remove from map</button>);\r\n                    }\r\n                    if (this.props.mode.indexOf(\"off-map\") !== -1) {\r\n                        options.push(<button key=\"mapAdd\" onClick={() => this.props.mapAdd(this.props.combatant)}>add to map</button>);\r\n                    }\r\n                    options.push(<div key=\"tactical-div\" className=\"divider\"></div>);\r\n                }\r\n                if (this.props.combatant.pending && !this.props.combatant.active && !this.props.combatant.defeated) {\r\n                    options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                }\r\n                if (!this.props.combatant.pending && this.props.combatant.active && !this.props.combatant.defeated) {\r\n                    if (this.props.combatant.current) {\r\n                        options.push(<button key=\"endTurn\" onClick={() => this.props.endTurn(this.props.combatant)}>end turn</button>);\r\n                        options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated and end turn</button>);\r\n                    } else {\r\n                        options.push(<button key=\"makeCurrent\" onClick={() => this.props.makeCurrent(this.props.combatant)}>start turn</button>);\r\n                        options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated</button>);\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                }\r\n                if (!this.props.combatant.pending && !this.props.combatant.active && this.props.combatant.defeated) {\r\n                    options.push(<button key=\"makeActive\" onClick={() => this.props.makeActive(this.props.combatant)}>mark as active</button>);\r\n                    options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                }\r\n            }\r\n\r\n            var commonStatBlock = (\r\n                <div className=\"stats\">\r\n                    <div className=\"section centered\">\r\n                        <div className=\"lowercase\">\r\n                            <i>\r\n                                <span>{this.props.combatant.race || 'race'} {this.props.combatant.classes || 'class'}</span>,\r\n                                <span>level {this.props.combatant.level}</span>\r\n                            </i>\r\n                        </div>\r\n                        <div style={{ display: this.props.combatant.url ? \"\" : \"none\" }}>\r\n                            <a href={this.props.combatant.url} target=\"_blank\" rel=\"noopener noreferrer\">d&d beyond sheet</a>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"section subheading\">languages</div>\r\n                    <div className=\"section\">\r\n                        {this.props.combatant.languages || \"-\"}\r\n                    </div>\r\n                    <div className=\"section subheading\">passive skills</div>\r\n                    <div className=\"table\">\r\n                        <div>\r\n                            <div className=\"cell three\"><b>insight</b></div>\r\n                            <div className=\"cell three\"><b>invest.</b></div>\r\n                            <div className=\"cell three\"><b>percep.</b></div>\r\n                        </div>\r\n                        <div>\r\n                            <div className=\"cell three\">{this.props.combatant.passiveInsight}</div>\r\n                            <div className=\"cell three\">{this.props.combatant.passiveInvestigation}</div>\r\n                            <div className=\"cell three\">{this.props.combatant.passivePerception}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            var stats = null;\r\n            if (this.props.mode.indexOf(\"edit\") !== -1) {\r\n                if (this.state.showDetails) {\r\n                    stats = (\r\n                        <div className=\"edit\">\r\n                            <div className=\"section\">\r\n                                <div className=\"input-label\" style={{ display: this.state.showDetails ? \"\" : \"none\" }}>character name:</div>\r\n                                <input type=\"text\" value={this.props.combatant.name} onChange={event => this.props.changeValue(this.props.combatant, \"name\", event.target.value)} />\r\n                                <div className=\"input-label\" style={{ display: this.state.showDetails ? \"\" : \"none\" }}>player name:</div>\r\n                                <input type=\"text\" value={this.props.combatant.player} onChange={event => this.props.changeValue(this.props.combatant, \"player\", event.target.value)} />\r\n                                <div className=\"input-label\">race:</div>\r\n                                <input type=\"text\" value={this.props.combatant.race} onChange={event => this.props.changeValue(this.props.combatant, \"race\", event.target.value)} />\r\n                                <div className=\"input-label\">class:</div>\r\n                                <input type=\"text\" value={this.props.combatant.classes} onChange={event => this.props.changeValue(this.props.combatant, \"classes\", event.target.value)} />\r\n                                <div className=\"input-label\">level:</div>\r\n                                <Spin\r\n                                    source={this.props.combatant}\r\n                                    name=\"level\"\r\n                                    nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"level\", delta)}\r\n                                />\r\n                                <div className=\"input-label\">languages:</div>\r\n                                <input type=\"text\" value={this.props.combatant.languages} onChange={event => this.props.changeValue(this.props.combatant, \"languages\", event.target.value)} />\r\n                                <div className=\"input-label\">d&d beyond link:</div>\r\n                                <input type=\"text\" value={this.props.combatant.url} onChange={event => this.props.changeValue(this.props.combatant, \"url\", event.target.value)} />\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section subheading\">passive skills</div>\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passiveInsight\"\r\n                                label=\"insight\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passiveInsight\", delta)}\r\n                            />\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passiveInvestigation\"\r\n                                label=\"investigation\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passiveInvestigation\", delta)}\r\n                            />\r\n                            <Spin\r\n                                source={this.props.combatant}\r\n                                name=\"passivePerception\"\r\n                                label=\"perception\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"passivePerception\", delta)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                } else {\r\n                    stats = commonStatBlock;\r\n                }\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                stats = commonStatBlock;\r\n            }\r\n\r\n            var toggle = null;\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                // Don't show toggle button for combatant\r\n            } else {\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n                toggle = <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n            }\r\n\r\n            return (\r\n                <div className=\"card pc\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.combatant.displayName || this.props.combatant.name || \"unnamed pc\"}</div>\r\n                        {toggle}\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {stats}\r\n                        <div style={{ display: options.length > 0 ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                {options}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\nimport close from \"../../resources/images/close-black.svg\";\r\n\r\nexport default class CardGroup extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showCards: true\r\n        }\r\n    }\r\n\r\n    toggleCards() {\r\n        this.setState({\r\n            showCards: !this.state.showCards\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.hidden) {\r\n                return null;\r\n            }\r\n\r\n            var heading = null;\r\n            if (this.props.heading) {\r\n                var closeBtn = null;\r\n                if (this.props.showClose) {\r\n                    closeBtn = (\r\n                        <img className=\"image\" src={close} alt=\"close\" onClick={() => this.props.close()} />\r\n                    );\r\n                }\r\n\r\n                var toggle = null;\r\n                if (this.props.showToggle) {\r\n                    var style = this.state.showCards ? \"image rotate\" : \"image\";\r\n                    toggle = (\r\n                        <img className={style} src={arrow} alt=\"arrow\" onClick={() => this.toggleCards()} />\r\n                    );\r\n                }\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.heading}</div>\r\n                        {toggle}\r\n                        {closeBtn}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var cards = [];\r\n            if (this.props.content && this.state.showCards) {\r\n                cards = this.props.content;\r\n            }\r\n\r\n            return (\r\n                <div className=\"card-group\">\r\n                    {heading}\r\n                    <div className=\"row small-up-1 medium-up-2 large-up-4 collapse\">\r\n                        {cards}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport PartiesCard from '../cards/information/parties-card';\r\nimport PartyListItem from '../list-items/party-list-item';\r\nimport PartyCard from '../cards/party-card';\r\nimport PCCard from '../cards/pc-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class PartiesScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <PartiesCard parties={this.props.parties}/>\r\n                );\r\n            }\r\n\r\n            var parties = [];\r\n            for (var n = 0; n !== this.props.parties.length; ++n) {\r\n                var party = this.props.parties[n];\r\n                parties.push(\r\n                    <PartyListItem\r\n                        key={party.id}\r\n                        party={party}\r\n                        selected={party === this.props.selection}\r\n                        setSelection={party => this.props.selectParty(party)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var activeCards = [];\r\n            var inactiveCards = [];\r\n\r\n            if (this.props.selection) {\r\n                activeCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <PartyCard\r\n                            selection={this.props.selection}\r\n                            addPC={name => this.props.addPC(name)}\r\n                            sortPCs={() => this.props.sortPCs()}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            removeParty={() => this.props.removeParty()}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var activePCs = this.props.selection.pcs.filter(pc => pc.active);\r\n                activePCs.forEach(pc => {\r\n                    activeCards.push(\r\n                        <div className=\"column\" key={pc.id}>\r\n                            <PCCard\r\n                                combatant={pc}\r\n                                mode={\"edit\"}\r\n                                changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                removeCombatant={combatant => this.props.removePC(combatant)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                var inactivePCs = this.props.selection.pcs.filter(pc => !pc.active);\r\n                inactivePCs.forEach(pc => {\r\n                    inactiveCards.push(\r\n                        <div className=\"column\" key={pc.id}>\r\n                            <PCCard\r\n                                combatant={pc}\r\n                                mode={\"edit\"}\r\n                                changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                removeCombatant={combatant => this.props.removePC(combatant)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                if (activePCs.length === 0) {\r\n                    activeCards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no pcs</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            var name = null;\r\n            if (this.props.selection) {\r\n                name = this.props.selection.name || \"unnamed party\";\r\n            }\r\n\r\n            return (\r\n                <div className=\"parties row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addParty(\"new party\")}>add a new party</button>\r\n                        {parties}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={activeCards}\r\n                            heading={name}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectParty(null)}\r\n                        />\r\n                        <CardGroup\r\n                            content={inactiveCards}\r\n                            heading=\"inactive pcs\"\r\n                            showClose={false}\r\n                            hidden={inactiveCards.length === 0}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class MonsterLibraryCard extends React.Component {\r\n    render() {\r\n        return (\r\n            <InfoCard\r\n                getContent={() => (\r\n                    <div>\r\n                        <div className=\"section\">you can maintain your menagerie of monsters here</div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">select a monster group from the list to see stat blocks for monsters in that group</div>\r\n                        <div className=\"section\">to quickly find a monster, type its name into the filter box</div>\r\n                    </div>\r\n                )}\r\n            />\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nexport default class MonsterGroupListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var groupName = this.props.group.name;\r\n            if (!groupName) {\r\n                groupName = \"unnamed group\";\r\n            }\r\n\r\n            var matchGroup = utils.match(this.props.filter, this.props.group.name);\r\n\r\n            var monsters = [];\r\n            for (var n = 0; n !== this.props.group.monsters.length; ++n) {\r\n                var monster = this.props.group.monsters[n];\r\n                var matchMonster = utils.match(this.props.filter, monster.name);\r\n                if (matchGroup || matchMonster) {\r\n                    var name = monster.name;\r\n                    if (!name) {\r\n                        name = \"unnamed monster\";\r\n                    }\r\n                    monsters.push(<div key={monster.id} className=\"text\">{name}</div>);\r\n                }\r\n            }\r\n            if (monsters.length === 0) {\r\n                monsters.push(<div key=\"empty\" className=\"text\">no monsters</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.group)}>\r\n                    <div className=\"heading\">{groupName}</div>\r\n                    {monsters}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class MonsterGroupCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">monster group</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"group name\" value={this.props.selection.name} disabled={this.props.filter} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button className={this.props.filter ? \"disabled\" : \"\"} onClick={() => this.props.addMonster(\"new monster\")}>add a new monster</button>\r\n                            <button className={this.props.filter ? \"disabled\" : \"\"} onClick={() => this.props.sortMonsters()}>sort monsters</button>\r\n                            <ConfirmButton text=\"delete group\" callback={() => this.props.removeMonsterGroup()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport arrow from \"../../resources/images/down-arrow-black.svg\";\r\n\r\n/*\r\n<Expander\r\n    text=\"TEXT\"\r\n    content={<div>ANY CONTENT</div>}\r\n    disabled={BOOLEAN}\r\n/>\r\n*/\r\n\r\nexport default class Expander extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            expanded: !this.state.expanded\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = this.props.disabled ? \"expander disabled\" : \"expander\";\r\n            if (this.state.expanded) {\r\n                style += \" expanded\";\r\n            }\r\n\r\n            var content = null;\r\n            if (this.state.expanded) {\r\n                content = (\r\n                    <div className=\"expander-content\">\r\n                        {this.props.content}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var text = text;\r\n\r\n            return (\r\n                <div className={style}>\r\n                    <div className=\"expander-header\" onClick={() => this.toggle()}>\r\n                        <div className=\"expander-text\">{this.props.text}</div>\r\n                        <img className=\"expander-button\" src={arrow} alt=\"arrow\" />\r\n                    </div>\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ellipsis from \"../../resources/images/ellipsis.svg\";\r\n\r\n/*\r\nvar options = [\r\n    {\r\n        id: \"one\",\r\n        text: \"One\",\r\n        disabled: false\r\n    },\r\n    {\r\n        id: \"two\",\r\n        text: \"Two\",\r\n        disabled: true\r\n    },\r\n    {\r\n        id: \"three\",\r\n        text: \"Three\",\r\n        disabled: false\r\n    }\r\n];\r\n\r\n<Dropdown\r\n    options={options}\r\n    placeholder={PLACEHOLDER_TEXT}\r\n    selectedID={CURRENT_OPTION_ID}\r\n    disabled={BOOLEAN}\r\n    select={optionID => this.changeValue(SOURCEOBJECT, FIELDNAME, optionID)}\r\n/>\r\n*/\r\n\r\nexport default class Dropdown extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    toggleOpen(e) {\r\n        e.stopPropagation();\r\n        this.setState({\r\n            open: !this.state.open\r\n        });\r\n    }\r\n\r\n    select(optionID) {\r\n        this.setState({\r\n            open: false\r\n        });\r\n        this.props.select(optionID);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.options.length === 0) {\r\n                return null;\r\n            }\r\n\r\n            var style = this.props.disabled ? \"dropdown disabled\" : \"dropdown\";\r\n            var content = [];\r\n\r\n            var selectedText = null;\r\n            var title = null;\r\n            if (this.props.selectedID) {\r\n                var option = null;\r\n                this.props.options.forEach(o => {\r\n                    if (o.id === this.props.selectedID) {\r\n                        option = o;\r\n                    }\r\n                });\r\n\r\n                if (option) {\r\n                    selectedText = option.text;\r\n                    title = option.text;\r\n                }\r\n            } else {\r\n                selectedText = this.props.text || this.props.placeholder || \"select...\";\r\n            }\r\n\r\n            content.push(\r\n                <div key=\"selection\" className=\"dropdown-top\" title={title}>\r\n                    <div className=\"item-text\">{selectedText}</div>\r\n                    <img className=\"arrow\" src={ellipsis} alt=\"arrow\" />\r\n                </div>\r\n            );\r\n\r\n            if (this.state.open) {\r\n                style += \" open\";\r\n\r\n                var items = this.props.options.map(option => {\r\n                    if (option.text === null) {\r\n                        return <div key={option.id} className=\"divider\"></div>\r\n                    } else {\r\n                        return (\r\n                            <DropdownOption\r\n                                key={option.id}\r\n                                option={option}\r\n                                selected={option.id === this.props.selectedID}\r\n                                select={optionID => this.select(optionID)}\r\n                            />\r\n                        );\r\n                    }\r\n                });\r\n\r\n                content.push(\r\n                    <div key=\"options\" className=\"dropdown-options\">\r\n                        {items}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className={style} onClick={e => this.toggleOpen(e)}>\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass DropdownOption extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (!this.props.option.disabled) {\r\n            this.props.select(this.props.option.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var style = \"dropdown-option\";\r\n            if (this.props.selected) {\r\n                style += \" selected\";\r\n            }\r\n            if (this.props.option.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div className={style} title={this.props.option.text} onClick={e => this.click(e)}>\r\n                    {this.props.option.text}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Spin from '../controls/spin';\r\n\r\nexport default class AbilityScorePanel extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAbilityScores: false\r\n        };\r\n    }\r\n\r\n    toggleAbilityScores() {\r\n        this.setState({\r\n            showAbilityScores: !this.state.showAbilityScores\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var result = null;\r\n\r\n            if (this.props.edit) {\r\n                result = (\r\n                    <div>\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"str\"\r\n                            label=\"strength\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.str\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"dex\"\r\n                            label=\"dexterity\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.dex\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"con\"\r\n                            label=\"constitution\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.con\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"int\"\r\n                            label=\"intelligence\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.int\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"wis\"\r\n                            label=\"wisdom\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.wis\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant.abilityScores}\r\n                            name=\"cha\"\r\n                            label=\"charisma\"\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"abilityScores.cha\", delta)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                result = (\r\n                    <div className=\"ability-scores\" onClick={() => this.toggleAbilityScores()}>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">str</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.str : utils.modifier(this.props.combatant.abilityScores.str)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">dex</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.dex : utils.modifier(this.props.combatant.abilityScores.dex)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">con</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.con : utils.modifier(this.props.combatant.abilityScores.con)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">int</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.int : utils.modifier(this.props.combatant.abilityScores.int)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">wis</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.wis : utils.modifier(this.props.combatant.abilityScores.wis)}</div>\r\n                        </div>\r\n                        <div className=\"ability-score\">\r\n                            <div className=\"ability-heading\">cha</div>\r\n                            <div className=\"ability-value\">{this.state.showAbilityScores ? this.props.combatant.abilityScores.cha : utils.modifier(this.props.combatant.abilityScores.cha)}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return result;\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Expander from '../controls/expander';\r\n\r\nexport default class TraitPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = this.props.trait.name || \"unnamed \" + utils.traitType(this.props.trait.type);\r\n            if (this.props.trait.usage) {\r\n                heading += \" (\" + this.props.trait.usage + \")\";\r\n            }\r\n\r\n            if (this.props.edit) {\r\n                var details = (\r\n                    <div className=\"section\">\r\n                        <input type=\"text\" placeholder=\"name\" value={this.props.trait.name} onChange={event => this.props.changeTrait(this.props.trait, \"name\", event.target.value)} />\r\n                        <input type=\"text\" placeholder=\"usage\" value={this.props.trait.usage} onChange={event => this.props.changeTrait(this.props.trait, \"usage\", event.target.value)} />\r\n                        <textarea placeholder=\"details\" value={this.props.trait.text} onChange={event => this.props.changeTrait(this.props.trait, \"text\", event.target.value)} />\r\n                        <div className=\"divider\"></div>\r\n                        <ConfirmButton text=\"delete\" callback={() => this.props.removeTrait(this.props.trait)} />\r\n                    </div>\r\n                );\r\n    \r\n                return (\r\n                    <Expander\r\n                        text={this.props.trait.name || \"unnamed \" + utils.traitType(this.props.trait.type)}\r\n                        content={details}\r\n                    />\r\n                );\r\n            } else if (this.props.template) {\r\n                return (\r\n                    <div key={this.props.trait.id} className=\"section trait\">\r\n                        <b>{heading}</b> {this.props.trait.text}\r\n                        <button onClick={() => this.props.copyTrait(this.props.trait)}>copy</button>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div key={this.props.trait.id} className=\"section trait\">\r\n                        <b>{heading}</b> {this.props.trait.text}\r\n                    </div>\r\n                );\r\n            }\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport TraitPanel from './trait-panel';\r\n\r\nexport default class TraitsPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var traits = [];\r\n            var actions = [];\r\n            var legendaryActions = [];\r\n            var lairActions = [];\r\n            var regionalEffects = [];\r\n\r\n            for (var n = 0; n !== this.props.combatant.traits.length; ++n) {\r\n                var action = this.props.combatant.traits[n];\r\n                var item = (\r\n                    <TraitPanel\r\n                        key={action.id}\r\n                        trait={action}\r\n                        edit={this.props.edit}\r\n                        template={this.props.template}\r\n                        changeTrait={(action, type, value) => this.props.changeTrait(action, type, value)}\r\n                        removeTrait={action => this.props.removeTrait(action)}\r\n                        copyTrait={action => this.props.copyTrait(action)}\r\n                    />\r\n                );\r\n\r\n                switch (action.type) {\r\n                    case \"trait\":\r\n                        traits.push(item);\r\n                        break;\r\n                    case \"action\":\r\n                        actions.push(item);\r\n                        break;\r\n                    case \"legendary\":\r\n                        legendaryActions.push(item);\r\n                        break;\r\n                    case \"lair\":\r\n                        lairActions.push(item);\r\n                        break;\r\n                    case \"regional\":\r\n                        regionalEffects.push(item);\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n            }\r\n\r\n            if (this.props.edit) {\r\n                traits.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"trait\")}>add a new trait</button>\r\n                );\r\n                actions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"action\")}>add a new action</button>\r\n                );\r\n                legendaryActions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"legendary\")}>add a new legendary action</button>\r\n                );\r\n                lairActions.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"lair\")}>add a new lair action</button>\r\n                );\r\n                regionalEffects.push(\r\n                    <button key=\"add\" onClick={() => this.props.addTrait(\"regional\")}>add a new regional effect</button>\r\n                );\r\n\r\n                return (\r\n                    <div className=\"row collapse\">\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">traits</div>\r\n                            {traits}\r\n                        </div>\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">actions</div>\r\n                            {actions}\r\n                        </div>\r\n                        <div className=\"columns small-4 medium-4 large-4 list-column\">\r\n                            <div className=\"section subheading\">legendary actions</div>\r\n                            {legendaryActions}\r\n                            <div className=\"section subheading\">lair actions</div>\r\n                            {lairActions}\r\n                            <div className=\"section subheading\">regional effects</div>\r\n                            {regionalEffects}\r\n                        </div>\r\n                    </div>\r\n                );    \r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <div style={{ display: traits.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">traits</div>\r\n                        {traits}\r\n                    </div>\r\n                    <div style={{ display: actions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">actions</div>\r\n                        {actions}\r\n                    </div>\r\n                    <div style={{ display: legendaryActions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">legendary actions</div>\r\n                        {legendaryActions}\r\n                    </div>\r\n                    <div style={{ display: lairActions.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">lair actions</div>\r\n                        {lairActions}\r\n                    </div>\r\n                    <div style={{ display: regionalEffects.length > 0 ? \"\" : \"none\" }}>\r\n                        <div className=\"section subheading\">regional effects</div>\r\n                        {regionalEffects}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Expander from '../controls/expander';\r\n\r\nexport default class ConditionPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var name = this.props.condition.name || \"condition\";\r\n            if (this.props.condition.name === \"exhaustion\") {\r\n                name += \" (\" + this.props.condition.level + \")\";\r\n            }\r\n            if (this.props.condition.name === \"custom\") {\r\n                name = this.props.condition.text;\r\n            }\r\n\r\n            if (this.props.condition.duration !== null) {\r\n                name += \" \" + utils.conditionDurationText(this.props.condition, this.props.combat);\r\n            }\r\n\r\n            var description = [];\r\n            if (this.props.condition.name === \"exhaustion\") {\r\n                description.push(\r\n                    <div key=\"level\" className=\"section\">\r\n                        <Spin\r\n                            source={this.props.condition}\r\n                            name=\"level\"\r\n                            label=\"level\"\r\n                            nudgeValue={delta => this.props.nudgeConditionValue(this.props.condition, \"level\", delta)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            var text = utils.conditionText(this.props.condition);\r\n            for (var n = 0; n !== text.length; ++n) {\r\n                description.push(<div key={n} className=\"section\">{text[n]}</div>);\r\n            }\r\n\r\n            return (\r\n                <Expander\r\n                    text={name}\r\n                    content={(\r\n                        <div>\r\n                            {description}\r\n                            <div className=\"divider\"></div>\r\n                            <button onClick={() => this.props.editCondition(this.props.condition)}>edit</button>\r\n                            <button onClick={() => this.props.removeCondition(this.props.condition.id)}>remove</button>\r\n                        </div>\r\n                    )}\r\n                />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConditionPanel from './condition-panel';\r\n\r\nexport default class ConditionsPanel extends React.Component {\r\n    render() {\r\n        try {\r\n            var conditions = [];\r\n            if (this.props.combatant.conditions) {\r\n                for (var n = 0; n !== this.props.combatant.conditions.length; ++n) {\r\n                    var condition = this.props.combatant.conditions[n];\r\n                    conditions.push(\r\n                        <ConditionPanel\r\n                            key={n}\r\n                            condition={condition}\r\n                            combat={this.props.combat}\r\n                            nudgeConditionValue={(condition, type, delta) => this.props.nudgeConditionValue(condition, type, delta)}\r\n                            changeConditionValue={(condition, type, value) => this.props.changeConditionValue(condition, type, value)}\r\n                            editCondition={condition => this.props.editCondition(condition)}\r\n                            removeCondition={conditionID => this.props.removeCondition(conditionID)}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=\"section\">\r\n                    {conditions}\r\n                    <button onClick={() => this.props.addCondition()}>add a condition</button>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Expander from '../controls/expander';\r\nimport Dropdown from '../controls/dropdown';\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Radial from '../controls/radial';\r\nimport Spin from '../controls/spin';\r\nimport InfoCard from '../cards/info-card';\r\nimport AbilityScorePanel from '../panels/ability-score-panel';\r\nimport TraitsPanel from '../panels/traits-panel';\r\nimport ConditionsPanel from '../panels/conditions-panel';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class MonsterCard extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            cloneName: props.combatant.name + \" copy\",\r\n            showHP: false,\r\n            showDetails: false,\r\n            damage: 0\r\n        };\r\n    }\r\n\r\n    setCloneName(cloneName) {\r\n        this.setState({\r\n            cloneName: cloneName\r\n        });\r\n    }\r\n\r\n    toggleHP() {\r\n        this.setState({\r\n            showHP: !this.state.showHP\r\n        })\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    setDamage(damage) {\r\n        this.setState({\r\n            damage: damage\r\n        });\r\n    }\r\n\r\n    nudgeDamage(delta) {\r\n        var damage = this.state.damage + delta;\r\n        damage = Math.max(damage, 0);\r\n\r\n        this.setState({\r\n            damage: damage\r\n        });\r\n    }\r\n\r\n    heal() {\r\n        var hp = this.props.combatant.hp + this.state.damage;\r\n        hp = Math.min(hp, this.props.combatant.hpMax);\r\n\r\n        this.setState({\r\n            damage: 0\r\n        }, () => {\r\n            this.props.changeHP(this.props.combatant, hp, this.props.combatant.hpTemp);\r\n        });\r\n    }\r\n\r\n    damage() {\r\n        var hp = this.props.combatant.hp;\r\n        var temp = this.props.combatant.hpTemp;\r\n\r\n        var damage = this.state.damage;\r\n\r\n        // Take damage off temp HP first\r\n        var val = Math.min(damage, temp);\r\n        damage -= val;\r\n        temp -= val;\r\n\r\n        // Take the rest off HP\r\n        hp -= damage;\r\n        hp = Math.max(hp, 0);\r\n\r\n        this.setState({\r\n            damage: 0\r\n        }, () => {\r\n            this.props.changeHP(this.props.combatant, hp, temp);\r\n        });\r\n    }\r\n\r\n    description() {\r\n        var sizeAndType = (this.props.combatant.size + \" \" + this.props.combatant.category).toLowerCase();\r\n        if (this.props.combatant.tag) {\r\n            sizeAndType += \" (\" + this.props.combatant.tag.toLowerCase() + \")\";\r\n        }\r\n        sizeAndType += \", \";\r\n\r\n        var align = \"\";\r\n        if (this.props.combatant.alignment) {\r\n            align = this.props.combatant.alignment.toLowerCase() + \", \";\r\n        }\r\n\r\n        var cr = \"cr \" + utils.challenge(this.props.combatant.challenge);\r\n\r\n        return sizeAndType + align + cr;\r\n    }\r\n\r\n    monsterIsInWave(wave) {\r\n        return wave.slots.some(s => {\r\n            var group = null;\r\n            this.props.library.forEach(g => {\r\n                if (g.monsters.indexOf(this.props.combatant) !== -1) {\r\n                    group = g;\r\n                }\r\n            });\r\n        \r\n            return (s.monsterGroupName === group.name) && (s.monsterName === this.props.combatant.name)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var options = [];\r\n            if (this.props.mode.indexOf(\"no-buttons\") === -1) {\r\n                if (this.props.mode.indexOf(\"view\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"editable\") !== -1) {\r\n                        options.push(\r\n                            <button key=\"edit\" onClick={() => this.props.editMonster(this.props.combatant)}>edit monster</button>\r\n                        );\r\n\r\n                        options.push(\r\n                            <Expander\r\n                                key=\"clone\"\r\n                                text=\"clone monster\"\r\n                                content={\r\n                                    <div>\r\n                                        <input type=\"text\" placeholder=\"monster name\" value={this.state.cloneName} onChange={event => this.setCloneName(event.target.value)} />\r\n                                        <button onClick={() => this.props.cloneMonster(this.props.combatant, this.state.cloneName)}>create copy</button>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        );\r\n\r\n                        var groupOptions = [];\r\n                        this.props.library.forEach(group => {\r\n                            if (group.monsters.indexOf(this.props.combatant) === -1) {\r\n                                groupOptions.push({\r\n                                    id: group.id,\r\n                                    text: group.name\r\n                                });\r\n                            }\r\n                        });\r\n                        options.push(\r\n                            <Dropdown\r\n                                key=\"move\"\r\n                                options={groupOptions}\r\n                                placeholder=\"move to group...\"\r\n                                select={optionID => this.props.moveToGroup(this.props.combatant, optionID)}\r\n                            />\r\n                        );\r\n\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"delete monster\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    if (this.props.mode.indexOf(\"encounter\") !== -1) {\r\n                        if (this.props.slot) {\r\n                            // This card is in an encounter or a wave\r\n                            options.push(<button key=\"remove\" onClick={() => this.props.removeEncounterSlot(this.props.slot)}>remove from encounter</button>);\r\n                        } else {\r\n                            var canAdd = false;\r\n                            // This card is in the library list\r\n                            if (!this.monsterIsInWave(this.props.encounter)) {\r\n                                options.push(<button key=\"add encounter\" onClick={() => this.props.addEncounterSlot(this.props.combatant, null)}>add to encounter</button>);\r\n                                canAdd = true;\r\n                            }\r\n                            this.props.encounter.waves.forEach(wave => {\r\n                                if (!this.monsterIsInWave(wave)) {\r\n                                    options.push(<button key={\"add \" + wave.id} onClick={() => this.props.addEncounterSlot(this.props.combatant, wave.id)}>add to {wave.name}</button>);\r\n                                    canAdd = true;\r\n                                }\r\n                            });\r\n                            // If we can't add it anywhere, don't show it\r\n                            if (!canAdd) {\r\n                                return (\r\n                                    <InfoCard\r\n                                        getHeading={() => {\r\n                                            return (\r\n                                                <div className=\"heading\">\r\n                                                    <div className=\"title\">{this.props.combatant.name}</div>\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                        getContent={() => {\r\n                                            return (\r\n                                                <div className=\"section centered\">\r\n                                                    <i>this monster is already part of this encounter</i>\r\n                                                </div>\r\n                                            );\r\n                                        }}\r\n                                    />\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                    if (this.props.mode.indexOf(\"tactical\") !== -1) {\r\n                        if (this.props.mode.indexOf(\"on-map\") !== -1) {\r\n                            options.push(\r\n                                <div key=\"mapMove\" className=\"section centered\">\r\n                                    <Radial\r\n                                        direction=\"eight\"\r\n                                        click={dir => this.props.mapMove(this.props.combatant, dir)}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                            options.push(\r\n                                <Spin\r\n                                    key=\"altitude\"\r\n                                    source={this.props.combatant}\r\n                                    name=\"altitude\"\r\n                                    label=\"altitude\"\r\n                                    display={value => value + \" ft.\"}\r\n                                    nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"altitude\", delta * 5)}\r\n                                />\r\n                            );\r\n                            options.push(<button key=\"mapRemove\" onClick={() => this.props.mapRemove(this.props.combatant)}>remove from map</button>);\r\n                        }\r\n                        if (this.props.mode.indexOf(\"off-map\") !== -1) {\r\n                            options.push(<button key=\"mapAdd\" onClick={() => this.props.mapAdd(this.props.combatant)}>add to map</button>);\r\n                        }\r\n                        options.push(<div key=\"tactical-div\" className=\"divider\"></div>);\r\n                    }\r\n                    if (this.props.combatant.pending && !this.props.combatant.active && !this.props.combatant.defeated) {\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    if (!this.props.combatant.pending && this.props.combatant.active && !this.props.combatant.defeated) {\r\n                        if (this.props.combatant.current) {\r\n                            options.push(<button key=\"endTurn\" onClick={() => this.props.endTurn(this.props.combatant)}>end turn</button>);\r\n                            options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated and end turn</button>);\r\n                        } else {\r\n                            options.push(<button key=\"makeCurrent\" onClick={() => this.props.makeCurrent(this.props.combatant)}>start turn</button>);\r\n                            options.push(<button key=\"makeDefeated\" onClick={() => this.props.makeDefeated(this.props.combatant)}>mark as defeated</button>);\r\n                            options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                        }\r\n                    }\r\n                    if (!this.props.combatant.pending && !this.props.combatant.active && this.props.combatant.defeated) {\r\n                        options.push(<button key=\"makeActive\" onClick={() => this.props.makeActive(this.props.combatant)}>mark as active</button>);\r\n                        options.push(<ConfirmButton key=\"remove\" text=\"remove from encounter\" callback={() => this.props.removeCombatant(this.props.combatant)} />);\r\n                    }\r\n                    options.push(\r\n                        <Expander\r\n                            key=\"rename\"\r\n                            text=\"change name\"\r\n                            content={(\r\n                                <div>\r\n                                    <input type=\"text\" value={this.props.combatant.displayName} onChange={event => this.props.changeValue(this.props.combatant, \"displayName\", event.target.value)} />\r\n                                </div>\r\n                            )}\r\n                        />\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                    // None\r\n                }\r\n            }\r\n\r\n            var stats = null;\r\n            if (this.props.mode.indexOf(\"view\") !== -1) {\r\n                var slotSection = null;\r\n                if (this.props.slot) {\r\n                    slotSection = (\r\n                        <div>\r\n                            <div className=\"divider\"></div>\r\n                            <Spin\r\n                                source={this.props.slot}\r\n                                name=\"count\"\r\n                                label=\"count\"\r\n                                nudgeValue={delta => this.props.nudgeValue(this.props.slot, \"count\", delta)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                var details = null;\r\n                if (this.state.showDetails) {\r\n                    details = (\r\n                        <div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                <b>ac</b> {this.props.combatant.ac}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.hpMax !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>hp</b> {this.props.combatant.hitDice !== \"\" ? this.props.combatant.hpMax + \" (\" + this.props.combatant.hitDice + \"d\" + utils.hitDieType(this.props.combatant.size) + \")\" : this.props.combatant.hpMax}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.speed !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>speed</b> {this.props.combatant.speed}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <AbilityScorePanel combatant={this.props.combatant} />\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.savingThrows !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>saving throws</b> {this.props.combatant.savingThrows}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.skills !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>skills</b> {this.props.combatant.skills}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.resist !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage resistances</b> {this.props.combatant.damage.resist}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.vulnerable !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage vulnerabilities</b> {this.props.combatant.damage.vulnerable}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.damage.immune !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>damage immunities</b> {this.props.combatant.damage.immune}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.conditionImmunities !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>condition immunities</b> {this.props.combatant.conditionImmunities}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.senses !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>senses</b> {this.props.combatant.senses}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.languages !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>languages</b> {this.props.combatant.languages}\r\n                            </div>\r\n                            <div className=\"section\" style={{ display: this.props.combatant.equipment !== \"\" ? \"\" : \"none\" }}>\r\n                                <b>equipment</b> {this.props.combatant.equipment}\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <TraitsPanel combatant={this.props.combatant} />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                stats = (\r\n                    <div className=\"stats\">\r\n                        <div className=\"section centered\">\r\n                            <i>{this.description()}</i>\r\n                        </div>\r\n                        {slotSection}\r\n                        {details}\r\n                    </div>\r\n                );\r\n            }\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                stats = (\r\n                    <div className=\"stats\">\r\n                        <div className=\"section centered\">\r\n                            <i>{this.description()}</i>\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <Spin\r\n                            source={this.props.combatant}\r\n                            name=\"hp\"\r\n                            label=\"hit points\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"hp\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.combatant}\r\n                            name=\"hpTemp\"\r\n                            label=\"temp hp\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"hpTemp\", delta)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <Spin\r\n                            source={this.state}\r\n                            name=\"damage\"\r\n                            factors={[1, 10]}\r\n                            nudgeValue={delta => this.nudgeDamage(delta)}\r\n                        />\r\n                        <div className={this.state.damage > 0 ? \"\" : \"disabled\"}>\r\n                            <button className=\"damage-btn\" onClick={() => this.heal()}>heal</button>\r\n                            <button className=\"damage-btn\" onClick={() => this.setDamage(0)}>reset</button>\r\n                            <button className=\"damage-btn\" onClick={() => this.damage()}>damage</button>\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.resist !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage resistances</b> {this.props.combatant.damage.resist}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.vulnerable !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage vulnerabilities</b> {this.props.combatant.damage.vulnerable}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.damage.immune !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>damage immunities</b> {this.props.combatant.damage.immune}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <AbilityScorePanel combatant={this.props.combatant} />\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.ac !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>ac</b> {this.props.combatant.ac}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.savingThrows !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>saving throws</b> {this.props.combatant.savingThrows}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.skills !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>skills</b> {this.props.combatant.skills}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.speed !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>speed</b> {this.props.combatant.speed}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.senses !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>senses</b> {this.props.combatant.senses}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.languages !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>languages</b> {this.props.combatant.languages}\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.equipment !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>equipment</b> {this.props.combatant.equipment}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <TraitsPanel combatant={this.props.combatant} />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section subheading\">\r\n                            conditions\r\n                        </div>\r\n                        <div className=\"section\" style={{ display: this.props.combatant.conditionImmunities !== \"\" ? \"\" : \"none\" }}>\r\n                            <b>condition immunities</b> {this.props.combatant.conditionImmunities}\r\n                        </div>\r\n                        <ConditionsPanel\r\n                            combatant={this.props.combatant}\r\n                            combat={this.props.combat}\r\n                            addCondition={() => this.props.addCondition(this.props.combatant)}\r\n                            editCondition={condition => this.props.editCondition(this.props.combatant, condition)}\r\n                            removeCondition={conditionID => this.props.removeCondition(this.props.combatant, conditionID)}\r\n                            nudgeConditionValue={(condition, type, delta) => this.props.nudgeConditionValue(condition, type, delta)}\r\n                            changeConditionValue={(condition, type, value) => this.props.changeConditionValue(condition, type, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                if (this.props.mode.indexOf(\"overview\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section centered\">\r\n                                <i>{this.description()}</i>\r\n                            </div>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">\r\n                                <b>speed</b> {this.props.combatant.speed || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>senses</b> {this.props.combatant.senses || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>languages</b> {this.props.combatant.languages || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>equipment</b> {this.props.combatant.equipment || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"abilities\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <AbilityScorePanel combatant={this.props.combatant} />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>saving throws</b> {this.props.combatant.savingThrows || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>skills</b> {this.props.combatant.skills || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                    stats = (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <b>ac</b> {this.props.combatant.ac}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>hp</b> {this.props.combatant.hitDice !== \"\" ? this.props.combatant.hpMax + \" (\" + this.props.combatant.hitDice + \"d\" + utils.hitDieType(this.props.combatant.size) + \")\" : this.props.combatant.hpMax}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage immunity</b> {this.props.combatant.damage.immune || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage resistance</b> {this.props.combatant.damage.resist || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>damage vulnerability</b> {this.props.combatant.damage.vulnerable || \"-\"}\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <b>condition immunities</b> {this.props.combatant.conditionImmunities || \"-\"}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n                if (this.props.mode.indexOf(\"actions\") !== -1) {\r\n                    stats = (\r\n                        <TraitsPanel\r\n                            combatant={this.props.combatant}\r\n                            template={true}\r\n                            copyTrait={trait => this.props.copyTrait(trait)}\r\n                        />\r\n                    );\r\n                }\r\n            }\r\n\r\n            var toggle = null;\r\n            if (this.props.mode.indexOf(\"combat\") !== -1) {\r\n                // Don't show toggle button for combatant\r\n            } else if (this.props.mode.indexOf(\"template\") !== -1) {\r\n                // Don't show toggle button for template\r\n            } else {\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n                toggle = <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n            }\r\n\r\n            return (\r\n                <div className=\"card monster\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.combatant.displayName || this.props.combatant.name || \"unnamed monster\"}</div>\r\n                        {toggle}\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {stats}\r\n                        <div style={{ display: options.length > 0 ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            <div className=\"section\">{options}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport MonsterLibraryCard from '../cards/information/monster-library-card';\r\nimport MonsterGroupListItem from '../list-items/monster-group-list-item';\r\nimport MonsterGroupCard from '../cards/monster-group-card';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class MonsterLibraryScreen extends React.Component {\r\n    showMonsterGroup(group) {\r\n        var result = utils.match(this.props.filter, group.name);\r\n\r\n        if (!result) {\r\n            group.monsters.forEach(monster => {\r\n                result = utils.match(this.props.filter, monster.name) || result;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <MonsterLibraryCard />\r\n                );\r\n            }\r\n            \r\n            var listItems = [];\r\n            for (var n = 0; n !== this.props.library.length; ++n) {\r\n                var group = this.props.library[n];\r\n                if (this.showMonsterGroup(group)) {\r\n                    listItems.push(\r\n                        <MonsterGroupListItem\r\n                            key={group.id}\r\n                            group={group}\r\n                            filter={this.props.filter}\r\n                            selected={group === this.props.selection}\r\n                            setSelection={group => this.props.selectMonsterGroup(group)}\r\n                        />\r\n                    );\r\n                }\r\n            };\r\n\r\n            var cards = [];\r\n\r\n            if (this.props.selection) {\r\n                cards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <MonsterGroupCard\r\n                            selection={this.props.selection}\r\n                            filter={this.props.filter}\r\n                            addMonster={name => this.props.addMonster(name)}\r\n                            sortMonsters={() => this.props.sortMonsters()}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            removeMonsterGroup={() => this.props.removeMonsterGroup()}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var monsters = this.props.selection.monsters.filter(monster => {\r\n                    return utils.match(this.props.filter, monster.name);\r\n                });\r\n\r\n                if (monsters.length !== 0) {\r\n                    monsters.forEach(monster => {\r\n                        cards.push(\r\n                            <div className=\"column\" key={monster.id}>\r\n                                <MonsterCard\r\n                                    combatant={monster}\r\n                                    mode={\"view editable\"}\r\n                                    library={this.props.library}\r\n                                    moveToGroup={(combatant, groupID) => this.props.moveToGroup(combatant, groupID)}\r\n                                    changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                                    nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                    removeCombatant={combatant => this.props.removeMonster(combatant)}\r\n                                    editMonster={combatant => this.props.editMonster(combatant)}\r\n                                    cloneMonster={(combatant, name) => this.props.cloneMonster(combatant, name)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    });\r\n                } else {\r\n                    cards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no monsters</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n            }\r\n\r\n            var name = null;\r\n            if (this.props.selection) {\r\n                name = this.props.selection.name;\r\n                if (!name) {\r\n                    name = \"unnamed group\";\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div className=\"monster-library row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addMonsterGroup(\"new group\")}>add a new monster group</button>\r\n                        {listItems}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={cards}\r\n                            heading={name}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectMonsterGroup(null)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class ErrorCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            if (this.props.title) {\r\n                heading = <div className=\"heading\"><div className=\"title\">{this.props.title}</div></div>;\r\n            }\r\n\r\n            var content = this.props.getContent();\r\n\r\n            return (\r\n                <div className=\"card error\">\r\n                    {heading}\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","export interface Party {\r\n    id: string;\r\n    name: string;\r\n    pcs: PC[];\r\n}\r\n\r\nexport interface PC {\r\n    id: string;\r\n    type: string;\r\n    active: boolean;\r\n    player: string;\r\n    name: string;\r\n    race: string;\r\n    classes: string;\r\n    background: string;\r\n    level: number;\r\n    languages: string;\r\n    passiveInsight: number;\r\n    passiveInvestigation: number;\r\n    passivePerception: number;\r\n    initiative: number;\r\n    url: string;\r\n}\r\n\r\nexport interface MonsterGroup {\r\n    id: string;\r\n    name: string;\r\n    monsters: Monster[];\r\n}\r\n\r\nexport interface Monster {\r\n    id: string;\r\n    type: string;\r\n    name: string;\r\n    size: string;\r\n    category: string;\r\n    tag: string;\r\n    alignment: string;\r\n    challenge: number;\r\n    abilityScores: {\r\n        str: number;\r\n        dex: number;\r\n        con: number;\r\n        int: number;\r\n        wis: number;\r\n        cha: number;\r\n    };\r\n    ac: number;\r\n    hpMax: number;\r\n    hpTemp: number;\r\n    hitDice: number;\r\n    damage: {\r\n        resist: string;\r\n        vulnerable: string;\r\n        immune: string;\r\n    };\r\n    savingThrows: string;\r\n    speed: string;\r\n    skills: string;\r\n    senses: string;\r\n    languages: string;\r\n    equipment: string;\r\n    traits: Trait[];\r\n    conditionImmunities: string;\r\n}\r\n\r\nexport interface Trait {\r\n    id: string;\r\n    name: string;\r\n    usage: string;\r\n    type: string;\r\n    text: string;\r\n}\r\n\r\nexport interface Encounter {\r\n    id: string;\r\n    name: string;\r\n    slots: EncounterSlot[];\r\n    waves: EncounterWave[];\r\n}\r\n\r\nexport interface EncounterSlot {\r\n    id: string;\r\n    monsterGroupName: string;\r\n    monsterName: string;\r\n    count: number;\r\n}\r\n\r\nexport interface EncounterWave {\r\n    id: string;\r\n    name: string;\r\n    slots: EncounterSlot[];\r\n}\r\n\r\nexport interface MapFolio {\r\n    id: string;\r\n    name: string;\r\n    maps: Map[];\r\n}\r\n\r\nexport interface Map {\r\n    id: string;\r\n    name: string;\r\n    items: MapItem[];\r\n}\r\n\r\nexport interface MapItem {\r\n    id: string;\r\n    type: \"tile\" | \"pc\" | \"monster\";\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    terrain: string | null;\r\n}\r\n\r\nexport interface Combat {\r\n    id: string;\r\n    name: string;\r\n    encounterID: string | null;\r\n    combatants: any[]; // TODO\r\n    map: Map | null;\r\n    round: number;\r\n    notifications: Notification[];\r\n    issues: string[];\r\n}\r\n\r\nexport interface Notification {\r\n    id: string;\r\n    type: string;\r\n    condition: Condition | null;\r\n    combatant: any | null; // TODO\r\n}\r\n\r\nexport interface Condition {\r\n    id: string;\r\n    name: string;\r\n    level: number;\r\n    text: string | null;\r\n    duration: any | null; // TODO\r\n}\r\n\r\nexport const SIZE_TYPES = [\r\n    \"tiny\",\r\n    \"small\",\r\n    \"medium\",\r\n    \"large\",\r\n    \"huge\",\r\n    \"gargantuan\"\r\n];\r\n\r\nexport const CATEGORY_TYPES = [\r\n    \"aberration\",\r\n    \"beast\",\r\n    \"celestial\",\r\n    \"construct\",\r\n    \"dragon\",\r\n    \"elemental\",\r\n    \"fey\",\r\n    \"fiend\",\r\n    \"giant\",\r\n    \"humanoid\",\r\n    \"monstrosity\",\r\n    \"ooze\",\r\n    \"plant\",\r\n    \"undead\"\r\n];\r\n\r\nexport const TRAIT_TYPES = [\r\n    \"trait\",\r\n    \"action\",\r\n    \"legendary\",\r\n    \"lair\",\r\n    \"regional\"\r\n];\r\n\r\nexport const CONDITION_TYPES = [\r\n    \"blinded\",\r\n    \"charmed\",\r\n    \"deafened\",\r\n    \"exhaustion\",\r\n    \"frightened\",\r\n    \"grappled\",\r\n    \"incapacitated\",\r\n    \"invisible\",\r\n    \"paralyzed\",\r\n    \"petrified\",\r\n    \"poisoned\",\r\n    \"prone\",\r\n    \"restrained\",\r\n    \"stunned\",\r\n    \"unconscious\",\r\n    \"custom\"\r\n];\r\n\r\nexport const TERRAIN_TYPES = [\r\n    \"cavern\",\r\n    \"dirt\",\r\n    \"flagstone\",\r\n    \"floorboard\",\r\n    \"grassland\",\r\n    \"pit\",\r\n    \"sand\",\r\n    \"snow\",\r\n    \"water\"\r\n];","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport { CATEGORY_TYPES, SIZE_TYPES } from '../../models/models';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Dropdown from '../controls/dropdown';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class FilterCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showAll: false\r\n        };\r\n    }\r\n\r\n    toggleAll() {\r\n        this.setState({\r\n            showAll: !this.state.showAll\r\n        })\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var sizes = [\"all sizes\"].concat(SIZE_TYPES);\r\n            var sizeOptions = sizes.map(size => { return { id: size, text: size }; });\r\n            \r\n            var categories = [\"all types\"].concat(CATEGORY_TYPES);\r\n            var catOptions = categories.map(cat => { return { id: cat, text: cat }; });\r\n\r\n            var content = null;\r\n            if (this.state.showAll) {\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"name\" value={this.props.filter.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <Spin\r\n                            source={this.props.filter}\r\n                            name=\"challengeMin\"\r\n                            label=\"min cr\"\r\n                            display={value => utils.challenge(value)}\r\n                            nudgeValue={delta => this.props.nudgeValue(\"challengeMin\", delta)}\r\n                        />\r\n                        <Spin\r\n                            source={this.props.filter}\r\n                            name=\"challengeMax\"\r\n                            label=\"max cr\"\r\n                            display={value => utils.challenge(value)}\r\n                            nudgeValue={delta => this.props.nudgeValue(\"challengeMax\", delta)}\r\n                        />\r\n                        <Dropdown\r\n                            options={sizeOptions}\r\n                            placeholder=\"filter by size...\"\r\n                            selectedID={this.props.filter.size}\r\n                            select={optionID => this.props.changeValue(\"size\", optionID)}\r\n                        />\r\n                        <Dropdown\r\n                            options={catOptions}\r\n                            placeholder=\"filter by type...\"\r\n                            selectedID={this.props.filter.category}\r\n                            select={optionID => this.props.changeValue(\"category\", optionID)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.resetFilter()}>clear filter</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                var summary = \"\";\r\n                if (this.props.filter.size !== \"all sizes\") {\r\n                    summary += summary ? \" \" + this.props.filter.size : this.props.filter.size;\r\n                }\r\n                if (this.props.filter.category !== \"all types\") {\r\n                    summary += summary ? \" \" + this.props.filter.category : this.props.filter.category;\r\n                }\r\n                summary += \" monsters of cr \" + utils.challenge(this.props.filter.challengeMin) + \" to \" + utils.challenge(this.props.filter.challengeMax);\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"name\" value={this.props.filter.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"section\">showing {summary}</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"card\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">filter</div>\r\n                        <img className={this.state.showAll ? \"image rotate\" : \"image\"} src={arrow} alt=\"arrow\" onClick={() => this.toggleAll()} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class WaveCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = (\r\n                <div className=\"heading\">\r\n                    <div className=\"title\">wave</div>\r\n                </div>\r\n            );\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">\r\n                        <input type=\"text\" placeholder=\"wave name\" value={this.props.wave.name} onChange={event => this.props.changeValue(this.props.wave, \"name\", event.target.value)} />\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <div className=\"section\">\r\n                        <ConfirmButton text=\"delete wave\" callback={() => this.props.removeWave(this.props.wave)} />\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class EncounterBuilderCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.encounters.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start building an encounter, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select an encounter from the list to add monsters to it</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">on this page you can set up encounters</div>\r\n                    <div className=\"section\">when you have created an encounter you can add monsters to it, then gauge its difficulty for a party of pcs</div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nexport default class DifficultyChartPanel extends React.Component {\r\n    render() {\r\n        var encounter = this.props.encounters.find(e => e.id === this.props.encounterID);\r\n        var party = this.props.parties.find(p => p.id === this.props.partyID);\r\n\r\n        var monsterCount = 0;\r\n        var monsterXp = 0;\r\n        var slots = [].concat(encounter.slots);\r\n        encounter.waves.forEach(wave => {\r\n            slots = slots.concat(wave.slots);\r\n        })\r\n        slots.forEach(slot => {\r\n            monsterCount += slot.count;\r\n            var monster = this.props.getMonster(slot.monsterName, slot.monsterGroupName);\r\n            if (monster) {\r\n                monsterXp += utils.experience(monster.challenge) * slot.count;\r\n            }\r\n        });\r\n\r\n        var adjustedXp = monsterXp * utils.experienceFactor(monsterCount);\r\n\r\n        var xpThresholds;\r\n        var diffSection;\r\n        if (party) {\r\n            var xpEasy = 0;\r\n            var xpMedium = 0;\r\n            var xpHard = 0;\r\n            var xpDeadly = 0;\r\n    \r\n            var pcs = party.pcs.filter(pc => pc.active);\r\n            pcs.forEach(pc => {\r\n                xpEasy += utils.pcExperience(pc.level, \"easy\");\r\n                xpMedium += utils.pcExperience(pc.level, \"medium\");\r\n                xpHard += utils.pcExperience(pc.level, \"hard\");\r\n                xpDeadly += utils.pcExperience(pc.level, \"deadly\");\r\n            });\r\n        \r\n            var difficulty = null;\r\n            var adjustedDifficulty = null;\r\n            if (adjustedXp > 0) {\r\n                difficulty = \"trivial\";\r\n                if (adjustedXp >= xpEasy) {\r\n                    difficulty = \"easy\";\r\n                }\r\n                if (adjustedXp >= xpMedium) {\r\n                    difficulty = \"medium\";\r\n                }\r\n                if (adjustedXp >= xpHard) {\r\n                    difficulty = \"hard\";\r\n                }\r\n                if (adjustedXp >= xpDeadly) {\r\n                    difficulty = \"deadly\";\r\n                }\r\n                adjustedDifficulty = difficulty;\r\n\r\n                if ((pcs.length < 3) || (pcs.length > 5)) {\r\n                    var small = pcs.length < 3;\r\n                    switch (difficulty) {\r\n                        case \"trivial\":\r\n                            adjustedDifficulty = small ? \"easy\" : \"trivial\";\r\n                            break;\r\n                        case \"easy\":\r\n                            adjustedDifficulty = small ? \"medium\" : \"trivial\";\r\n                            break;\r\n                        case \"medium\":\r\n                            adjustedDifficulty = small ? \"hard\" : \"easy\";\r\n                            break;\r\n                        case \"hard\":\r\n                            adjustedDifficulty = small ? \"deadly\" : \"medium\";\r\n                            break;\r\n                        case \"deadly\":\r\n                            adjustedDifficulty = small ? \"deadly\" : \"hard\";\r\n                            break;\r\n                        default:\r\n                            adjustedDifficulty = \"\";\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            xpThresholds = (\r\n                <div className=\"table\">\r\n                    <div>\r\n                        <div className=\"cell four\"><b>easy</b></div>\r\n                        <div className=\"cell four\"><b>medium</b></div>\r\n                        <div className=\"cell four\"><b>hard</b></div>\r\n                        <div className=\"cell four\"><b>deadly</b></div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"cell four\">{xpEasy} xp</div>\r\n                        <div className=\"cell four\">{xpMedium} xp</div>\r\n                        <div className=\"cell four\">{xpHard} xp</div>\r\n                        <div className=\"cell four\">{xpDeadly} xp</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n            var getLeft = (xp) => {\r\n                var max = Math.max(adjustedXp, (xpDeadly * 1.2));\r\n                return (100 * xp) / max;\r\n            };\r\n\r\n            var getRight = (xp) => {\r\n                return 100 - getLeft(xp);\r\n            };\r\n\r\n            diffSection = (\r\n                <div>\r\n                    <div className=\"difficulty-gauge\">\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar trivial\" style={{ left: \"0\", right: getRight(xpEasy) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar easy\" style={{ left: getLeft(xpEasy) + \"%\", right: getRight(xpMedium) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar medium\" style={{ left: getLeft(xpMedium) + \"%\", right: getRight(xpHard) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar hard\" style={{ left: getLeft(xpHard) + \"%\", right: getRight(xpDeadly) + \"%\" }}></div>\r\n                        </div>\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar deadly\" style={{ left: getLeft(xpDeadly) + \"%\", right: \"0\" }}></div>\r\n                        </div>\r\n                        <div className=\"encounter-container\">\r\n                            <div className=\"encounter\" style={{ left: (getLeft(adjustedXp) - 0.5) + \"%\" }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"subheading\">difficulty</div>\r\n                    <div className=\"section\">\r\n                        difficulty for this party\r\n                        <div className=\"right\">{difficulty}</div>\r\n                    </div>\r\n                    <div className=\"section\" style={{ display: (adjustedDifficulty === difficulty) ? \"none\" : \"\"}}>\r\n                        effective difficulty for {pcs.length} pc(s)\r\n                        <div className=\"right\"><b>{adjustedDifficulty}</b></div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"subheading\">xp value</div>\r\n                <div className=\"section\">\r\n                    xp for this encounter\r\n                    <div className=\"right\">{monsterXp} xp</div>\r\n                </div>\r\n                <div className=\"section\" style={{ display: (adjustedXp === monsterXp) ? \"none\" : \"\"}}>\r\n                    effective xp for {monsterCount} monster(s)\r\n                    <div className=\"right\">{adjustedXp} xp</div>\r\n                </div>\r\n                {xpThresholds}\r\n                {diffSection}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport DifficultyChartPanel from '../panels/difficulty-chart-panel';\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class EncounterCard extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            showDetails: false,\r\n            partyID: null\r\n        };\r\n    }\r\n\r\n    toggleDetails() {\r\n        this.setState({\r\n            showDetails: !this.state.showDetails\r\n        })\r\n    }\r\n\r\n    selectParty(partyID) {\r\n        this.setState({\r\n            partyID: partyID\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                var partyOptions = [];\r\n                if (this.props.parties) {\r\n                    for (var n = 0; n !== this.props.parties.length; ++n) {\r\n                        var party = this.props.parties[n];\r\n                        partyOptions.push({\r\n                            id: party.id,\r\n                            text: party.name\r\n                        });\r\n                    }\r\n                }\r\n\r\n                var difficultySection = (\r\n                    <div>\r\n                        <Dropdown\r\n                            options={partyOptions}\r\n                            placeholder=\"select party...\"\r\n                            selectedID={this.state.partyID}\r\n                            select={optionID => this.selectParty(optionID)}\r\n                        />\r\n                        <DifficultyChartPanel\r\n                            partyID={this.state.partyID}\r\n                            encounterID={this.props.selection.id}\r\n                            parties={this.props.parties}\r\n                            encounters={this.props.encounters}\r\n                            getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                var imageStyle = this.state.showDetails ? \"image rotate\" : \"image\";\r\n\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">encounter</div>\r\n                        <img className={imageStyle} src={arrow} alt=\"arrow\" onClick={() => this.toggleDetails()} />\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"encounter name\" value={this.props.selection.name} onChange={event => this.props.changeValue(\"name\", event.target.value)} />\r\n                        </div>\r\n                        <div style={{ display: this.state.showDetails ? \"\" : \"none\" }}>\r\n                            <div className=\"divider\"></div>\r\n                            {difficultySection}\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.addWave()}>add a new wave</button>\r\n                            <ConfirmButton text=\"delete encounter\" callback={() => this.props.removeEncounter()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class EncounterListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var encounterName = this.props.encounter.name;\r\n            if (!encounterName) {\r\n                encounterName = \"unnamed encounter\";\r\n            }\r\n\r\n            var slots = [];\r\n            this.props.encounter.slots.forEach(slot => {\r\n                var text = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    text += \" x\" + slot.count;\r\n                }\r\n                slots.push(<div key={slot.id} className=\"text\">{text}</div>);\r\n            });\r\n            if (slots.length === 0) {\r\n                slots.push(<div key=\"empty\" className=\"text\">no monsters</div>);\r\n            }\r\n            this.props.encounter.waves.forEach(wave => {\r\n                slots.push(<div key={\"name \" + wave.id} className=\"text subheading\">{wave.name || \"unnamed wave\"}</div>);\r\n                wave.slots.forEach(slot => {\r\n                    var text = slot.monsterName || \"unnamed monster\";\r\n                    if (slot.count > 1) {\r\n                        text += \" x\" + slot.count;\r\n                    }\r\n                    slots.push(<div key={slot.id} className=\"text\">{text}</div>);\r\n                });\r\n                if (slots.length === 0) {\r\n                    slots.push(<div key={\"empty \" + wave.id} className=\"text\">no monsters</div>);\r\n                }\r\n            });\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.encounter)}>\r\n                    <div className=\"heading\">{encounterName}</div>\r\n                    {slots}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport ErrorCard from '../cards/error-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport FilterCard from '../cards/filter-card';\r\nimport WaveCard from '../cards/wave-card';\r\nimport CardGroup from '../panels/card-group';\r\nimport EncounterBuilderCard from '../cards/information/encounter-builder-card';\r\nimport EncounterCard from '../cards/encounter-card';\r\nimport EncounterListItem from '../list-items/encounter-list-item';\r\n\r\nexport default class EncounterBuilderScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            filter: {\r\n                name: \"\",\r\n                challengeMin: 0,\r\n                challengeMax: 5,\r\n                category: \"all types\",\r\n                size: \"all sizes\"\r\n            }\r\n        };\r\n    }\r\n\r\n    inEncounter(monster) {\r\n        var result = false;\r\n\r\n        var group = utils.getMonsterGroup(monster, this.props.library);\r\n\r\n        this.props.selection.slots.forEach(slot => {\r\n            if ((slot.monsterGroupName === group.name) && (slot.monsterName === monster.name)) {\r\n                result = true;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    matchMonster(monster) {\r\n        if (monster.challenge < this.state.filter.challengeMin) {\r\n            return false;\r\n        }\r\n\r\n        if (monster.challenge > this.state.filter.challengeMax) {\r\n            return false;\r\n        }\r\n\r\n        if (this.state.filter.name !== \"\") {\r\n            if (!utils.match(this.state.filter.name, monster.name)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.state.filter.category !== \"all types\") {\r\n            if (monster.category !== this.state.filter.category) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.state.filter.size !== \"all sizes\") {\r\n            if (monster.size !== this.state.filter.size) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    changeFilterValue(type, value) {\r\n        // eslint-disable-next-line\r\n        this.state.filter[type] = value;\r\n        this.setState({\r\n            filter: this.state.filter\r\n        });\r\n    }\r\n\r\n    nudgeFilterValue(type, delta) {\r\n        var value = utils.nudgeChallenge(this.state.filter[type], delta);\r\n        this.changeFilterValue(type, value);\r\n    }\r\n\r\n    resetFilter() {\r\n        this.setState({\r\n            filter: {\r\n                name: \"\",\r\n                challengeMin: 0,\r\n                challengeMax: 5,\r\n                category: \"all types\",\r\n                size: \"all sizes\"\r\n            }\r\n        });\r\n    }\r\n\r\n    getMonsterCards(slots, waveID) {\r\n        var cards = [];\r\n\r\n        slots.forEach(slot => {\r\n            var monster = this.props.getMonster(slot.monsterName, slot.monsterGroupName);\r\n            if (monster) {\r\n                cards.push(\r\n                    <div className=\"column\" key={monster.id}>\r\n                        <MonsterCard\r\n                            combatant={monster}\r\n                            slot={slot}\r\n                            encounter={this.props.selection}\r\n                            mode={\"view encounter\"}\r\n                            nudgeValue={(slot, type, delta) => this.props.nudgeValue(slot, type, delta)}\r\n                            removeEncounterSlot={slot => this.props.removeEncounterSlot(slot, waveID)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                var index = slots.indexOf(slot);\r\n                var error = \"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName;\r\n                cards.push(\r\n                    <div className=\"column\" key={index}>\r\n                        <ErrorCard\r\n                            getContent={() => <div className=\"section\">{error}</div>}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n\r\n        if (slots.length === 0) {\r\n            cards.push(\r\n                <div className=\"column\" key=\"empty\">\r\n                    <InfoCard getContent={() => <div className=\"section\">no monsters</div>} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return cards;\r\n    }\r\n\r\n    getLibrarySection() {\r\n        if (!this.props.selection) {\r\n            return null;\r\n        }\r\n\r\n        var libraryCards = [];\r\n        libraryCards.push(\r\n            <div className=\"column\" key=\"filter\">\r\n                <FilterCard\r\n                    filter={this.state.filter}\r\n                    changeValue={(type, value) => this.changeFilterValue(type, value)}\r\n                    nudgeValue={(type, delta) => this.nudgeFilterValue(type, delta)}\r\n                    resetFilter={() => this.resetFilter()}\r\n                />\r\n            </div>\r\n        );\r\n\r\n        var monsters = [];\r\n        if (this.props.selection) {\r\n            this.props.library.forEach(group => {\r\n                group.monsters.forEach(monster => {\r\n                    if (this.matchMonster(monster)) {\r\n                        monsters.push(monster);\r\n                    }\r\n                });\r\n            });\r\n            monsters.sort((a, b) => {\r\n                if (a.name < b.name) return -1;\r\n                if (a.name > b.name) return 1;\r\n                return 0;\r\n            });\r\n        }\r\n        monsters.forEach(monster => {\r\n            libraryCards.push(\r\n                <div className=\"column\" key={monster.id}>\r\n                    <MonsterCard\r\n                        key={monster.id}\r\n                        combatant={monster}\r\n                        encounter={this.props.selection}\r\n                        library={this.props.library}\r\n                        mode={\"view encounter\"}\r\n                        addEncounterSlot={(combatant, waveID) => this.props.addEncounterSlot(combatant, waveID)}\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <CardGroup\r\n                heading=\"monster library\"\r\n                content={libraryCards}\r\n                showToggle={true}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <EncounterBuilderCard encounters={this.props.encounters} />\r\n                );\r\n            }\r\n\r\n            var encounters = [];\r\n            for (var n = 0; n !== this.props.encounters.length; ++n) {\r\n                var encounter = this.props.encounters[n];\r\n                encounters.push(\r\n                    <EncounterListItem\r\n                        key={encounter.id}\r\n                        encounter={encounter}\r\n                        selected={encounter === this.props.selection}\r\n                        setSelection={encounter => this.props.selectEncounter(encounter)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var encounterName = null;\r\n            var encounterCards = [];\r\n            var waves = [];\r\n\r\n            if (this.props.selection) {\r\n                encounterName = this.props.selection.name || \"unnamed encounter\";\r\n\r\n                encounterCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <EncounterCard\r\n                            selection={this.props.selection}\r\n                            parties={this.props.parties}\r\n                            encounters={this.props.encounters}\r\n                            changeValue={(type, value) => this.props.changeValue(this.props.selection, type, value)}\r\n                            addWave={() => this.props.addWave()}\r\n                            removeEncounter={() => this.props.removeEncounter()}\r\n                            getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                this.getMonsterCards(this.props.selection.slots, null)\r\n                    .forEach(card => encounterCards.push(card));\r\n                    \r\n                waves = this.props.selection.waves.map(wave => {\r\n                    var waveCards = [];\r\n                    waveCards.push(\r\n                        <div className=\"column\" key=\"info\">\r\n                            <WaveCard\r\n                                wave={wave}\r\n                                removeWave={wave => this.props.removeWave(wave)}\r\n                                changeValue={(wave, field, value) => this.props.changeValue(wave, field, value)}\r\n                            />\r\n                        </div>\r\n                    );\r\n\r\n                    this.getMonsterCards(wave.slots, wave.id)\r\n                        .forEach(card => waveCards.push(card));\r\n\r\n                    return (\r\n                        <CardGroup\r\n                            key={wave.id}\r\n                            heading={wave.name || \"unnamed wave\"}\r\n                            content={waveCards}\r\n                            showToggle={true}\r\n                        />\r\n                    );\r\n                });\r\n            }\r\n\r\n            return (\r\n                <div className=\"encounter-builder row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addEncounter(\"new encounter\")}>add a new encounter</button>\r\n                        {encounters}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        <CardGroup\r\n                            content={encounterCards}\r\n                            heading={encounterName}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectEncounter(null)}\r\n                        />\r\n                        {waves}\r\n                        {this.getLibrarySection()}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class MapFoliosCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var action = null;\r\n            if (this.props.mapFolios.length === 0) {\r\n                action = (\r\n                    <div className=\"section\">to start a new folio, press the button below</div>\r\n                );\r\n            } else {\r\n                action = (\r\n                    <div className=\"section\">select a map folio from the list to see the maps it contains</div>\r\n                );\r\n            }\r\n\r\n            var content = (\r\n                <div>\r\n                    <div className=\"section\">on this page you can set up folios containing tactical maps</div>\r\n                    <div className=\"section\">when you have created a map you can use it in encounters</div>\r\n                    <div className=\"divider\"></div>\r\n                    {action}\r\n                </div>\r\n            );\r\n\r\n            return (\r\n                <InfoCard getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class MapFolioListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var maps = [];\r\n            for (var n = 0; n !== this.props.mapFolio.maps.length; ++n) {\r\n                var map = this.props.mapFolio.maps[n];\r\n                var name = map.name || \"unnamed map\";\r\n                maps.push(<div key={map.id} className=\"text\">{name}</div>);\r\n            }\r\n            if (maps.length === 0) {\r\n                maps.push(<div key=\"empty\" className=\"text\">no maps</div>);\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.mapFolio)}>\r\n                    <div className=\"heading\">{this.props.mapFolio.name || \"unnamed folio\"}</div>\r\n                    {maps}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport InfoCard from '../cards/info-card';\r\n\r\nexport default class MapFolioCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var heading = null;\r\n            var content = null;\r\n\r\n            if (this.props.selection) {\r\n                heading = (\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">map folio</div>\r\n                    </div>\r\n                );\r\n\r\n                content = (\r\n                    <div>\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"folio name\" value={this.props.selection.name} onChange={event => this.props.changeValue(this.props.selection, \"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.addMap()}>add a new map</button>\r\n                            <ConfirmButton text=\"delete folio\" callback={() => this.props.removeMapFolio()} />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <InfoCard getHeading={() => heading} getContent={() => content} />\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class HitPointGauge extends React.Component {\r\n    render() {\r\n        try {\r\n            var hpMax = this.props.combatant.hpMax + this.props.combatant.hpTemp;\r\n            var hpBloodied = this.props.combatant.hpMax / 2;\r\n            var hpWidth = 100 * Math.max(this.props.combatant.hp, 0) / hpMax;\r\n\r\n            var style = \"\";\r\n            if (this.props.combatant.hp >= this.props.combatant.hpMax) {\r\n                style = \"bar unhurt\";\r\n            } else if (this.props.combatant.hp <= hpBloodied) {\r\n                style = \"bar bloodied\";\r\n            } else {\r\n                style = \"bar injured\";\r\n            }\r\n\r\n            var hpTempBar = null;\r\n            if (this.props.combatant.hpTemp > 0) {\r\n                var hpTempWidth = 100 * Math.max(this.props.combatant.hpTemp, 0) / hpMax;\r\n                hpTempBar = <div className=\"bar temp\" style={{ width: hpTempWidth + \"%\" }}></div>\r\n            }\r\n\r\n            return (\r\n                <div className=\"hp-gauge\">\r\n                    <div className={style} style={{ width: hpWidth + \"%\" }}></div>\r\n                    {hpTempBar}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport HitPointGauge from '../panels/hit-point-gauge';\r\n\r\nexport default class MapPanel extends React.Component {\r\n\r\n    getMapDimensions(border = 1) {\r\n        var dimensions = null;\r\n\r\n        this.props.map.items.filter(i => {\r\n            if (this.props.mode === \"edit\") {\r\n                return i.type === \"tile\";\r\n            }\r\n            return true;\r\n        }).forEach(i => {\r\n            if (!dimensions) {\r\n                dimensions = {\r\n                    minX: i.x,\r\n                    maxX: i.x + i.width - 1,\r\n                    minY: i.y,\r\n                    maxY: i.y + i.height - 1\r\n                };\r\n            } else {\r\n                dimensions.minX = Math.min(dimensions.minX, i.x);\r\n                dimensions.maxX = Math.max(dimensions.maxX, i.x + i.width - 1);\r\n                dimensions.minY = Math.min(dimensions.minY, i.y);\r\n                dimensions.maxY = Math.max(dimensions.maxY, i.y + i.height - 1);\r\n            }\r\n        });\r\n\r\n        if (!dimensions) {\r\n            // The map is blank\r\n            if (this.props.mode === 'thumbnail') {\r\n                return null;\r\n            }\r\n\r\n            dimensions = {\r\n                minX: 0,\r\n                maxX: 0,\r\n                minY: 0,\r\n                maxY: 0\r\n            };\r\n        }\r\n\r\n        // Apply the border\r\n        dimensions.minX -= border;\r\n        dimensions.maxX += border;\r\n        dimensions.minY -= border;\r\n        dimensions.maxY += border;\r\n\r\n        dimensions.width = 1 + dimensions.maxX - dimensions.minX;\r\n        dimensions.height = 1 + dimensions.maxY - dimensions.minY;\r\n\r\n        return dimensions;\r\n    }\r\n\r\n    getSideLength() {\r\n        switch (this.props.mode) {\r\n            case \"thumbnail\":\r\n                return 5;\r\n            case \"edit\":\r\n            case \"combat\":\r\n                return 25;\r\n            default:\r\n                return 5;\r\n        }\r\n    }\r\n\r\n    getPosition(x, y, width, height, mapDimensions) {\r\n        var sideLength = this.getSideLength();\r\n\r\n        return {\r\n            left: \"calc(\" + sideLength + \"px * \" + (x - mapDimensions.minX) + \")\",\r\n            top: \"calc(\" + sideLength + \"px * \" + (y - mapDimensions.minY) + \")\",\r\n            width: \"calc((\" + sideLength + \"px * \" + width + \") + 1px)\",\r\n            height: \"calc((\" + sideLength + \"px * \" + height + \") + 1px)\"\r\n        };\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var border = (this.props.mode === \"edit\") ? 2 : 0;\r\n            var mapDimensions = this.getMapDimensions(border);\r\n            if (!mapDimensions) {\r\n                return (\r\n                    <div>(blank map)</div>\r\n                );\r\n            }\r\n\r\n            // Draw the grid squares\r\n            var grid = [];\r\n            if (this.props.mode === \"edit\") {\r\n                for (var y = mapDimensions.minY; y !== mapDimensions.maxY + 1; ++y) {\r\n                    for (var x = mapDimensions.minX; x !== mapDimensions.maxX + 1; ++x) {\r\n                        var pos = this.getPosition(x, y, 1, 1, mapDimensions);\r\n                        grid.push(\r\n                            <GridSquare\r\n                                key={x + \",\" + y}\r\n                                x={x}\r\n                                y={y}\r\n                                position={pos}\r\n                                onClick={() => this.props.setSelectedItemID(null)}\r\n                                onDoubleClick={(x, y) => this.props.addMapTile(x, y)}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Draw the map tiles\r\n            var tiles = this.props.map.items\r\n                .filter(i => i.type === \"tile\")\r\n                .map(i => {\r\n                    var pos = this.getPosition(i.x, i.y, i.width, i.height, mapDimensions);\r\n                    return (\r\n                        <MapTile\r\n                            key={i.id}\r\n                            tile={i}\r\n                            position={pos}\r\n                            selectable={this.props.mode === \"edit\"}\r\n                            selected={this.props.selectedItemID === i.id}\r\n                            thumbnail={this.props.mode === \"thumbnail\"}\r\n                            select={id => this.props.mode === \"edit\" ? this.props.setSelectedItemID(id) : null}\r\n                        />\r\n                    );\r\n                });\r\n\r\n            // Draw the tokens\r\n            var tokens = [];\r\n            if (this.props.mode !== \"edit\") {\r\n                tokens = this.props.map.items\r\n                    .filter(i => (i.type === \"monster\") || (i.type === \"pc\"))\r\n                    .map(i => {\r\n                        var pos = this.getPosition(i.x, i.y, i.width, i.height, mapDimensions);\r\n                        var combatant = this.props.combatants.find(c => c.id === i.id);\r\n                        return (\r\n                            <MapToken\r\n                                key={i.id}\r\n                                token={i}\r\n                                position={pos}\r\n                                combatant={combatant}\r\n                                selectable={this.props.mode === \"combat\"}\r\n                                simple={this.props.mode === \"thumbnail\"}\r\n                                selected={this.props.selectedItemID ===  i.id}\r\n                                select={id => this.props.setSelectedItemID(id)}\r\n                            />\r\n                        );\r\n                    });\r\n            }\r\n\r\n            // Draw the drag overlay\r\n            var dragOverlay = [];\r\n            if (this.props.showOverlay) {\r\n                for (var yOver = mapDimensions.minY; yOver !== mapDimensions.maxY + 1; ++yOver) {\r\n                    for (var xOver = mapDimensions.minX; xOver !== mapDimensions.maxX + 1; ++xOver) {\r\n                        var posOver = this.getPosition(xOver, yOver, 1, 1, mapDimensions);\r\n                        dragOverlay.push(\r\n                            <GridSquare\r\n                                key={xOver + \",\" + yOver}\r\n                                x={xOver}\r\n                                y={yOver}\r\n                                position={posOver}\r\n                                overlay={true}\r\n                                onClick={(x, y) => this.props.gridSquareClicked(x, y)}\r\n                            />\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            var style = \"map-panel \" + this.props.mode;\r\n            return (\r\n                <div className={style} onClick={() => this.props.setSelectedItemID(null)}>\r\n                    <div className=\"grid\" style={{ height: ((this.getSideLength() * mapDimensions.height) + 1) + \"px\" }}>\r\n                        {grid}\r\n                        {tiles}\r\n                        {tokens}\r\n                        {dragOverlay}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass GridSquare extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (this.props.onClick) {\r\n            this.props.onClick(this.props.x, this.props.y);\r\n        }\r\n    }\r\n\r\n    doubleClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.onDoubleClick) {\r\n            this.props.onDoubleClick(this.props.x, this.props.y);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"grid-square\";\r\n        if (this.props.overlay) {\r\n            style += \" grid-overlay\";\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.click(e)}\r\n                onDoubleClick={e => this.doubleClick(e)}\r\n            >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapTile extends React.Component {\r\n    select(e) {\r\n        if (this.props.selectable) {\r\n            e.stopPropagation();\r\n            this.props.select(this.props.tile.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"tile \" + this.props.tile.terrain;\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n        }\r\n        if (this.props.thumbnail) {\r\n            style += \" thumbnail\";\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.select(e)}>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass MapToken extends React.Component {\r\n    select(e) {\r\n        if (this.props.selectable) {\r\n            e.stopPropagation();\r\n            this.props.select(this.props.token.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"token \" + this.props.token.type;\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n        }\r\n        if (this.props.combatant.current) {\r\n            style += \" current\";\r\n        }\r\n\r\n        if (!this.props.position) {\r\n            this.props.position = {\r\n                width: (this.props.token.width * 25) + \"px\",\r\n                height: (this.props.token.height * 25) + \"px\"\r\n            }\r\n        }\r\n\r\n        var initials = null;\r\n        var hpGauge = null;\r\n        var altitudeBadge = null;\r\n        var conditionsBadge = null;\r\n        if (!this.props.simple) {\r\n            var name = this.props.combatant.displayName || this.props.combatant.name;\r\n            initials = (\r\n                <div className=\"initials\">{name.split(' ').map(s => s[0])}</div>\r\n            );\r\n\r\n            if (this.props.combatant.type === \"monster\") {\r\n                hpGauge = (\r\n                    <HitPointGauge combatant={this.props.combatant} />\r\n                );\r\n            }\r\n\r\n            if (this.props.combatant.altitude > 0) {\r\n                altitudeBadge = (\r\n                    <div className=\"badge altitude\">&#9206;</div>\r\n                );\r\n            }\r\n\r\n            if (this.props.combatant.altitude < 0) {\r\n                altitudeBadge = (\r\n                    <div className=\"badge altitude\">&#9207;</div>\r\n                );\r\n            }\r\n\r\n            if ((this.props.combatant.conditions) && (this.props.combatant.conditions.length > 0)) {\r\n                conditionsBadge = (\r\n                    <div className=\"badge\">&#9670;</div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                title={this.props.combatant.displayName || this.props.combatant.name}\r\n                className={style}\r\n                style={this.props.position}\r\n                onClick={e => this.select(e)}\r\n            >\r\n                {initials}\r\n                {hpGauge}\r\n                {altitudeBadge}\r\n                {conditionsBadge}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport MapPanel from '../panels/map-panel';\r\nimport ConfirmButton from '../controls/confirm-button';\r\n\r\nexport default class MapCard extends React.Component {\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className=\"card map\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">{this.props.map.name || \"unnamed map\"}</div>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"section\">\r\n                            <input type=\"text\" placeholder=\"map name\" value={this.props.map.name} onChange={event => this.props.changeValue(this.props.map, \"name\", event.target.value)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section centered\">\r\n                            <MapPanel\r\n                                map={this.props.map}\r\n                                mode=\"thumbnail\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.editMap(this.props.map)}>edit map</button>\r\n                            <ConfirmButton text=\"delete map\" callback={() => this.props.removeMap(this.props.map)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\nimport MapFoliosCard from '../cards/information/map-folios-card';\r\nimport MapFolioListItem from '../list-items/map-folio-list-item';\r\nimport MapFolioCard from '../cards/map-folio-card';\r\nimport MapCard from '../cards/map-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport CardGroup from '../panels/card-group';\r\n\r\nexport default class MapFoliosScreen extends React.Component {\r\n    render() {\r\n        try {\r\n            var help = null;\r\n            if (this.props.showHelp) {\r\n                help = (\r\n                    <MapFoliosCard mapFolios={this.props.mapFolios} />\r\n                );\r\n            }\r\n\r\n            var folios = [];\r\n            for (var n = 0; n !== this.props.mapFolios.length; ++n) {\r\n                var mapFolio = this.props.mapFolios[n];\r\n                folios.push(\r\n                    <MapFolioListItem\r\n                        key={mapFolio.id}\r\n                        mapFolio={mapFolio}\r\n                        selected={mapFolio === this.props.selection}\r\n                        setSelection={mapFolio => this.props.selectMapFolio(mapFolio)}\r\n                    />\r\n                );\r\n            };\r\n\r\n            var folio = null;\r\n            if (this.props.selection) {\r\n                var folioCards = [];\r\n\r\n                folioCards.push(\r\n                    <div className=\"column\" key=\"info\">\r\n                        <MapFolioCard\r\n                            selection={this.props.selection}\r\n                            addMap={() => this.props.addMap(\"new map\")}\r\n                            removeMapFolio={() => this.props.removeMapFolio()}\r\n                            changeValue={(source, field, value) => this.props.changeValue(source, field, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                this.props.selection.maps.forEach(map => {\r\n                    folioCards.push(\r\n                        <div className=\"column\" key={map.id}>\r\n                            <MapCard\r\n                                map={map}\r\n                                editMap={map => this.props.editMap(map)}\r\n                                removeMap={map => this.props.removeMap(map)}\r\n                                changeValue={(source, type, value) => this.props.changeValue(source, type, value)}\r\n                            />\r\n                        </div>\r\n                    );\r\n                });\r\n\r\n                if (this.props.selection.maps.length === 0) {\r\n                    folioCards.push(\r\n                        <div className=\"column\" key=\"empty\">\r\n                            <InfoCard getContent={() => <div className=\"section\">no maps</div>} />\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n                folio = (\r\n                    <div>\r\n                        <CardGroup\r\n                            content={folioCards}\r\n                            heading={this.props.selection.name || \"unnamed folio\"}\r\n                            showClose={this.props.selection !== null}\r\n                            close={() => this.props.selectMapFolio(null)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"map-builder row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {help}\r\n                        <button onClick={() => this.props.addMapFolio(\"new map folio\")}>add a new map folio</button>\r\n                        {folios}\r\n                    </div>\r\n                    <div className=\"columns small-8 medium-8 large-9 scrollable\">\r\n                        {folio}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport InfoCard from '../info-card';\r\n\r\nexport default class CombatManagerCard extends React.Component {\r\n    render() {\r\n        var content = (\r\n            <div>\r\n                <div className=\"section\">here you can run a combat encounter by specifying a party and an encounter</div>\r\n                <div className=\"divider\"></div>\r\n                <div className=\"section\">below you will see a list of encounters that you have paused</div>\r\n                <div className=\"section\">you can resume a paused combat by selecting it</div>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <InfoCard getContent={() => content} />\r\n        );\r\n    };\r\n}","import React from 'react';\r\n\r\nimport MapPanel from '../panels/map-panel';\r\n\r\nexport default class CombatListItem extends React.Component {\r\n    render() {\r\n        try {\r\n            var combatName = this.props.combat.name;\r\n            if (!combatName) {\r\n                combatName = \"unnamed combat\";\r\n            }\r\n\r\n            var map = null;\r\n            if (this.props.combat.map) {\r\n                map = (\r\n                    <MapPanel\r\n                        map={this.props.combat.map}\r\n                        mode=\"thumbnail\"\r\n                        combatants={this.props.combat.combatants}\r\n                    />\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.selected ? \"list-item selected\" : \"list-item\"} onClick={() => this.props.setSelection(this.props.combat)}>\r\n                    <div className=\"heading\">{combatName}</div>\r\n                    <div className=\"text\">paused at {this.props.combat.timestamp}</div>\r\n                    {map}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport * as utils from '../../utils';\r\nimport PCCard from '../cards/pc-card';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport InfoCard from '../cards/info-card';\r\nimport MapPanel from '../panels/map-panel';\r\nimport CardGroup from '../panels/card-group';\r\nimport CombatManagerCard from '../cards/information/combat-manager-card';\r\nimport CombatListItem from '../list-items/combat-list-item';\r\nimport Spin from '../controls/spin';\r\nimport HitPointGauge from '../panels/hit-point-gauge';\r\n\r\nexport default class CombatManagerScreen extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            selectedTokenID: null,  // The ID of the combatant that's selected\r\n            addingToMapID: null     // The ID of the combatant we're adding to the map\r\n        };\r\n    }\r\n\r\n    setSelectedTokenID(id) {\r\n        this.setState({\r\n            selectedTokenID: id\r\n        });\r\n    }\r\n\r\n    setAddingToMapID(id) {\r\n        this.setState({\r\n            addingToMapID: id\r\n        });\r\n    }\r\n\r\n    createCard(combatant) {\r\n        var mode = \"combat\";\r\n        if (this.props.combat.map) {\r\n            mode += \" tactical\";\r\n            var onMap = this.props.combat.map.items.find(i => i.id === combatant.id);\r\n            mode += onMap ? \" on-map\" : \" off-map\";\r\n        }\r\n\r\n        switch (combatant.type) {\r\n            case \"pc\":\r\n                return (\r\n                    <PCCard\r\n                        combatant={combatant}\r\n                        mode={mode}\r\n                        changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                        nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                        makeCurrent={combatant => this.props.makeCurrent(combatant)}\r\n                        makeActive={combatant => this.props.makeActive(combatant)}\r\n                        makeDefeated={combatant => this.props.makeDefeated(combatant)}\r\n                        removeCombatant={combatant => this.props.removeCombatant(combatant)}\r\n                        mapAdd={combatant => this.setAddingToMapID(combatant.id)}\r\n                        mapMove={(combatant, dir) => this.props.mapMove(combatant, dir)}\r\n                        mapRemove={combatant => this.props.mapRemove(combatant)}\r\n                        endTurn={combatant => this.props.endTurn(combatant)}\r\n                    />\r\n                );\r\n            case \"monster\":\r\n                return (\r\n                    <MonsterCard\r\n                        combatant={combatant}\r\n                        mode={mode}\r\n                        combat={this.props.combat}\r\n                        changeValue={(combatant, type, value) => this.props.changeValue(combatant, type, value)}\r\n                        nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                        makeCurrent={combatant => this.props.makeCurrent(combatant)}\r\n                        makeActive={combatant => this.props.makeActive(combatant)}\r\n                        makeDefeated={combatant => this.props.makeDefeated(combatant)}\r\n                        removeCombatant={combatant => this.props.removeCombatant(combatant)}\r\n                        addCondition={(combatant) => this.props.addCondition(combatant)}\r\n                        editCondition={(combatant, condition) => this.props.editCondition(combatant, condition)}\r\n                        removeCondition={(combatant, conditionID) => this.props.removeCondition(combatant, conditionID)}\r\n                        nudgeConditionValue={(condition, type, delta) => this.props.nudgeValue(condition, type, delta)}\r\n                        changeConditionValue={(condition, type, value) => this.props.changeValue(condition, type, value)}\r\n                        mapAdd={combatant => this.setAddingToMapID(combatant.id)}\r\n                        mapMove={(combatant, dir) => this.props.mapMove(combatant, dir)}\r\n                        mapRemove={combatant => this.props.mapRemove(combatant)}\r\n                        endTurn={(combatant) => this.props.endTurn(combatant)}\r\n                        changeHP={(combatant, hp, temp) => this.props.changeHP(combatant, hp, temp)}\r\n                    />\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    addCombatantToMap(x, y) {\r\n        var combatant = this.props.combat.combatants.find(c => c.id === this.state.addingToMapID);\r\n        this.props.mapAdd(combatant, x, y);\r\n        this.setAddingToMapID(null);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var leftPaneContent = null;\r\n            var centrePaneContent = null;\r\n            var rightPaneContent = null;\r\n\r\n            if (this.props.combat) {\r\n                var current = [];\r\n                var pending = [];\r\n                var active = [];\r\n                var defeated = [];\r\n\r\n                this.props.combat.combatants.forEach(combatant => {\r\n                    if (combatant.current) {\r\n                        current.push(\r\n                            <div key={combatant.id}>\r\n                                {this.createCard(combatant)}\r\n                            </div>\r\n                        );\r\n                    }\r\n                    if (combatant.pending && !combatant.active && !combatant.defeated) {\r\n                        pending.push(\r\n                            <PendingCombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                                nudgeValue={(combatant, type, delta) => this.props.nudgeValue(combatant, type, delta)}\r\n                                makeActive={combatant => this.props.makeActive(combatant)}\r\n                            />\r\n                        );\r\n                    }\r\n                    if (!combatant.pending && combatant.active && !combatant.defeated) {\r\n                        active.push(\r\n                            <CombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                            />\r\n                        );\r\n                    }\r\n                    if (!combatant.pending && !combatant.active && combatant.defeated) {\r\n                        defeated.push(\r\n                            <CombatantRow\r\n                                key={combatant.id}\r\n                                combatant={combatant}\r\n                                combat={this.props.combat}\r\n                                select={combatant => this.setSelectedTokenID(combatant.id)}\r\n                                selected={combatant.id === this.state.selectedTokenID}\r\n                            />\r\n                        );\r\n                    }\r\n                });\r\n\r\n                if (this.props.showHelp && (pending.length !== 0)) {\r\n                    var pendingHelp = (\r\n                        <div key=\"pending-help\">\r\n                            <InfoCard\r\n                                getContent={() =>\r\n                                    <div>\r\n                                        <div className=\"section\">these combatants are not yet part of the encounter</div>\r\n                                        <div className=\"section\">set initiative on each of them, then add them to the encounter</div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    );\r\n                    pending = [].concat(pendingHelp, pending);\r\n                }\r\n\r\n                if (this.props.showHelp && (current.length === 0)) {\r\n                    var activeHelp = (\r\n                        <div key=\"active-help\">\r\n                            <InfoCard\r\n                                getContent={() =>\r\n                                    <div>\r\n                                        <div className=\"section\">these are the combatants taking part in this encounter; you can select them to see their stat blocks (on the right)</div>\r\n                                        <div className=\"section\">to begin the encounter, select the first combatant and press the <b>start turn</b> button on their stat block</div>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    );\r\n                    active = [].concat(activeHelp, active);\r\n                }\r\n\r\n                if (current.length === 0) {\r\n                    current.push(\r\n                        <InfoCard\r\n                            key=\"current\"\r\n                            getContent={() =>\r\n                                <div className=\"section\">the current initiative holder will be displayed here</div>\r\n                            }\r\n                        />\r\n                    );\r\n                }\r\n\r\n                var notifications = this.props.combat.notifications.map(n =>\r\n                    <Notification\r\n                        id={n.id}\r\n                        notification={n}\r\n                        close={(notification, removeCondition) => this.props.close(notification, removeCondition)}\r\n                    />\r\n                );\r\n\r\n                var mapSection = null;\r\n                if (this.props.combat.map) {\r\n                    mapSection = (\r\n                        <MapPanel\r\n                            map={this.props.combat.map}\r\n                            mode=\"combat\"\r\n                            showOverlay={this.state.addingToMapID !== null}\r\n                            combatants={this.props.combat.combatants}\r\n                            selectedItemID={this.state.selectedTokenID}\r\n                            setSelectedItemID={id => {\r\n                                if (id) {\r\n                                    this.setSelectedTokenID(id);\r\n                                }\r\n                            }}\r\n                            gridSquareClicked={(x, y) => this.addCombatantToMap(x, y)}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                var selectedCombatant = null;\r\n                if (this.state.selectedTokenID) {\r\n                    var combatant = this.props.combat.combatants.find(c => c.id === this.state.selectedTokenID);\r\n                    if (combatant && !combatant.current) {\r\n                        selectedCombatant = this.createCard(combatant);\r\n                    }\r\n                }\r\n                if (!selectedCombatant) {\r\n                    selectedCombatant = (\r\n                        <InfoCard\r\n                            key=\"selected\"\r\n                            getContent={() =>\r\n                                <div className=\"section\">select a pc or monster to see its details here</div>\r\n                            }\r\n                        />\r\n                    );\r\n                }\r\n\r\n                leftPaneContent = (\r\n                    <div className=\"combat-left\">\r\n                        <CardGroup\r\n                            heading=\"initiative holder\"\r\n                            content={current}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                centrePaneContent = (\r\n                    <div className=\"combat-centre\">\r\n                        {notifications}\r\n                        <CardGroup\r\n                            heading=\"waiting for intiative to be entered\"\r\n                            content={pending}\r\n                            hidden={pending.length === 0}\r\n                            showToggle={true}\r\n                        />\r\n                        {mapSection}\r\n                        <CardGroup\r\n                            heading=\"combatants in the encounter\"\r\n                            content={active}\r\n                            hidden={active.length === 0}\r\n                        />\r\n                        <CardGroup\r\n                            heading=\"defeated\"\r\n                            content={defeated}\r\n                            hidden={defeated.length === 0}\r\n                            showToggle={true}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n                rightPaneContent = (\r\n                    <div className=\"combat-right\">\r\n                        <CardGroup\r\n                            heading=\"selected combatant\"\r\n                            content={[selectedCombatant]}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                var help = null;\r\n                if (this.props.showHelp) {\r\n                    help = (\r\n                        <CombatManagerCard />\r\n                    );\r\n                }\r\n\r\n                var combats = [];\r\n                this.props.combats.forEach(combat => {\r\n                    combats.push(\r\n                        <CombatListItem\r\n                            key={combat.id}\r\n                            combat={combat}\r\n                            setSelection={combat => this.props.resumeEncounter(combat)}\r\n                        />\r\n                    );\r\n                });\r\n\r\n                leftPaneContent = (\r\n                    <div className=\"combat-left\">\r\n                        {help}\r\n                        <button onClick={() => this.props.createCombat()}>start a new combat</button>\r\n                        {combats}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"combat-manager row collapse\">\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {leftPaneContent}\r\n                    </div>\r\n                    <div className=\"columns small-4 medium-4 large-6 scrollable list-column\">\r\n                        {centrePaneContent}\r\n                    </div>\r\n                    <div className=\"columns small-4 medium-4 large-3 scrollable list-column\">\r\n                        {rightPaneContent}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass Notification extends React.Component {\r\n    saveSuccess(notification) {\r\n        // Reduce save by 1\r\n        this.props.notification.condition.duration.count -= 1;\r\n        if (this.props.notification.condition.duration.count === 0) {\r\n            // Remove the condition\r\n            this.close(notification, true);\r\n        } else {\r\n            this.close(notification);\r\n        }\r\n    }\r\n\r\n    close(notification, removeCondition = false) {\r\n        this.props.close(notification, removeCondition);\r\n    }\r\n\r\n    render() {\r\n        var name = this.props.notification.combatant.displayName || this.props.notification.combatant.name || \"unnamed monster\";\r\n        switch (this.props.notification.type) {\r\n            case \"condition-save\":\r\n                return (\r\n                    <div key={this.props.notification.id} className=\"notification\">\r\n                        <div className=\"text\">\r\n                            {name} must make a {this.props.notification.condition.duration.saveType} save against dc {this.props.notification.condition.duration.saveDC}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <button onClick={() => this.saveSuccess(this.props.notification)}>success</button>\r\n                            <button onClick={() => this.close(this.props.notification)}>ok</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case \"condition-end\":\r\n                return (\r\n                    <div key={this.props.notification.id} className=\"notification\">\r\n                        <div className=\"text\">\r\n                            {name} is no longer affected by condition {this.props.notification.condition.name}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <button onClick={() => this.close(this.props.notification)}>ok</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass PendingCombatantRow extends React.Component {\r\n    getInformationText() {\r\n        if (this.props.selected) {\r\n            return \"selected\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.select) {\r\n            this.props.select(this.props.combatant);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var style = \"combatant-row \" + this.props.combatant.type;\r\n        if (this.props.combatant.current || this.props.selected) {\r\n            style += \" highlight\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={e => this.onClick(e)}>\r\n                <div className=\"name\">\r\n                    {this.props.combatant.displayName || this.props.combatant.name || \"combatant\"}\r\n                    <span className=\"info\">{this.getInformationText()}</span>\r\n                </div>\r\n                <div className=\"content\">\r\n                    <Spin\r\n                        source={this.props.combatant}\r\n                        name=\"initiative\"\r\n                        label=\"initiative\"\r\n                        nudgeValue={delta => this.props.nudgeValue(this.props.combatant, \"initiative\", delta)}\r\n                    />\r\n                    <button onClick={e => { e.stopPropagation(); this.props.makeActive(this.props.combatant); }}>add to encounter</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CombatantRow extends React.Component {\r\n    getInformationText() {\r\n        if (this.props.combatant.current) {\r\n            return \"current turn\";\r\n        }\r\n\r\n        if (this.props.selected) {\r\n            return \"selected\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    onClick(e) {\r\n        e.stopPropagation();\r\n        if (this.props.select) {\r\n            this.props.select(this.props.combatant);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var notes = [];\r\n        if (this.props.combat.map) {\r\n            if (!this.props.combatant.pending && !this.props.combat.map.items.find(i => i.id === this.props.combatant.id)) {\r\n                notes.push(\r\n                    <div key=\"not-on-map\" className=\"note\">not on the map</div>\r\n                );\r\n            }\r\n        }\r\n\r\n        var content = null;\r\n\r\n        switch (this.props.combatant.type) {\r\n            case \"pc\":\r\n                content = (\r\n                    <div className=\"content\">\r\n                        <div className=\"section key-stats\">\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.initiative}</div>\r\n                                <div className=\"stat-label\">init</div>\r\n                            </div>\r\n                            <div className=\"key-stat wide\">\r\n                                <div className=\"stat-value\">{this.props.combatant.player ? this.props.combatant.player : \"-\"}</div>\r\n                            </div>\r\n                        </div>\r\n                        {notes}\r\n                    </div>\r\n                );\r\n                break;\r\n            case \"monster\":\r\n                var hp = this.props.combatant.hp;\r\n                if (this.props.combatant.hpTemp > 0) {\r\n                    hp += \"+\" + this.props.combatant.hpTemp;\r\n                }\r\n                var gauge = null;\r\n                if (!this.props.combatant.pending) {\r\n                    gauge = (\r\n                        <HitPointGauge combatant={this.props.combatant} />\r\n                    );\r\n                }\r\n                var conditions = null;\r\n                if (this.props.combatant.conditions) {\r\n                    conditions = this.props.combatant.conditions.map(c => {\r\n                        var name = c.name;\r\n                        if (c.name === \"exhaustion\") {\r\n                            name += \" (\" + c.level + \")\";\r\n                        }\r\n                        if (c.name === \"custom\") {\r\n                            name = c.text;\r\n                        }\r\n                        if (c.duration) {\r\n                            name += \" \" + utils.conditionDurationText(c, this.props.combat);\r\n                        }\r\n                        var description = [];\r\n                        var text = utils.conditionText(c);\r\n                        for (var n = 0; n !== text.length; ++n) {\r\n                            description.push(<li key={n} className=\"condition-text\">{text[n]}</li>);\r\n                        }\r\n                        return (\r\n                            <div key={c.id} className=\"condition\">\r\n                                <div className=\"condition-name\">{name}</div>\r\n                                <ul>\r\n                                    {description}\r\n                                </ul>\r\n                            </div>\r\n                        );\r\n                    });\r\n                }\r\n                content = (\r\n                    <div className=\"content\">\r\n                        <div className=\"section key-stats\">\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.initiative}</div>\r\n                                <div className=\"stat-label\">init</div>\r\n                            </div>\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{this.props.combatant.ac}</div>\r\n                                <div className=\"stat-label\">ac</div>\r\n                            </div>\r\n                            <div className=\"key-stat\">\r\n                                <div className=\"stat-value\">{hp}</div>\r\n                                <div className=\"stat-label\">hp</div>\r\n                            </div>\r\n                        </div>\r\n                        {gauge}\r\n                        {conditions}\r\n                        {notes}\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        var style = \"combatant-row \" + this.props.combatant.type;\r\n        if (this.props.combatant.current || this.props.selected) {\r\n            style += \" highlight\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={e => this.onClick(e)}>\r\n                <div className=\"name\">\r\n                    {this.props.combatant.displayName || this.props.combatant.name || \"combatant\"}\r\n                    <span className=\"info\">{this.getInformationText()}</span>\r\n                </div>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport checked from \"../../resources/images/checked.svg\";\r\nimport unchecked from \"../../resources/images/unchecked.svg\";\r\n\r\n/*\r\n<Checkbox\r\n    label=\"LABEL\"\r\n    checked={BOOLEAN}\r\n    disabled={BOOLEAN}\r\n    changeValue={value => this.changeValue(SOURCEOBJECT, FIELDNAME, value)}\r\n/>\r\n*/\r\n\r\nexport default class Checkbox extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        this.props.changeValue(!this.props.checked);\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className={this.props.disabled ? \"checkbox disabled\" : \"checkbox\"} onClick={e => this.click(e)}>\r\n                    <img className=\"image\" src={this.props.checked ? checked : unchecked} alt=\"check\" />\r\n                    <div className=\"checkbox-label\">{this.props.label}</div>\r\n                </div>\r\n            );\r\n\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\n/*\r\nvar options = [\r\n    {\r\n        id: \"one\",\r\n        text: \"One\",\r\n        disabled: false\r\n    },\r\n    {\r\n        id: \"two\",\r\n        text: \"Two\",\r\n        disabled: true\r\n    },\r\n    {\r\n        id: \"three\",\r\n        text: \"Three\",\r\n        disabled: false\r\n    }\r\n];\r\n\r\n<Selector\r\n    tabs={BOOLEAN}\r\n    options={options}\r\n    noBorder={BOOLEAN}\r\n    selectedID={CURRENT_OPTION_ID}\r\n    disabled={BOOLEAN}\r\n    select={optionID => this.changeValue(SOURCEOBJECT, FIELDNAME, optionID)}\r\n/>\r\n*/\r\n\r\nexport default class Selector extends React.Component {\r\n    render() {\r\n        try {\r\n            var style = (this.props.tabs) ? \"selector tabs\" : \"selector radio\";\r\n            if (this.props.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n            if (this.props.noBorder) {\r\n                style += \" no-border\";\r\n            }\r\n\r\n            var itemsPerRow = this.props.itemsPerRow ? this.props.itemsPerRow : this.props.options.length;\r\n            var rowCount = Math.ceil(this.props.options.length / itemsPerRow);\r\n            var rowContents = [];\r\n            for (var n = 0; n !== rowCount; ++n) {\r\n                rowContents.push([]);\r\n            }\r\n\r\n            this.props.options.forEach(option => {\r\n                var index = this.props.options.indexOf(option);\r\n                var rowIndex = Math.floor(index / itemsPerRow);\r\n                var row = rowContents[rowIndex];\r\n                row.push(\r\n                    <SelectorOption\r\n                        key={option.id}\r\n                        option={option}\r\n                        selected={option.id === this.props.selectedID}\r\n                        count={itemsPerRow}\r\n                        select={optionID => this.props.select(optionID)}\r\n                    />\r\n                );\r\n            });\r\n\r\n            var rowSections = rowContents.map(row => {\r\n                var index = rowContents.indexOf(row);\r\n                return <div key={index}>{row}</div>;\r\n            });\r\n\r\n            return (\r\n                <div className={style}>\r\n                    {rowSections}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass SelectorOption extends React.Component {\r\n    click(e) {\r\n        e.stopPropagation();\r\n        if (!this.props.option.disabled) {\r\n            this.props.select(this.props.option.id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var width = \"calc(((100% - 1px) / \" + this.props.count + \") - 2px )\";\r\n\r\n            var style = \"option\";\r\n            if (this.props.selected) {\r\n                style += \" selected\";\r\n            }\r\n            if (this.props.option.disabled) {\r\n                style += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div key={this.props.option.id} className={style} style={{ width: width }} title={this.props.option.text} onClick={e => this.click(e)}>\r\n                    {this.props.option.text}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport ConfirmButton from '../controls/confirm-button';\r\nimport Checkbox from '../controls/checkbox';\r\nimport Dropdown from '../controls/dropdown';\r\nimport Expander from '../controls/expander';\r\nimport Spin from '../controls/spin';\r\nimport Selector from '../controls/selector';\r\n\r\nexport default class AboutModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            showDev: false,\r\n            optionID: \"abc\",\r\n            value: 0,\r\n            selected: false\r\n        };\r\n    }\r\n\r\n    setOption(optionID) {\r\n        this.setState({\r\n            optionID: optionID\r\n        });\r\n    }\r\n\r\n    setValue(value) {\r\n        this.setState({\r\n            value: value\r\n        });\r\n    }\r\n\r\n    setSelected(selected) {\r\n        this.setState({\r\n            selected: selected\r\n        });\r\n    }\r\n\r\n    getDevSection() {\r\n        if (this.state.showDev) {\r\n            var devOptions = [\"abc\", \"def\", \"ghi\", \"jkl\"].map(x => {\r\n                return {\r\n                    id: x,\r\n                    text: x\r\n                };\r\n            });\r\n\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"columns small-6 medium-6 large-6 end\">\r\n                        <div className=\"heading\">dev</div>\r\n                        <button onClick={() => this.setSelected(!this.state.selected)}>button</button>\r\n                        <ConfirmButton\r\n                            text=\"confirm\"\r\n                            callback={() => this.setSelected(!this.state.selected)}\r\n                        />\r\n                        <Checkbox\r\n                            label=\"checkbox\"\r\n                            checked={this.state.selected}\r\n                            changeValue={value => this.setSelected(value)}\r\n                        />\r\n                        <Dropdown\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                        <Expander\r\n                            text=\"expander\"\r\n                            content={<div>content</div>}\r\n                        />\r\n                        <Spin\r\n                            source={this.state}\r\n                            name=\"value\"\r\n                            label=\"value\"\r\n                            factors={[1, 10, 100]}\r\n                            nudgeValue={delta => this.setValue(this.state.value + delta)}\r\n                        />\r\n                        <Selector\r\n                            tabs={true}\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                        <Selector\r\n                            tabs={false}\r\n                            options={devOptions}\r\n                            selectedID={this.state.optionID}\r\n                            select={optionID => this.setOption(optionID)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className=\"about\">\r\n                    <div className=\"row\">\r\n                        <div className=\"columns small-6 medium-6 large-6 list-column\">\r\n                            <div className=\"heading\">about</div>\r\n                            <div className=\"section\">dojo by <a href=\"mailto:andy.aiken@live.co.uk\">andy aiken</a></div>\r\n                            <div className=\"section\">if you would like to contribut to this project, you can do so <a href=\"https://github.com/andyaiken/dojo\" target=\"_blank\" rel=\"noopener noreferrer\">here</a></div>\r\n                            <div className=\"section\">dungeons and dragons copyright wizards of the coast</div>\r\n                        </div>\r\n                        <div className=\"columns small-6 medium-6 large-6 list-column\">\r\n                            <div className=\"heading\">options</div>\r\n                            <ConfirmButton text=\"clear all data\" callback={() => this.props.resetAll()} />\r\n                            <Checkbox\r\n                                label=\"show help cards\"\r\n                                checked={this.props.options.showHelp}\r\n                                changeValue={value => this.props.changeValue(this.props.options, \"showHelp\", value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {this.getDevSection()}\r\n                    <div className=\"row\">\r\n                        <div className=\"columns small-12 medium-12 large-12 list-column\">\r\n                            <div className=\"heading\">open game license</div>\r\n                            <div className=\"section\">The following text is the property of Wizards of the Coast, Inc. and is Copyright 2000 Wizards of the Coast, Inc (\"Wizards\"). All Rights Reserved.</div>\r\n                            <ol>\r\n                                <li>Definitions: (a)\"Contributors\" means the copyright and/or trademark owners who have contributed Open Game Content; (b)\"Derivative Material\" means copyrighted material including derivative works and translations (including into other computer languages), potation, modification, correction, addition, extension, upgrade, improvement, compilation, abridgment or other form in which an existing work may be recast, transformed or adapted; (c) \"Distribute\" means to reproduce, license, rent, lease, sell, broadcast, publicly display, transmit or otherwise distribute; (d)\"Open Game Content\" means the game mechanic and includes the methods, procedures, processes and routines to the extent such content does not embody the Product Identity and is an enhancement over the prior art and any additional content clearly identified as Open Game Content by the Contributor, and means any work covered by this License, including translations and derivative works under copyright law, but specifically excludes Product Identity. (e) \"Product Identity\" means product and product line names, logos and identifying marks including trade dress; artifacts; creatures characters; stories, storylines, plots, thematic elements, dialogue, incidents, language, artwork, symbols, designs, depictions, likenesses, formats, poses, concepts, themes and graphic, photographic and other visual or audio representations; names and descriptions of characters, spells, enchantments, personalities, teams, personas, likenesses and special abilities; places, locations, environments, creatures, equipment, magical or supernatural abilities or effects, logos, symbols, or graphic designs; and any other trademark or registered trademark clearly identified as Product identity by the owner of the Product Identity, and which specifically excludes the Open Game Content; (f) \"Trademark\" means the logos, names, mark, sign, motto, designs that are used by a Contributor to identify itself or its products or the associated products contributed to the Open Game License by the Contributor (g) \"Use\", \"Used\" or \"Using\" means to use, Distribute, copy, edit, format, modify, translate and otherwise create Derivative Material of Open Game Content. (h) \"You\" or \"Your\" means the licensee in terms of this agreement.</li>\r\n                                <li>The License: This License applies to any Open Game Content that contains a notice indicating that the Open Game Content may only be Used under and in terms of this License. You must affix such a notice to any Open Game Content that you Use. No terms may be added to or subtracted from this License except as described by the License itself. No other terms or conditions may be applied to any Open Game Content distributed using this License.</li>\r\n                                <li>Offer and Acceptance: By Using the Open Game Content You indicate Your acceptance of the terms of this License.</li>\r\n                                <li>Grant and Consideration: In consideration for agreeing to use this License, the Contributors grant You a perpetual, worldwide, royalty-free, non-exclusive license with the exact terms of this License to Use, the Open Game Content.</li>\r\n                                <li>Representation of Authority to Contribute: If You are contributing original material as Open Game Content, You represent that Your Contributions are Your original creation and/or You have sufficient rights to grant the rights conveyed by this License.</li>\r\n                                <li>Notice of License Copyright: You must update the COPYRIGHT NOTICE portion of this License to include the exact text of the COPYRIGHT NOTICE of any Open Game Content You are copying, modifying or distributing, and You must add the title, the copyright date, and the copyright holder's name to the COPYRIGHT NOTICE of any original Open Game Content you Distribute.</li>\r\n                                <li>Use of Product Identity: You agree not to Use any Product Identity, including as an indication as to compatibility, except as expressly licensed in another, independent Agreement with the owner of each element of that Product Identity. You agree not to indicate compatibility or co-adaptability with any Trademark or Registered Trademark in conjunction with a work containing Open Game Content except as expressly licensed in another, independent Agreement with the owner of such Trademark or Registered Trademark. The use of any Product Identity in Open Game Content does not constitute a challenge to the ownership of that Product Identity. The owner of any Product Identity used in Open Game Content shall retain all rights, title and interest in and to that Product Identity.</li>\r\n                                <li>Identification: If you distribute Open Game Content You must clearly indicate which portions of the work that you are distributing are Open Game Content.</li>\r\n                                <li>Updating the License: Wizards or its designated Agents may publish updated versions of this License. You may use any authorized version of this License to copy, modify and distribute any Open Game Content originally distributed under any version of this License.</li>\r\n                                <li>Copy of this License: You MUST include a copy of this License with every copy of the Open Game Content You Distribute.</li>\r\n                                <li>Use of Contributor Credits: You may not market or advertise the Open Game Content using the name of any Contributor unless You have written permission from the Contributor to do so.</li>\r\n                                <li>Inability to Comply: If it is impossible for You to comply with any of the terms of this License with respect to some or all of the Open Game Content due to statute, judicial order, or governmental regulation then You may not Use any Open Game Material so affected.</li>\r\n                                <li>Termination: This License will terminate automatically if You fail to comply with all terms herein and fail to cure such breach within 30 days of becoming aware of the breach. All sublicenses shall survive the termination of this License.</li>\r\n                                <li>Reformation: If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable.</li>\r\n                                <li>COPYRIGHT NOTICE Open Game License v 1.0 Copyright 2000, Wizards of the Coast, Inc.</li>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport { CATEGORY_TYPES, SIZE_TYPES } from '../../models/models';\r\n\r\nimport Selector from '../controls/selector';\r\n\r\nexport default class DemographicsModal extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chart: \"challenge\"\r\n        };\r\n    }\r\n\r\n    selectChart(chart) {\r\n        this.setState({\r\n            chart: chart\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var demographics = null;\r\n\r\n            var allMonsters = [];\r\n            this.props.library.forEach(group => group.monsters.forEach(monster => allMonsters.push(monster)));\r\n            if (allMonsters.length !== 0) {\r\n                var buckets = [];\r\n                var maxBucketSize = 0;\r\n                var monsters = {};\r\n\r\n                switch (this.state.chart) {\r\n                    case \"challenge\":\r\n                        var challenges = [0, 0.125, 0.25, 0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30];\r\n                        challenges.forEach(cr => {\r\n                            buckets.push({\r\n                                value: cr,\r\n                                title: \"challenge \" + utils.challenge(cr)\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var cr = bucket.value;\r\n                            monsters[cr] = allMonsters.filter(monster => monster.challenge === cr);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var cr = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[cr].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    case \"size\":\r\n                        SIZE_TYPES.forEach(size => {\r\n                            buckets.push({\r\n                                value: size,\r\n                                title: size\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var size = bucket.value;\r\n                            monsters[size] = allMonsters.filter(monster => monster.size === size);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var size = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[size].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    case \"type\":\r\n                        CATEGORY_TYPES.forEach(type => {\r\n                            buckets.push({\r\n                                value: type,\r\n                                title: type\r\n                            })\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var type = bucket.value;\r\n                            monsters[type] = allMonsters.filter(monster => monster.category === type);\r\n                        });\r\n\r\n                        buckets.forEach(bucket => {\r\n                            var type = bucket.value;\r\n                            maxBucketSize = Math.max(monsters[type].length, maxBucketSize);\r\n                        });\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n\r\n                var bars = [];\r\n                for (var index = 0; index !== buckets.length; ++index) {\r\n                    var bucket = buckets[index];\r\n                    var set = monsters[bucket.value];\r\n                    var count = set ? set.length : 0;\r\n                    bars.push(\r\n                        <div\r\n                            key={bucket.title}\r\n                            className=\"bar-container\"\r\n                            style={{\r\n                                width: \"calc((100% - 1px) / \" + buckets.length + \")\",\r\n                                left: \"calc((100% - 1px) * \" + index + \" / \" + buckets.length + \")\"\r\n                            }}\r\n                            title={bucket.title + \": \" + set.length + \" monsters\"}>\r\n                            <div\r\n                                className=\"bar-space\"\r\n                                style={{\r\n                                    height: \"calc((100% - 1px) * \" + (maxBucketSize - count) + \" / \" + maxBucketSize + \")\"\r\n                                }}>\r\n                            </div>\r\n                            <div\r\n                                className=\"bar\"\r\n                                style={{\r\n                                    height: \"calc((100% - 1px) * \" + count + \" / \" + maxBucketSize + \")\"\r\n                                }}>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                };\r\n\r\n                var chartOptions = [\r\n                    {\r\n                        id: \"challenge\",\r\n                        text: \"challenge rating\"\r\n                    },\r\n                    {\r\n                        id: \"size\",\r\n                        text: \"size\"\r\n                    },\r\n                    {\r\n                        id: \"type\",\r\n                        text: \"type\"\r\n                    }\r\n                ]\r\n\r\n                demographics = (\r\n                    <div>\r\n                        <Selector\r\n                            options={chartOptions}\r\n                            selectedID={this.state.chart}\r\n                            select={optionID => this.selectChart(optionID)}\r\n                        />\r\n                        <div className=\"chart\">\r\n                            <div className=\"plot\">{bars}</div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return demographics;\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\nimport { TRAIT_TYPES, CATEGORY_TYPES, SIZE_TYPES } from '../../models/models';\r\n\r\nimport Checkbox from '../controls/checkbox';\r\nimport Dropdown from '../controls/dropdown';\r\nimport MonsterCard from '../cards/monster-card';\r\nimport Spin from '../controls/spin';\r\nimport AbilityScorePanel from '../panels/ability-score-panel';\r\nimport TraitsPanel from '../panels/traits-panel';\r\nimport Selector from '../controls/selector';\r\n\r\nimport arrow from \"../../resources/images/down-arrow.svg\";\r\n\r\nexport default class MonsterEditorModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            monster: props.monster,\r\n            page: \"overview\",\r\n            showFilter: false,\r\n            helpSection: \"speed\",\r\n            filter: {\r\n                size: true,\r\n                type: true,\r\n                subtype: false,\r\n                alignment: false,\r\n                challenge: true,\r\n            }\r\n        };\r\n    }\r\n\r\n    setPage(page) {\r\n        var sections = this.getHelpOptionsForPage(page);\r\n        this.setState({\r\n            page: page,\r\n            helpSection: sections[0]\r\n        });\r\n    }\r\n\r\n    toggleFilter() {\r\n        this.setState({\r\n            showFilter: !this.state.showFilter\r\n        });\r\n    }\r\n\r\n    setHelpSection(section) {\r\n        this.setState({\r\n            helpSection: section\r\n        });\r\n    }\r\n\r\n    toggleMatch(type) {\r\n        // eslint-disable-next-line\r\n        this.state.filter[type] = !this.state.filter[type];\r\n        this.setState({\r\n            filter: this.state.filter\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // Helper methods\r\n\r\n    getHelpOptionsForPage(page) {\r\n        switch (page) {\r\n            case \"overview\":\r\n                return [\"speed\", \"senses\", \"languages\", \"equipment\"];\r\n            case \"abilities\":\r\n                return [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\", \"saves\", \"skills\"];\r\n            case \"combat\":\r\n                return [\"armor class\", \"hit dice\", \"resistances\", \"vulnerabilities\", \"immunities\", \"conditions\"];\r\n            case \"actions\":\r\n                return [\"actions\"];\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    getMonsters() {\r\n        var monsters = [];\r\n        this.props.library.forEach(group => {\r\n            group.monsters.forEach(monster => {\r\n                var match = true;\r\n\r\n                if (this.state.monster.id === monster.id) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.size && (this.state.monster.size !== monster.size)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.type && (this.state.monster.category !== monster.category)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.subtype && (this.state.monster.tag !== monster.tag)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.alignment && (this.state.monster.alignment !== monster.alignment)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (this.state.filter.challenge && (this.state.monster.challenge !== monster.challenge)) {\r\n                    match = false;\r\n                }\r\n\r\n                if (match) {\r\n                    monsters.push(monster);\r\n                }\r\n            })\r\n        });\r\n\r\n        return monsters;\r\n    }\r\n\r\n    setRandomValue(field, monsters, notify) {\r\n        var index = Math.floor(Math.random() * monsters.length);\r\n        var m = monsters[index];\r\n\r\n        var source = m;\r\n        var value = null;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                value = source[token];\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n\r\n        this.changeValue(field, value, notify);\r\n    }\r\n\r\n    geneSplice(monsters) {\r\n        [\r\n            \"speed\",\r\n            \"senses\",\r\n            \"languages\",\r\n            \"equipment\",\r\n            \"abilityScores.str\",\r\n            \"abilityScores.dex\",\r\n            \"abilityScores.con\",\r\n            \"abilityScores.int\",\r\n            \"abilityScores.wis\",\r\n            \"abilityScores.cha\",\r\n            \"savingThrows\",\r\n            \"skills\",\r\n            \"ac\",\r\n            \"hitDice\",\r\n            \"damage.resist\",\r\n            \"damage.vulnerable\",\r\n            \"damage.immune\",\r\n            \"conditionImmunities\"\r\n        ].forEach(field => {\r\n            this.setRandomValue(field, monsters, false);\r\n        });\r\n\r\n        TRAIT_TYPES.forEach(type => {\r\n            // Clear current traits of this type\r\n            var current = this.state.monster.traits.filter(t => t.type === type);\r\n            current.forEach(c => {\r\n                var index = this.state.monster.traits.findIndex(t => t === c);\r\n                this.state.monster.traits.splice(index, 1);\r\n            })\r\n\r\n            // Get all traits of this type\r\n            var traits = [];\r\n            monsters.forEach(m => {\r\n                m.traits.filter(t => t.type === type)\r\n                    .forEach(t => traits.push(t));\r\n            });\r\n\r\n            // Collate by name\r\n            var distinct = [];\r\n            traits.forEach(t => {\r\n                var current = distinct.find(d => d.trait.name === t.name);\r\n                if (current) {\r\n                    current.count += 1;\r\n                } else {\r\n                    distinct.push({\r\n                        trait: t,\r\n                        count: 1\r\n                    });\r\n                }\r\n            });\r\n\r\n            // If any are common to all monsters, copy them and remove from the candidates\r\n            var addedIDs = [];\r\n            distinct.filter(d => d.count === monsters.length)\r\n                .forEach(d => {\r\n                    this.copyTrait(d.trait);\r\n                    addedIDs.push(d.trait.id);\r\n                });\r\n            addedIDs.forEach(id => {\r\n                var index = distinct.findIndex(d => d.trait.id === id);\r\n                distinct.splice(index, 1);\r\n            });\r\n\r\n            var avg = traits.length / monsters.length;\r\n            while (this.state.monster.traits.filter(t => t.type === type).length < avg) {\r\n                var index = Math.floor(Math.random() * distinct.length);\r\n                var t = distinct[index].trait;\r\n                this.copyTrait(t);\r\n                distinct.splice(index, 1);\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    addTrait(type) {\r\n        var trait = factory.createTrait();\r\n        trait.type = type;\r\n        trait.name = \"New \" + this.getActionTypeName(type, false).toLowerCase();\r\n        this.state.monster.traits.push(trait);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    addRandomTrait(type, monsters) {\r\n        var traits = [];\r\n        monsters.forEach(m => {\r\n            m.traits.filter(t => t.type === type)\r\n                .forEach(t => {\r\n                    traits.push(t);\r\n                });\r\n        });\r\n\r\n        var index = Math.floor(Math.random() * traits.length);\r\n        var trait = traits[index];\r\n\r\n        this.copyTrait(trait);\r\n    }\r\n\r\n    removeTrait(trait) {\r\n        var index = this.state.monster.traits.indexOf(trait);\r\n        this.state.monster.traits.splice(index, 1);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    getActionTypeName(type, plural) {\r\n        var name = utils.traitType(type);\r\n        if (plural) {\r\n            name += \"s\";\r\n        }\r\n        return name;\r\n    }\r\n\r\n    copyTrait(trait) {\r\n        var copy = JSON.parse(JSON.stringify(trait));\r\n        copy.id = utils.guid();\r\n        this.state.monster.traits.push(copy);\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    changeTrait(trait, field, value) {\r\n        trait[field] = value;\r\n        this.setState({\r\n            monster: this.state.monster\r\n        });\r\n    }\r\n\r\n    nudgeValue(field, delta) {\r\n        var source = this.state.monster;\r\n        var value = null;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                value = source[token];\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n\r\n        var newValue = null;\r\n        if (field === \"challenge\") {\r\n            newValue = utils.nudgeChallenge(value, delta);\r\n        } else {\r\n            newValue = value + delta;\r\n        }\r\n\r\n        this.changeValue(field, newValue);\r\n    }\r\n\r\n    changeValue(field, value, notify = true) {\r\n        var source = this.state.monster;\r\n        var tokens = field.split(\".\");\r\n        tokens.forEach(token => {\r\n            if (token === tokens[tokens.length - 1]) {\r\n                source[token] = value;\r\n\r\n                if ((field === \"abilityScores.con\") || (field === \"size\") || (field === \"hitDice\")) {\r\n                    var sides = utils.hitDieType(this.state.monster.size);\r\n                    var conMod = Math.floor((this.state.monster.abilityScores.con - 10) / 2)\r\n                    var hpPerDie = ((sides + 1) / 2) + conMod;\r\n                    var hp = Math.floor(this.state.monster.hitDice * hpPerDie);\r\n                    // eslint-disable-next-line\r\n                    this.state.monster.hpMax = hp;\r\n                }  \r\n\r\n                if (notify) {\r\n                    this.setState({\r\n                        monster: this.state.monster\r\n                    });\r\n                }\r\n            } else {\r\n                source = source[token];\r\n            }\r\n        });\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n    // HTML render methods\r\n\r\n    getHelpSection(monsters) {\r\n        switch (this.state.helpSection) {\r\n            case \"speed\":\r\n                return this.getValueSection(\"speed\", \"text\", monsters);\r\n            case \"senses\":\r\n                return this.getValueSection(\"senses\", \"text\", monsters);\r\n            case \"languages\":\r\n                return this.getValueSection(\"languages\", \"text\", monsters);\r\n            case \"equipment\":\r\n                return this.getValueSection(\"equipment\", \"text\", monsters);\r\n            case \"str\":\r\n                return this.getValueSection(\"abilityScores.str\", \"number\", monsters);\r\n            case \"dex\":\r\n                return this.getValueSection(\"abilityScores.dex\", \"number\", monsters);\r\n            case \"con\":\r\n                return this.getValueSection(\"abilityScores.con\", \"number\", monsters);\r\n            case \"int\":\r\n                return this.getValueSection(\"abilityScores.int\", \"number\", monsters);\r\n            case \"wis\":\r\n                return this.getValueSection(\"abilityScores.wis\", \"number\", monsters);\r\n            case \"cha\":\r\n                return this.getValueSection(\"abilityScores.cha\", \"number\", monsters);\r\n            case \"saves\":\r\n                return this.getValueSection(\"savingThrows\", \"text\", monsters);\r\n            case \"skills\":\r\n                return this.getValueSection(\"skills\", \"text\", monsters);\r\n            case \"armor class\":\r\n                return this.getValueSection(\"ac\", \"number\", monsters);\r\n            case \"hit dice\":\r\n                return this.getValueSection(\"hitDice\", \"number\", monsters);\r\n            case \"resistances\":\r\n                return this.getValueSection(\"damage.resist\", \"text\", monsters);\r\n            case \"vulnerabilities\":\r\n                return this.getValueSection(\"damage.vulnerable\", \"text\", monsters);\r\n            case \"immunities\":\r\n                return this.getValueSection(\"damage.immune\", \"text\", monsters);\r\n            case \"conditions\":\r\n                return this.getValueSection(\"conditionImmunities\", \"text\", monsters);\r\n            case \"actions\":\r\n                return this.getActionsSection(monsters);\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    getValueSection(field, dataType, monsters) {\r\n        var values = monsters\r\n            .map(m => {\r\n                var tokens = field.split(\".\");\r\n                var source = m;\r\n                var value = null;\r\n                tokens.forEach(token => {\r\n                    if (token === tokens[tokens.length - 1]) {\r\n                        value = source[token];\r\n                    } else {\r\n                        source = source[token];\r\n                    }\r\n                });\r\n                if ((dataType === \"text\") && (value === \"\")) {\r\n                    value = null;\r\n                }\r\n                return value;\r\n            })\r\n            .filter(v => v !== null);\r\n\r\n        var distinct = [];\r\n        if (dataType === \"number\") {\r\n            var min = null, max = null;\r\n            values.forEach(v => {\r\n                if ((min === null) || (v < min)) {\r\n                    min = v;\r\n                }\r\n                if ((max === null) || (v > max)) {\r\n                    max = v;\r\n                }\r\n            });\r\n            if ((min !== null) && (max !== null)) {\r\n                for (var n = min; n <= max; ++n) {\r\n                    distinct.push({\r\n                        value: n,\r\n                        count: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        values.forEach(v => {\r\n            var current = distinct.find(d => d.value === v);\r\n            if (current) {\r\n                current.count += 1;\r\n            } else {\r\n                distinct.push({\r\n                    value: v,\r\n                    count: 1\r\n                });\r\n            }\r\n        });\r\n\r\n        switch (dataType) {\r\n            case \"number\":\r\n                utils.sortByValue(distinct);\r\n                break;\r\n            case \"text\":\r\n                utils.sortByCount(distinct);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        if (dataType === \"text\") {\r\n            var count = monsters.length - values.length;\r\n            if (count !== 0) {\r\n                distinct.push({\r\n                    value: \"\",\r\n                    count: monsters.length - values.length\r\n                });\r\n            }\r\n        }\r\n\r\n        var valueSections = distinct.map(d => {\r\n            var width = 100 * d.count / monsters.length;\r\n            return (\r\n                <div className=\"row small-up-3 medium-up-3 large-up-3 value-list\" key={distinct.indexOf(d)}>\r\n                    <div className=\"column\">\r\n                        <div className=\"text-container\">\r\n                            {d.value || \"(none specified)\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"bar-container\">\r\n                            <div className=\"bar\" style={{ width: width + \"%\" }}></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <button onClick={() => this.changeValue(field, d.value)}>use this value</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {valueSections}\r\n                <button onClick={() => this.setRandomValue(field, monsters, true)}>select random value</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getActionsSection(monsters) {\r\n        var rows = [];\r\n        rows.push(\r\n            <div className=\"row small-up-3 medium-up-3 large-up-3 value-list\" key=\"header\">\r\n                <div className=\"column\">\r\n                    <div className=\"text-container\">\r\n                        <b>type</b>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"text-container number\">\r\n                        <b>average number</b>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"text-container number\">\r\n                        <b>min - max</b>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        TRAIT_TYPES.forEach(type => {\r\n            var min = null, max = null, count = null;\r\n            monsters.forEach(m => {\r\n                var n = m.traits.filter(t => t.type === type).length;\r\n                if ((min === null) || (n < min)) {\r\n                    min = n;\r\n                }\r\n                if ((max === null) || (n > max)) {\r\n                    max = n;\r\n                }\r\n                count += n;\r\n            });\r\n            var avg = Math.round(count / monsters.length);    \r\n\r\n            rows.push(\r\n                <div className=\"row small-up-4 medium-up-4 large-up-4 value-list\" key={type}>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container disabled\" : \"text-container\"}>\r\n                            {this.getActionTypeName(type, true)}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container number disabled\" : \"text-container number\"}>\r\n                            {avg}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className={count === 0 ? \"text-container number disabled\" : \"text-container number\"}>\r\n                            {min} - {max}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <button className={count === 0 ? \"disabled\" : \"\"} onClick={() => this.addRandomTrait(type, monsters)}>add random</button>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                {rows}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getFilterCard(monsters) {\r\n        var similar = (\r\n            <div className=\"section\">\r\n                {monsters.length} similar monsters\r\n            </div>\r\n        );\r\n\r\n        var filterContent = null;\r\n        if (this.state.showFilter) {\r\n            filterContent = (\r\n                <div>\r\n                    <Checkbox\r\n                        label={\"size \" + this.state.monster.size}\r\n                        checked={this.state.filter.size}\r\n                        changeValue={value => this.toggleMatch(\"size\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={\"type \" + this.state.monster.category}\r\n                        checked={this.state.filter.type}\r\n                        changeValue={value => this.toggleMatch(\"type\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={this.state.monster.tag ? \"subtype \" + this.state.monster.tag : \"subtype\"}\r\n                        checked={this.state.filter.subtype}\r\n                        disabled={!this.state.monster.tag}\r\n                        changeValue={value => this.toggleMatch(\"subtype\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={this.state.monster.alignment ? \"alignment \" + this.state.monster.alignment : \"alignment\"}\r\n                        checked={this.state.filter.alignment}\r\n                        disabled={!this.state.monster.alignment}\r\n                        changeValue={value => this.toggleMatch(\"alignment\")}\r\n                    />\r\n                    <Checkbox\r\n                        label={\"challenge rating \" + utils.challenge(this.state.monster.challenge)}\r\n                        checked={this.state.filter.challenge}\r\n                        changeValue={value => this.toggleMatch(\"challenge\")}\r\n                    />\r\n                    <div className=\"divider\"></div>\r\n                    <button className={monsters.length < 2 ? \"disabled\" : \"\"} onClick={() => this.geneSplice(monsters)}>build random monster</button>\r\n                    <div className=\"divider\"></div>\r\n                    {similar}\r\n                </div>\r\n            );\r\n        } else {\r\n            filterContent = (\r\n                <div>\r\n                    {similar}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"section\">\r\n                <div className=\"card\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">similar monsters</div>\r\n                        <img className={this.state.showFilter ? \"image rotate\" : \"image\"} src={arrow} alt=\"arrow\" onClick={() => this.toggleFilter()} />\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        {filterContent}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMonsterCards(monsters) {\r\n        var sorted = utils.sort(monsters);\r\n        var monsterCards = sorted.map(m => (\r\n            <div className=\"section\" key={m.id}>\r\n                <MonsterCard\r\n                    combatant={m}\r\n                    mode={\"template \" + this.state.page}\r\n                    copyTrait={trait => this.copyTrait(trait)}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return monsterCards;\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var pages = [\r\n                {\r\n                    id: 'overview',\r\n                    text: 'overview'\r\n                },\r\n                {\r\n                    id: 'abilities',\r\n                    text: 'abilities'\r\n                },\r\n                {\r\n                    id: 'combat',\r\n                    text: 'combat'\r\n                },\r\n                {\r\n                    id: 'actions',\r\n                    text: 'actions'\r\n                },\r\n            ];\r\n\r\n            var monsters = [];\r\n            if (this.props.showMonsters) {\r\n                monsters = this.getMonsters();\r\n            }\r\n\r\n            var content = null;\r\n            switch (this.state.page) {\r\n                case 'overview':\r\n                    var catOptions = CATEGORY_TYPES.map(cat => { return { id: cat, text: cat }; });\r\n                    var sizeOptions = SIZE_TYPES.map(size => { return { id: size, text: size }; });\r\n\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">name</div>\r\n                                <input type=\"text\" value={this.state.monster.name} onChange={event => this.changeValue(\"name\", event.target.value)} />\r\n                                <div className=\"subheading\">size</div>\r\n                                <Dropdown\r\n                                    options={sizeOptions}\r\n                                    selectedID={this.state.monster.size}\r\n                                    select={optionID => this.changeValue(\"size\", optionID)}\r\n                                />\r\n                                <div className=\"subheading\">type</div>\r\n                                <Dropdown\r\n                                    options={catOptions}\r\n                                    selectedID={this.state.monster.category}\r\n                                    select={optionID => this.changeValue(\"category\", optionID)}\r\n                                />\r\n                                <div className=\"subheading\">subtype</div>\r\n                                <input type=\"text\" value={this.state.monster.tag} onChange={event => this.changeValue(\"tag\", event.target.value)} />\r\n                                <div className=\"subheading\">alignment</div>\r\n                                <input type=\"text\" value={this.state.monster.alignment} onChange={event => this.changeValue(\"alignment\", event.target.value)} />\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">challenge rating</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"challenge\"\r\n                                    display={value => utils.challenge(value)}\r\n                                    nudgeValue={delta => this.nudgeValue(\"challenge\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">speed</div>\r\n                                <input type=\"text\" value={this.state.monster.speed} onChange={event => this.changeValue(\"speed\", event.target.value)} />\r\n                                <div className=\"subheading\">senses</div>\r\n                                <input type=\"text\" value={this.state.monster.senses} onChange={event => this.changeValue(\"senses\", event.target.value)} />\r\n                                <div className=\"subheading\">languages</div>\r\n                                <input type=\"text\" value={this.state.monster.languages} onChange={event => this.changeValue(\"languages\", event.target.value)} />\r\n                                <div className=\"subheading\">equipment</div>\r\n                                <input type=\"text\" value={this.state.monster.equipment} onChange={event => this.changeValue(\"equipment\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'abilities':\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">ability scores</div>\r\n                                <AbilityScorePanel\r\n                                    edit={true}\r\n                                    combatant={this.state.monster}\r\n                                    nudgeValue={(source, type, delta) => this.nudgeValue(type, delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">saving throws</div>\r\n                                <input type=\"text\" value={this.state.monster.savingThrows} onChange={event => this.changeValue(\"savingThrows\", event.target.value)} />\r\n                                <div className=\"subheading\">skills</div>\r\n                                <input type=\"text\" value={this.state.monster.skills} onChange={event => this.changeValue(\"skills\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'combat':\r\n                    content = (\r\n                        <div className=\"row\">\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">armor class</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"ac\"\r\n                                    nudgeValue={delta => this.nudgeValue(\"ac\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">hit dice</div>\r\n                                <Spin\r\n                                    source={this.state.monster}\r\n                                    name=\"hitDice\"\r\n                                    display={value => value + \"d\" + utils.hitDieType(this.state.monster.size)}\r\n                                    nudgeValue={delta => this.nudgeValue(\"hitDice\", delta)}\r\n                                />\r\n                                <div className=\"subheading\">hit points</div>\r\n                                <div className=\"hp-value\">{this.state.monster.hpMax} hp</div>\r\n                            </div>\r\n                            <div className=\"columns small-6 medium-6 large-6\">\r\n                                <div className=\"subheading\">damage resistances</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.resist} onChange={event => this.changeValue(\"damage.resist\", event.target.value)} />\r\n                                <div className=\"subheading\">damage vulnerabilities</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.vulnerable} onChange={event => this.changeValue(\"damage.vulnerable\", event.target.value)} />\r\n                                <div className=\"subheading\">damage immunities</div>\r\n                                <input type=\"text\" value={this.state.monster.damage.immune} onChange={event => this.changeValue(\"damage.immune\", event.target.value)} />\r\n                                <div className=\"subheading\">condition immunities</div>\r\n                                <input type=\"text\" value={this.state.monster.conditionImmunities} onChange={event => this.changeValue(\"conditionImmunities\", event.target.value)} />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                    break;\r\n                case 'actions':\r\n                    content = (\r\n                        <TraitsPanel\r\n                            combatant={this.state.monster}\r\n                            edit={true}\r\n                            addTrait={type => this.addTrait(type)}\r\n                            removeTrait={trait => this.removeTrait(trait)}\r\n                            changeTrait={(trait, type, value) => this.changeTrait(trait, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                default:\r\n                    // Do nothing\r\n                    break;\r\n            }\r\n\r\n            var help = null;\r\n            if (this.props.showMonsters && (monsters.length > 1)) {\r\n                var selector = null;\r\n                if (this.getHelpOptionsForPage(this.state.page).length > 1) {\r\n                    var options = this.getHelpOptionsForPage(this.state.page).map(s => {\r\n                        return {\r\n                            id: s,\r\n                            text: s\r\n                        };\r\n                    });\r\n                    selector = (\r\n                        <Selector\r\n                            tabs={false}\r\n                            options={options}\r\n                            selectedID={this.state.helpSection}\r\n                            select={optionID => this.setHelpSection(optionID)}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                help = (\r\n                    <div className=\"monster-help\">\r\n                        <div className=\"subheading\">information from similar monsters</div>\r\n                        {selector}\r\n                        {this.getHelpSection(monsters)}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            var monsterList = null;\r\n            if (this.props.showMonsters) {\r\n                monsterList = (\r\n                    <div className=\"columns small-4 medium-4 large-4 scrollable\">\r\n                        {this.getFilterCard(monsters)}\r\n                        {this.getMonsterCards(monsters)}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"row\" style={{ height: \"100%\", margin: \"0 -15px\" }}>\r\n                    <div className={this.props.showMonsters ? \"columns small-8 medium-8 large-8 scrollable\" : \"columns small-12 medium-12 large-12 scrollable\"} style={{ transition: \"none\" }}>\r\n                        <div className=\"section\">\r\n                            <Selector\r\n                                tabs={true}\r\n                                options={pages}\r\n                                selectedID={this.state.page}\r\n                                select={optionID => this.setPage(optionID)}\r\n                            />\r\n                            {content}\r\n                            {help}\r\n                        </div>\r\n                    </div>\r\n                    {monsterList}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { TERRAIN_TYPES } from '../../models/models';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport Radial from '../controls/radial';\r\n\r\nexport default class MapTileCard extends React.Component {\r\n    render() {\r\n        try {\r\n            var terrainOptions = TERRAIN_TYPES.map(function (t) {\r\n                return { id: t, text: t };\r\n            });\r\n\r\n            return (\r\n                <div className=\"card map-tile\">\r\n                    <div className=\"heading\">\r\n                        <div className=\"title\">map tile</div>\r\n                    </div>\r\n                    <div className=\"card-content\">\r\n                        <div className=\"subheading\">size</div>\r\n                        <div className=\"section\">{this.props.tile.width} sq x {this.props.tile.height} sq</div>\r\n                        <div className=\"section\">{this.props.tile.width * 5} ft x {this.props.tile.height * 5} ft</div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">terrain</div>\r\n                        <Dropdown\r\n                            options={terrainOptions}\r\n                            placeholder=\"select terrain\"\r\n                            selectedID={this.props.tile.terrain}\r\n                            select={optionID => this.props.changeValue(this.props.tile, \"terrain\", optionID)}\r\n                        />\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">move</div>\r\n                        <div className=\"section centered\">\r\n                            <Radial direction=\"out\" click={dir => this.props.moveMapItem(this.props.tile, dir)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"subheading\">resize</div>\r\n                        <div className=\"section centered\">\r\n                            <Radial direction=\"both\" click={(dir, dir2) => this.props.resizeMapItem(this.props.tile, dir, dir2)} />\r\n                        </div>\r\n                        <div className=\"divider\"></div>\r\n                        <div className=\"section\">\r\n                            <button onClick={() => this.props.cloneMapItem(this.props.tile)}>clone tile</button>\r\n                            <button onClick={() => this.props.removeMapItem(this.props.tile)}>remove tile</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport * as factory from '../../models/factory';\r\n\r\nimport MapTileCard from '../cards/map-tile-card';\r\nimport MapPanel from '../panels/map-panel';\r\n\r\nexport default class MapEditorModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            map: props.map,\r\n            selectedTileID: null\r\n        };\r\n    }\r\n\r\n    setSelectedTileID(id) {\r\n        this.setState({\r\n            selectedTileID: id\r\n        });\r\n    }\r\n\r\n    addMapTile(x, y) {\r\n        var tile = factory.createMapItem();\r\n        tile.x = x;\r\n        tile.y = y;\r\n        tile.terrain = \"flagstone\";\r\n        this.state.map.items.push(tile);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: tile.id\r\n        });\r\n    }\r\n\r\n    moveMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                item.y -= 1;\r\n                break;\r\n            case \"E\":\r\n                item.x += 1;\r\n                break;\r\n            case \"S\":\r\n                item.y += 1;\r\n                break;\r\n            case \"W\":\r\n                item.x -= 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    bigMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                item.y -= 1;\r\n                item.height += 1;\r\n                break;\r\n            case \"E\":\r\n                item.width += 1;\r\n                break;\r\n            case \"S\":\r\n                item.height += 1;\r\n                break;\r\n            case \"W\":\r\n                item.x -= 1;\r\n                item.width += 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    smallMapItem(item, dir) {\r\n        switch (dir) {\r\n            case \"N\":\r\n                if (item.height > 1) {\r\n                    item.y += 1;\r\n                    item.height -= 1;\r\n                }\r\n                break;\r\n            case \"E\":\r\n                if (item.width > 1) {\r\n                    item.width -= 1;\r\n                }\r\n                break;\r\n            case \"S\":\r\n                if (item.height > 1) {\r\n                    item.height -= 1;\r\n                }\r\n                break;\r\n            case \"W\":\r\n                if (item.width > 1) {\r\n                    item.x += 1;\r\n                    item.width -= 1;\r\n                }\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    resizeMapItem(item, dir, dir2) {\r\n        switch (dir2) {\r\n            case \"in\":\r\n                this.smallMapItem(item, dir);\r\n                break;\r\n            case \"out\":\r\n                this.bigMapItem(item, dir);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n    }\r\n\r\n    cloneMapItem(item) {\r\n        var copy = JSON.parse(JSON.stringify(item));\r\n        copy.id = utils.guid();\r\n        copy.x += 1;\r\n        copy.y += 1;\r\n        this.state.map.items.push(copy);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: copy.id\r\n        });\r\n    }\r\n\r\n    removeMapItem(item) {\r\n        var index = this.state.map.items.indexOf(item);\r\n        this.state.map.items.splice(index, 1);\r\n\r\n        this.setState({\r\n            map: this.state.map,\r\n            selectedTileID: null\r\n        });\r\n    }\r\n\r\n    changeValue(source, field, value) {\r\n        source[field] = value;\r\n        \r\n        this.setState({\r\n            map: this.state.map\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var tools = null;\r\n            if (this.state.selectedTileID) {\r\n                var item = this.state.map.items.find(i => i.id === this.state.selectedTileID);\r\n                tools = (\r\n                    <div className=\"tools\">\r\n                        <MapTileCard\r\n                            tile={item}\r\n                            moveMapItem={(item, dir) => this.moveMapItem(item, dir)}\r\n                            resizeMapItem={(item, dir, dir2) => this.resizeMapItem(item, dir, dir2)}\r\n                            cloneMapItem={item => this.cloneMapItem(item)}\r\n                            removeMapItem={item => this.removeMapItem(item)}\r\n                            changeValue={(source, field, value) => this.changeValue(source, field, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else {\r\n                tools = (\r\n                    <div className=\"tools\">\r\n                        <p>to add a new tile to the map, double-click on an empty grid square</p>\r\n                        <p>to edit an existing tile, click on it once to select it</p>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"map-editor\">\r\n                    {tools}\r\n                    <MapPanel\r\n                        map={this.state.map}\r\n                        mode=\"edit\"\r\n                        selectedItemID={this.state.selectedTileID}\r\n                        setSelectedItemID={id => this.setSelectedTileID(id)}\r\n                        addMapTile={(x, y) => this.addMapTile(x, y)}\r\n                    />\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\n\r\nimport Dropdown from '../controls/dropdown';\r\nimport Selector from '../controls/selector';\r\nimport MapPanel from '../panels/map-panel';\r\nimport DifficultyChartPanel from '../panels/difficulty-chart-panel';\r\n\r\nexport default class CombatStartModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            combat: props.combat\r\n        }\r\n    }\r\n\r\n    setParty(partyID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.partyID = partyID;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setEncounter(encounterID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.encounterID = encounterID;\r\n        var enc = this.props.encounters.find(enc => enc.id === encounterID);\r\n        // eslint-disable-next-line\r\n        this.state.combat.monsterNames = utils.getMonsterNames(enc);\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setFolioID(id) {\r\n        if (id) {\r\n            var folio = this.props.mapFolios.find(f => f.id === id);\r\n            // eslint-disable-next-line\r\n            this.state.combat.folioID = folio.id;\r\n            // eslint-disable-next-line\r\n            this.state.combat.mapID = folio.maps.length === 1 ? folio.maps[0].id : null;\r\n        } else {\r\n            // eslint-disable-next-line\r\n            this.state.combat.folioID = null;\r\n            // eslint-disable-next-line\r\n            this.state.combat.mapID = null;    \r\n        }\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    setMapID(id) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.mapID = id;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    setWave(waveID) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.waveID = waveID;\r\n        var enc = this.props.encounters.find(enc => enc.id === this.state.combat.encounterID);\r\n        var wave = enc.waves.find(w => w.id === waveID);\r\n        // eslint-disable-next-line\r\n        this.state.combat.monsterNames = utils.getMonsterNames(wave);\r\n        this.setState({\r\n            combat: this.state.combat\r\n        }, () => this.props.notify());\r\n    }\r\n\r\n    setEncounterInitMode(mode) {\r\n        // eslint-disable-next-line\r\n        this.state.combat.encounterInitMode = mode;\r\n        this.setState({\r\n            combat: this.state.combat\r\n        });\r\n    }\r\n\r\n    changeName(slotID, index, name) {\r\n        var slot = this.state.combat.monsterNames.find(s => s.id === slotID);\r\n        if (slot) {\r\n            slot.names[index] = name;\r\n            this.setState({\r\n                combat: this.state.combat\r\n            });\r\n        }\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    getPartySection() {\r\n        if (this.props.parties.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not defined any parties</div>\r\n            );\r\n        }\r\n\r\n        var partyOptions = this.props.parties.map(party => {\r\n            return {\r\n                id: party.id,\r\n                text: party.name || \"unnamed party\"\r\n            };\r\n        });\r\n\r\n        var partyContent = null;\r\n        if (this.state.combat.partyID) {\r\n            var selectedParty = this.props.parties.find(p => p.id === this.state.combat.partyID);\r\n            var pcs = selectedParty.pcs.filter(pc => pc.active);\r\n\r\n            var pcSections = pcs.map(pc => \r\n                <li key={pc.id}>\r\n                    {pc.name || \"unnamed pc\"} (level {pc.level})\r\n                </li>\r\n            );\r\n\r\n            if (pcSections.length === 0) {\r\n                pcSections.push(\r\n                    <li key={\"empty\"}>no pcs</li>\r\n                );\r\n            }\r\n    \r\n            partyContent = (\r\n                <div>\r\n                    <div className=\"subheading\">pcs</div>\r\n                    <ul>{pcSections}</ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">party</div>\r\n                <Dropdown\r\n                    options={partyOptions}\r\n                    placeholder=\"select party...\"\r\n                    selectedID={this.state.combat.partyID}\r\n                    select={optionID => this.setParty(optionID)}\r\n                />\r\n                {partyContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getEncounterSection() {\r\n        if (this.props.encounters.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not built any encounters</div>\r\n            );\r\n        }\r\n\r\n        var encounterOptions = this.props.encounters.map(encounter => {\r\n            return {\r\n                id: encounter.id,\r\n                text: encounter.name || \"unnamed encounter\"\r\n            }\r\n        });\r\n\r\n        var encounterContent = null;\r\n        if (this.state.combat.encounterID) {\r\n            var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n            var monsterSections = selectedEncounter.slots.map(slot => {\r\n                var name = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    name += \" (x\" + slot.count + \")\";\r\n                }\r\n                return (\r\n                    <li key={slot.id}>{name}</li>\r\n                );\r\n            });\r\n\r\n            if (monsterSections.length === 0) {\r\n                monsterSections.push(\r\n                    <li key={\"empty\"}>no monsters</li>\r\n                );\r\n            }\r\n\r\n            var waves = selectedEncounter.waves.map(wave => {\r\n                if (wave.slots.length === 0) {\r\n                    return null;\r\n                }\r\n\r\n                var waveMonsters = wave.slots.map(slot => {\r\n                    var name = slot.monsterName || \"unnamed monster\";\r\n                    if (slot.count > 1) {\r\n                        name += \" x\" + slot.count;\r\n                    }\r\n                    return (\r\n                        <li key={slot.id}>{name}</li>\r\n                    );\r\n                });\r\n    \r\n                return (\r\n                    <div key={wave.id}>\r\n                        <div className=\"subheading\">{wave.name || \"unnamed wave\"}</div>\r\n                        <ul>{waveMonsters}</ul>\r\n                    </div>\r\n                );\r\n            });\r\n    \r\n            encounterContent = (\r\n                <div>\r\n                    <div className=\"subheading\">monsters</div>\r\n                    <ul>{monsterSections}</ul>\r\n                    {waves}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">encounter</div>\r\n                <Dropdown\r\n                    options={encounterOptions}\r\n                    placeholder=\"select encounter...\"\r\n                    selectedID={this.state.combat.encounterID}\r\n                    select={optionID => this.setEncounter(optionID)}\r\n                />\r\n                {encounterContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMapSection() {\r\n        var folios = this.props.mapFolios.filter(folio => folio.maps.length > 0);\r\n        if (folios.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        var folioOptions = folios.map(folio => {\r\n            return {\r\n                id: folio.id,\r\n                text: folio.name || \"unnamed folio\"\r\n            };\r\n        });\r\n        folioOptions = [{id: null, text: \"none\"}].concat(folioOptions);\r\n\r\n        var selectMapSection = null;\r\n        var thumbnailSection = null;\r\n\r\n        if (this.state.combat.folioID) {\r\n            var folio = this.props.mapFolios.find(f => f.id === this.state.combat.folioID);\r\n            var mapOptions = folio.maps.map(m => {\r\n                return {\r\n                    id: m.id,\r\n                    text: m.name || \"unnamed map\"\r\n                };\r\n            });            \r\n\r\n            if (mapOptions.length !== 1) {\r\n                selectMapSection = (\r\n                    <Selector\r\n                        options={mapOptions}\r\n                        placeholder=\"select map...\"\r\n                        selectedID={this.state.combatmapID}\r\n                        select={optionID => this.setMapID(optionID)}\r\n                    />\r\n                );\r\n            }\r\n\r\n            if (this.state.combat.mapID) {\r\n                var map = folio.maps.find(m => m.id === this.state.combat.mapID);\r\n                thumbnailSection = (\r\n                    <MapPanel\r\n                        map={map}\r\n                        mode=\"thumbnail\"\r\n                    />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">map</div>\r\n                <Dropdown\r\n                    options={folioOptions}\r\n                    placeholder=\"select map folio...\"\r\n                    selectedID={this.state.combat.folioID}\r\n                    select={optionID => this.setFolioID(optionID)}\r\n                />\r\n                {selectMapSection}\r\n                {thumbnailSection}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getWaveSection() {\r\n        if (this.state.combat.encounterID === null) {\r\n            return (\r\n                <div className=\"section\">you have not selected an encounter</div>\r\n            );\r\n        }\r\n\r\n        var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n        if (selectedEncounter.waves.length === 0) {\r\n            return (\r\n                <div className=\"section\">you have not defined any waves</div>\r\n            );\r\n        }\r\n\r\n        var waveOptions = selectedEncounter.waves.map(wave => {\r\n            return {\r\n                id: wave.id,\r\n                text: wave.name || \"unnamed wave\"\r\n            };\r\n        });\r\n\r\n        var waveContent = null;\r\n        if (this.state.combat.waveID) {\r\n            var selectedWave = selectedEncounter.waves.find(w => w.id === this.state.combat.waveID);\r\n\r\n            var monsterSections = selectedWave.slots.map(slot => {\r\n                var name = slot.monsterName || \"unnamed monster\";\r\n                if (slot.count > 1) {\r\n                    name += \" (x\" + slot.count + \")\";\r\n                }\r\n                return (\r\n                    <li key={slot.id}>{name}</li>\r\n                );\r\n            });\r\n\r\n            if (monsterSections.length === 0) {\r\n                monsterSections.push(\r\n                    <li key={\"empty\"}>no monsters</li>\r\n                );\r\n            }\r\n    \r\n            waveContent = (\r\n                <div>\r\n                    <div className=\"subheading\">monsters</div>\r\n                    <ul>{monsterSections}</ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">wave</div>\r\n                <Dropdown\r\n                    options={waveOptions}\r\n                    placeholder=\"select wave...\"\r\n                    selectedID={this.state.combat.waveID}\r\n                    select={optionID => this.setWave(optionID)}\r\n                />\r\n                {waveContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDifficultySection() {\r\n        if (!this.state.combat.partyID || !this.state.combat.encounterID) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">encounter difficulty</div>\r\n                    <div className=\"section\">select a party and an encounter on the left to see difficulty information.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">encounter difficulty</div>\r\n                <DifficultyChartPanel\r\n                    partyID={this.state.combat.partyID}\r\n                    encounterID={this.state.combat.encounterID}\r\n                    parties={this.props.parties}\r\n                    encounters={this.props.encounters}\r\n                    getMonster={(monsterName, monsterGroupName) => this.props.getMonster(monsterName, monsterGroupName)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getMonsterSection() {\r\n        if (this.state.combat.encounterID === null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">monsters</div>\r\n                    <div className=\"section\">select an encounter to see monster options here.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!this.props.parties && this.state.combat.waveID === null) {\r\n            return (\r\n                <div>\r\n                    <div className=\"heading\">monsters</div>\r\n                    <div className=\"section\">select a wave to see monster options here.</div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        var selectedEncounter = this.props.encounters.find(e => e.id === this.state.combat.encounterID);\r\n        if (this.state.combat.waveID) {\r\n            selectedEncounter = selectedEncounter.waves.find(w => w.id === this.state.combat.waveID);\r\n        }\r\n\r\n        if (selectedEncounter.slots.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        var initOptions = [\r\n            {\r\n                id: \"manual\",\r\n                text: \"enter manually\"\r\n            },\r\n            {\r\n                id: \"individual\",\r\n                text: \"roll individually\"\r\n            },\r\n            {\r\n                id: \"group\",\r\n                text: \"roll in groups\"\r\n            }\r\n        ];\r\n\r\n        var names = this.state.combat.monsterNames.map(slotNames => {\r\n            var slot = selectedEncounter.slots.find(s => s.id === slotNames.id);\r\n            var inputs = [];\r\n            for (var n = 0; n !== slotNames.names.length; ++n) {\r\n                inputs.push(\r\n                    <div key={n}>\r\n                        <MonsterName\r\n                            value={slotNames.names[n]}\r\n                            slotID={slot.id}\r\n                            index={n}\r\n                            changeName={(slotID, index, value) => this.changeName(slotID, index, value)}\r\n                        />\r\n                    </div>\r\n                );\r\n            }\r\n            return (\r\n                <div key={slotNames.id} className=\"name-row\">\r\n                    <div className=\"name-label\">\r\n                        {slot.monsterName}\r\n                    </div>\r\n                    <div className=\"name-inputs\">\r\n                        {inputs}\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"heading\">monsters</div>\r\n                <div className=\"subheading\">initiative</div>\r\n                <Selector\r\n                    options={initOptions}\r\n                    selectedID={this.state.combat.encounterInitMode}\r\n                    select={optionID => this.setEncounterInitMode(optionID)}\r\n                />\r\n                <div className=\"subheading\">names</div>\r\n                <div>{names}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var leftSection = null;\r\n            var rightSection = null;\r\n\r\n            if (this.props.parties) {\r\n                leftSection = (\r\n                    <div>\r\n                        {this.getPartySection()}\r\n                        {this.getEncounterSection()}\r\n                        {this.getMapSection()}\r\n                    </div>\r\n                );\r\n    \r\n                rightSection = (\r\n                    <div>\r\n                        {this.getDifficultySection()}\r\n                        {this.getMonsterSection()}\r\n                    </div>\r\n                );\r\n            } else {\r\n                leftSection = (\r\n                    <div>\r\n                        {this.getWaveSection()}\r\n                    </div>\r\n                );\r\n    \r\n                rightSection = (\r\n                    <div>\r\n                        {this.getMonsterSection()}\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"row\" style={{ height: \"100%\", margin: \"0 -15px\" }}>\r\n                    <div className=\"column small-6 medium-6 large-6 scrollable\">\r\n                        {leftSection}\r\n                    </div>\r\n                    <div className=\"column small-6 medium-6 large-6 scrollable\">\r\n                        {rightSection}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}\r\n\r\nclass MonsterName extends React.Component {\r\n    render() {\r\n        return (\r\n            <input type=\"text\" value={this.props.value} onChange={event => this.props.changeName(this.props.slotID, this.props.index, event.target.value)} />\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\n/*\r\n<RadioGroup\r\n    items={[{id, text, details, disabled}]}\r\n    selectedItemID=\"0\"\r\n    select={itemID => null}\r\n/>\r\n*/\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    render() {\r\n        try {\r\n            var content = this.props.items.map(item => {\r\n                return (\r\n                    <RadioGroupItem\r\n                        item={item}\r\n                        selected={this.props.selectedItemID === item.id}\r\n                        select={itemID => this.props.select(itemID)}\r\n                    />\r\n                );\r\n            });\r\n\r\n            return (\r\n                <div className=\"radio-group\">\r\n                    {content}\r\n                </div>\r\n            );\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass RadioGroupItem extends React.Component {\r\n    render() {\r\n        var style = \"radio-item\";\r\n        var details = null;\r\n\r\n        if (this.props.selected) {\r\n            style += \" selected\";\r\n            details = (\r\n                <div className=\"radio-item-details\">\r\n                    {this.props.item.details}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.props.item.disabled) {\r\n            style += \" disabled\";\r\n        }\r\n\r\n        return (\r\n            <div className={style} onClick={() => this.props.select(this.props.item.id)}>\r\n                <div className=\"radio-item-text\">{this.props.item.text}</div>\r\n                {details}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../../utils';\r\nimport { CONDITION_TYPES } from '../../models/models';\r\n\r\nimport Spin from '../controls/spin';\r\nimport Selector from '../controls/selector';\r\nimport Dropdown from '../controls/dropdown';\r\nimport RadioGroup from '../controls/radio-group';\r\n\r\nexport default class ConditionModal extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            condition: props.condition,\r\n        };\r\n    }\r\n\r\n    setCondition(conditionName) {\r\n        // eslint-disable-next-line\r\n        this.state.condition.name = conditionName;\r\n        // eslint-disable-next-line\r\n        this.state.condition.level = 1;\r\n        // eslint-disable-next-line\r\n        this.state.condition.text = conditionName === \"custom\" ? \"custom condition\" : null;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    setDuration(durationType) {\r\n        var duration = null;\r\n\r\n        switch (durationType) {\r\n            case \"saves\":\r\n                duration = {\r\n                    type: \"saves\",\r\n                    count: 1,\r\n                    saveType: \"str\",\r\n                    saveDC: 10,\r\n                    point: \"start\"\r\n                };\r\n                break;\r\n            case \"combatant\":\r\n                duration = {\r\n                    type: \"combatant\",\r\n                    point: \"start\",\r\n                    combatantID: null\r\n                };\r\n                break;\r\n            case \"rounds\":\r\n                duration = {\r\n                    type: \"rounds\",\r\n                    count: 1\r\n                };\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        this.state.condition.duration = duration;\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    changeValue(object, field, value) {\r\n        object[field] = value;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    nudgeValue(object, field, delta) {\r\n        var value = object[field] + delta;\r\n        if (field === \"level\") {\r\n            value = Math.max(value, 1);\r\n            value = Math.min(value, 6);\r\n        }\r\n        if (field === \"count\") {\r\n            value = Math.max(value, 1);\r\n        }\r\n        if (field === \"saveDC\") {\r\n            value = Math.max(value, 0);\r\n        }\r\n        object[field] = value;\r\n\r\n        this.setState({\r\n            condition: this.state.condition\r\n        });\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            var conditions = CONDITION_TYPES.map(condition => {\r\n                var controls = [];\r\n                var description = [];\r\n                if (condition === this.state.condition.name) {\r\n                    if (condition === \"custom\") {\r\n                        controls.push(\r\n                            <input type=\"text\" placeholder=\"custom condition\" value={this.state.condition.text} onChange={event => this.changeValue(this.state.condition, \"text\", event.target.value)} />\r\n                        );\r\n                    }\r\n                    if (condition === \"exhaustion\") {\r\n                        controls.push(\r\n                            <Spin\r\n                                source={this.props.condition}\r\n                                name=\"level\"\r\n                                label=\"exhaustion\"\r\n                                nudgeValue={delta => this.nudgeValue(this.props.condition, \"level\", delta)}\r\n                            />\r\n                        );\r\n                    }\r\n                    var text = utils.conditionText(this.state.condition);\r\n                    for (var n = 0; n !== text.length; ++n) {\r\n                        description.push(<li key={n} className=\"section\">{text[n]}</li>);\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    id: condition,\r\n                    text: condition,\r\n                    details: (\r\n                        <div key={condition}>\r\n                            {controls}\r\n                            <ul>\r\n                                {description}\r\n                            </ul>\r\n                        </div>\r\n                    ),\r\n                    disabled: this.props.combatant.conditionImmunities ? this.props.combatant.conditionImmunities.indexOf(condition) !== -1 : false\r\n                };\r\n            });\r\n\r\n            var saveOptions = [\"str\", \"dex\", \"con\", \"int\", \"wis\", \"cha\", \"death\"].map(c => { return { id: c, text: c }; });\r\n            var pointOptions = [\r\n                {\r\n                    id: \"start\",\r\n                    text: \"start of turn\"\r\n                },\r\n                {\r\n                    id: \"end\",\r\n                    text: \"end of turn\"\r\n                }\r\n            ]\r\n            var combatantOptions = this.props.combat.combatants.map(c => { return { id: c.id, text: (c.displayName || c.name || \"unnamed monster\") }; });\r\n\r\n            var durations = [\r\n                {\r\n                    id: \"none\",\r\n                    text: \"until removed (default)\",\r\n                    details: (\r\n                        <div className=\"section\">\r\n                            <div>the condition persists until it is manually removed</div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"saves\",\r\n                    text: \"until a successful save\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">number of saves required</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"count\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"count\", delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">save dc</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"saveDC\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"saveDC\", delta)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">type of save</div>\r\n                                <Selector\r\n                                    options={saveOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.saveType : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"saveType\", optionID)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">make the save at the start or end of the turn</div>\r\n                                <Selector\r\n                                    options={pointOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.point : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"point\", optionID)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"combatant\",\r\n                    text: \"until someone's next turn\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">combatant</div>\r\n                                <Dropdown\r\n                                    options={combatantOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.combatantID : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"combatantID\", optionID)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">start or end of the turn</div>\r\n                                <Selector\r\n                                    options={pointOptions}\r\n                                    selectedID={this.props.condition.duration ? this.props.condition.duration.point : null}\r\n                                    select={optionID => this.changeValue(this.props.condition.duration, \"point\", optionID)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                },\r\n                {\r\n                    id: \"rounds\",\r\n                    text: \"for a number of rounds\",\r\n                    details: (\r\n                        <div>\r\n                            <div className=\"section\">\r\n                                <div className=\"subheading\">number of rounds</div>\r\n                                <Spin\r\n                                    source={this.props.condition.duration}\r\n                                    name=\"count\"\r\n                                    nudgeValue={delta => this.nudgeValue(this.props.condition.duration, \"count\", delta)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n            ];\r\n\r\n            return (\r\n                <div className=\"condition-modal\">\r\n                    <div className=\"row\" style={{ height: \"100%\" }}>\r\n                        <div className=\"columns small-6 medium-6 large-6 scrollable\">\r\n                            <div className=\"heading\">condition</div>\r\n                            <RadioGroup\r\n                                items={conditions}\r\n                                selectedItemID={this.state.condition.name}\r\n                                select={itemID => this.setCondition(itemID)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"columns small-6 medium-6 large-6 scrollable\">\r\n                            <div className=\"heading\">duration</div>\r\n                            <RadioGroup\r\n                                items={durations}\r\n                                selectedItemID={this.state.condition.duration ? this.state.condition.duration.type : \"none\"}\r\n                                select={itemID => this.setDuration(itemID)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport cog from '../../resources/images/settings.svg';\r\n\r\nexport default class Titlebar extends React.Component {\r\n    render() {\r\n        try {\r\n            return (\r\n                <div className={this.props.blur ? \"titlebar blur\" : \"titlebar\"}>\r\n                    <div className=\"app-name\" onClick={() => this.props.openHome()}>dojo</div>\r\n                    {this.props.actions}\r\n                    <img className=\"settings-icon\" src={cog} title=\"about\" alt=\"about\" onClick={() => this.props.openAbout()} />\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        try {\r\n            var partiesStyle = this.props.view === \"parties\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var libraryStyle = this.props.view === \"library\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var encounterStyle = this.props.view === \"encounter\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var mapStyle = this.props.view === \"maps\" ? \"navigator-item selected\" : \"navigator-item\";\r\n            var combatStyle = this.props.view === \"combat\" ? \"navigator-item selected\" : \"navigator-item\";\r\n\r\n            var encountersEnabled = this.props.library.length !== 0;\r\n            var combatEnabled = (this.props.parties.length !== 0) && (this.props.encounters.length !== 0);\r\n            if (!encountersEnabled) {\r\n                encounterStyle += \" disabled\";\r\n            }\r\n            if (!combatEnabled) {\r\n                combatStyle += \" disabled\";\r\n            }\r\n\r\n            return (\r\n                <div className={this.props.blur ? \"navbar blur\" : \"navbar\"}>\r\n                    <div className={partiesStyle} onClick={() => this.props.setView(\"parties\")}>player characters</div>\r\n                    <div className={libraryStyle} onClick={() => this.props.setView(\"library\")}>monster library</div>\r\n                    <div className={encounterStyle} onClick={() => encountersEnabled ? this.props.setView(\"encounter\") : null}>encounter builder</div>\r\n                    <div className={mapStyle} onClick={() => this.props.setView(\"maps\")}>map folios</div>\r\n                    <div className={combatStyle} onClick={() => combatEnabled ? this.props.setView(\"combat\") : null}>combat manager</div>\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as utils from '../utils';\r\nimport * as factory from '../models/factory';\r\n\r\nimport HomeScreen from './screens/home-screen';\r\nimport PartiesScreen from './screens/parties-screen';\r\nimport MonsterLibraryScreen from './screens/monster-library-screen';\r\nimport EncounterBuilderScreen from './screens/encounter-builder-screen';\r\nimport MapFoliosScreen from './screens/map-folios-screen';\r\nimport CombatManagerScreen from './screens/combat-manager-screen';\r\n\r\nimport AboutModal from './modals/about-modal';\r\nimport DemographicsModal from './modals/demographics-modal';\r\nimport MonsterEditorModal from './modals/monster-editor-modal';\r\nimport MapEditorModal from './modals/map-editor-modal';\r\nimport CombatStartModal from './modals/combat-start-modal';\r\nimport ConditionModal from './modals/condition-modal';\r\n\r\nimport Checkbox from './controls/checkbox';\r\nimport Titlebar from './controls/titlebar';\r\nimport Navbar from './controls/navbar';\r\n\r\nimport close from \"../resources/images/close-black.svg\";\r\nimport monsters from '../resources/data/monsters.json';\r\n\r\nexport default class Dojo extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            view: \"home\",\r\n            options: {\r\n                showHelp: true\r\n            },\r\n            parties: [],\r\n            library: [],\r\n            encounters: [],\r\n            mapFolios: [],\r\n            combats: [],\r\n            selectedPartyID: null,\r\n            selectedMonsterGroupID: null,\r\n            selectedEncounterID: null,\r\n            selectedMapFolioID: null,\r\n            selectedCombatID: null,\r\n            modal: null\r\n        };\r\n\r\n        try {\r\n            var data = null;\r\n\r\n            try {\r\n                var json = window.localStorage.getItem('data');\r\n                data = JSON.parse(json);\r\n            } catch (ex) {\r\n                console.error(\"Could not parse JSON: \", ex);\r\n                data = null;\r\n            }\r\n\r\n            if (data !== null) {\r\n                if (!data.mapFolios) {\r\n                    data.mapFolios = [];\r\n                    data.selectedMapFolioID = null;\r\n                }\r\n\r\n                data.encounters.forEach(enc => {\r\n                    if (!enc.waves) {\r\n                        enc.waves = [];\r\n                    }\r\n                });\r\n\r\n                data.combats.forEach(c => {\r\n                    if (!c.notifications) {\r\n                        c.notifications = [];\r\n                    }\r\n                    c.combatants.forEach(c => {\r\n                        if (c.altitude === undefined) {\r\n                            c.altitude = 0;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                this.state = data;\r\n                this.state.view = \"home\";\r\n                this.state.modal = null;\r\n            }\r\n        } catch (ex) {\r\n            console.error(ex);\r\n            this.state.parties = [];\r\n            this.state.library = [];\r\n            this.state.encounters = [];\r\n            this.state.mapFolios = [];\r\n            this.state.combats = [];\r\n            this.state.selectedPartyID = null;\r\n            this.state.selectedMonsterGroupID = null;\r\n            this.state.selectedEncounterID = null;\r\n            this.state.selectedMapFolioID = null;\r\n            this.state.selectedCombatID = null;\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var json = null;\r\n        try {\r\n            json = JSON.stringify(this.state);\r\n        } catch (ex) {\r\n            console.error(\"Could not stringify data: \", ex);\r\n            json = null;\r\n        }\r\n\r\n        if (json !== null) {\r\n            window.localStorage.setItem('data', json);\r\n        }\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Party screen\r\n\r\n    addParty(name) {\r\n        var party = factory.createParty();\r\n        party.name = name;\r\n        var parties = [].concat(this.state.parties, [party]);\r\n        utils.sort(parties);\r\n        this.setState({\r\n            parties: parties,\r\n            selectedPartyID: party.id\r\n        });\r\n    }\r\n\r\n    removeParty() {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        var index = this.state.parties.indexOf(party);\r\n        this.state.parties.splice(index, 1);\r\n        this.setState({\r\n            parties: this.state.parties,\r\n            selectedPartyID: null\r\n        });\r\n    }\r\n\r\n    addPC(name) {\r\n        var pc = factory.createPC();\r\n        pc.name = name;\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        party.pcs.push(pc);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n        return pc;\r\n    }\r\n\r\n    removePC(pc) {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        var index = party.pcs.indexOf(pc);\r\n        party.pcs.splice(index, 1);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n    }\r\n\r\n    sortPCs() {\r\n        var party = this.getParty(this.state.selectedPartyID);\r\n        utils.sort(party.pcs);\r\n        this.setState({\r\n            parties: this.state.parties\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Library screen\r\n\r\n    addMonsterGroup(name) {\r\n        var group = factory.createMonsterGroup();\r\n        group.name = name;\r\n        var library = [].concat(this.state.library, [group]);\r\n        utils.sort(library);\r\n        this.setState({\r\n            library: library,\r\n            selectedMonsterGroupID: group.id\r\n        });\r\n    }\r\n\r\n    removeMonsterGroup() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var index = this.state.library.indexOf(group);\r\n        this.state.library.splice(index, 1);\r\n        this.setState({\r\n            library: this.state.library,\r\n            selectedMonsterGroupID: null\r\n        });\r\n    }\r\n\r\n    addMonster(name) {\r\n        var monster = factory.createMonster();\r\n        monster.name = name;\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        group.monsters.push(monster);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    removeMonster(monster) {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var index = group.monsters.indexOf(monster);\r\n        group.monsters.splice(index, 1);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    sortMonsters() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        utils.sort(group.monsters);\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    moveToGroup(monster, groupID) {\r\n        var sourceGroup = this.findMonster(monster);\r\n        var index = sourceGroup.monsters.indexOf(monster);\r\n\r\n        sourceGroup.monsters.splice(index, 1);\r\n        var group = this.getMonsterGroup(groupID);\r\n        group.monsters.push(monster);\r\n        utils.sort(group.monsters);\r\n\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    editMonster(monster) {\r\n        var copy = JSON.parse(JSON.stringify(monster));\r\n        this.setState({\r\n            modal: {\r\n                type: \"monster\",\r\n                monster: copy,\r\n                showMonsters: false\r\n            }\r\n        });\r\n    }\r\n\r\n    saveMonster() {\r\n        var group = this.getMonsterGroup(this.state.selectedMonsterGroupID);\r\n        var original = group.monsters.find(m => m.id === this.state.modal.monster.id);\r\n        var index = group.monsters.indexOf(original);\r\n        group.monsters[index] = this.state.modal.monster;\r\n        this.setState({\r\n            library: this.state.library,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    toggleShowSimilarMonsters() {\r\n        // eslint-disable-next-line\r\n        this.state.modal.showMonsters = !this.state.modal.showMonsters;\r\n        this.setState({\r\n            modal: this.state.modal\r\n        });\r\n    }\r\n\r\n    openDemographics() {\r\n        this.setState({\r\n            modal: {\r\n                type: \"demographics\"\r\n            }\r\n        });\r\n    }\r\n\r\n    cloneMonster(monster, name) {\r\n        var group = this.findMonster(monster);\r\n\r\n        var clone = {\r\n            id: utils.guid(),\r\n            type: \"monster\",\r\n            name: name || monster.name + \" copy\",\r\n            size: monster.size,\r\n            category: monster.category,\r\n            tag: monster.tag,\r\n            alignment: monster.alignment,\r\n            challenge: monster.challenge,\r\n            abilityScores: {\r\n                str: monster.abilityScores.str,\r\n                dex: monster.abilityScores.dex,\r\n                con: monster.abilityScores.con,\r\n                int: monster.abilityScores.int,\r\n                wis: monster.abilityScores.wis,\r\n                cha: monster.abilityScores.cha\r\n            },\r\n            ac: monster.ac,\r\n            hpMax: monster.hpMax,\r\n            hpTemp: monster.hpTemp,\r\n            hitDice: monster.hitDice,\r\n            damage: {\r\n                resist: monster.damage.resist,\r\n                vulnerable: monster.damage.vulnerable,\r\n                immune: monster.damage.immune\r\n            },\r\n            savingThrows: monster.savingThrows,\r\n            speed: monster.speed,\r\n            skills: monster.skills,\r\n            senses: monster.senses,\r\n            languages: monster.languages,\r\n            equipment: monster.equipment,\r\n            traits: monster.traits.map(trait => {\r\n                return {\r\n                    id: utils.guid(),\r\n                    name: trait.name,\r\n                    usage: trait.usage,\r\n                    type: trait.type,\r\n                    text: trait.text\r\n                };\r\n            }),\r\n            conditionImmunities: monster.conditionImmunities\r\n        };\r\n\r\n        group.monsters.push(clone);\r\n        utils.sort(group.monsters);\r\n\r\n        this.setState({\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    addOpenGameContent() {\r\n        monsters.forEach(data => {\r\n            try {\r\n                if (data.name) {\r\n                    var monster = factory.createMonster();\r\n\r\n                    monster.type = \"monster\";\r\n                    monster.name = data.name;\r\n                    monster.size = data.size.toLowerCase();\r\n                    monster.category = data.type;\r\n                    monster.tag = data.subtype;\r\n                    monster.alignment = data.alignment;\r\n                    monster.challenge = utils.parseChallenge(data.challenge_rating);\r\n                    monster.ac = data.armor_class;\r\n                    monster.hp = data.hit_points;\r\n                    monster.hpMax = data.hit_points;\r\n                    monster.speed = data.speed;\r\n                    monster.senses = data.senses;\r\n                    monster.languages = data.languages;\r\n\r\n                    var index = data.hit_dice.indexOf(\"d\");\r\n                    monster.hitDice = parseInt(data.hit_dice.substring(0, index));\r\n\r\n                    monster.abilityScores.str = data.strength;\r\n                    monster.abilityScores.dex = data.dexterity;\r\n                    monster.abilityScores.con = data.constitution;\r\n                    monster.abilityScores.int = data.intelligence;\r\n                    monster.abilityScores.wis = data.wisdom;\r\n                    monster.abilityScores.cha = data.charisma;\r\n\r\n                    monster.damage.resist = data.damage_resistances;\r\n                    monster.damage.vulnerable = data.damage_vulnerabilities;\r\n                    monster.damage.immune = data.damage_immunities;\r\n                    monster.conditionImmunities = data.condition_immunities;\r\n\r\n                    var saves = [\r\n                        {\r\n                            field: \"strength_save\",\r\n                            text: \"Strength\"\r\n                        },\r\n                        {\r\n                            field: \"dexterity_save\",\r\n                            text: \"Dexterity\"\r\n                        },\r\n                        {\r\n                            field: \"constitution_save\",\r\n                            text: \"Constitution\"\r\n                        },\r\n                        {\r\n                            field: \"intelligence_save\",\r\n                            text: \"Intelligence\"\r\n                        },\r\n                        {\r\n                            field: \"wisdom_save\",\r\n                            text: \"Wisdom\"\r\n                        },\r\n                        {\r\n                            field: \"charisma_save\",\r\n                            text: \"Charisma\"\r\n                        }\r\n                    ];\r\n                    saves.forEach(save => {\r\n                        if (data[save.field]) {\r\n                            var str = save.text + \" \" + data[save.field];\r\n                            monster.savingThrows += monster.savingThrows === \"\" ? str : \", \" + str;\r\n                        }\r\n                    });\r\n\r\n                    var skills = [\r\n                        {\r\n                            field: \"acrobatics\",\r\n                            text: \"Acrobatics\"\r\n                        },\r\n                        {\r\n                            field: \"animal_handling\",\r\n                            text: \"Animal handling\"\r\n                        },\r\n                        {\r\n                            field: \"arcana\",\r\n                            text: \"Arcana\"\r\n                        },\r\n                        {\r\n                            field: \"athletics\",\r\n                            text: \"Athletics\"\r\n                        },\r\n                        {\r\n                            field: \"deception\",\r\n                            text: \"Deception\"\r\n                        },\r\n                        {\r\n                            field: \"history\",\r\n                            text: \"History\"\r\n                        },\r\n                        {\r\n                            field: \"insight\",\r\n                            text: \"Insight\"\r\n                        },\r\n                        {\r\n                            field: \"intimidation\",\r\n                            text: \"Intimidation\"\r\n                        },\r\n                        {\r\n                            field: \"investigation\",\r\n                            text: \"Investigation\"\r\n                        },\r\n                        {\r\n                            field: \"medicine\",\r\n                            text: \"Medicine\"\r\n                        },\r\n                        {\r\n                            field: \"nature\",\r\n                            text: \"Nature\"\r\n                        },\r\n                        {\r\n                            field: \"perception\",\r\n                            text: \"Perception\"\r\n                        },\r\n                        {\r\n                            field: \"performance\",\r\n                            text: \"Performance\"\r\n                        },\r\n                        {\r\n                            field: \"persuasion\",\r\n                            text: \"Persuasion\"\r\n                        },\r\n                        {\r\n                            field: \"religion\",\r\n                            text: \"Religion\"\r\n                        },\r\n                        {\r\n                            field: \"sleight_of_hand\",\r\n                            text: \"Sleight of hand\"\r\n                        },\r\n                        {\r\n                            field: \"stealth\",\r\n                            text: \"Stealth\"\r\n                        },\r\n                        {\r\n                            field: \"survival\",\r\n                            text: \"Survival\"\r\n                        }\r\n                    ];\r\n                    skills.forEach(skill => {\r\n                        if (data[skill.field]) {\r\n                            var str = skill.text + \" \" + data[skill.field];\r\n                            monster.skills += monster.skills === \"\" ? str : \", \" + str;\r\n                        }\r\n                    });\r\n\r\n                    if (data.special_abilities) {\r\n                        data.special_abilities.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"trait\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n                    if (data.actions) {\r\n                        data.actions.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"action\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n                    if (data.legendary_actions) {\r\n                        data.legendary_actions.forEach(rawTrait => {\r\n                            var trait = this.buildTrait(rawTrait, \"legendary\");\r\n                            monster.traits.push(trait);\r\n                        });\r\n                    }\r\n\r\n                    var groupName = monster.tag;\r\n                    if (groupName === \"\") {\r\n                        groupName = monster.category;\r\n                    }\r\n                    if (groupName.indexOf(\"swarm\") === 0) {\r\n                        groupName = \"swarm\";\r\n                    }\r\n                    if (groupName === \"any race\") {\r\n                        groupName = \"npc\";\r\n                    }\r\n\r\n                    var group = this.getMonsterGroupByName(groupName);\r\n                    if (!group) {\r\n                        group = {\r\n                            id: utils.guid(),\r\n                            name: groupName,\r\n                            monsters: []\r\n                        };\r\n                        this.state.library.push(group);\r\n                    }\r\n                    group.monsters.push(monster);\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n\r\n        utils.sort(this.state.library);\r\n\r\n        this.setState({\r\n            view: \"library\",\r\n            library: this.state.library\r\n        });\r\n    }\r\n\r\n    buildTrait(rawTrait, type) {\r\n        var name = \"\";\r\n        var usage = \"\";\r\n\r\n        var openBracket = rawTrait.name.indexOf(\"(\");\r\n        if (openBracket === -1) {\r\n            name = rawTrait.name;\r\n        } else {\r\n            var closeBracket = rawTrait.name.indexOf(\")\");\r\n            name = rawTrait.name.substring(0, openBracket - 1);\r\n            usage = rawTrait.name.substring(openBracket + 1, closeBracket);\r\n        }\r\n\r\n        return {\r\n            id: utils.guid(),\r\n            type: type,\r\n            name: name,\r\n            usage: usage,\r\n            text: rawTrait.desc\r\n        };\r\n    };\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Encounter screen\r\n\r\n    addEncounter(name) {\r\n        var encounter = factory.createEncounter();\r\n        encounter.name = name;\r\n        var encounters = [].concat(this.state.encounters, [encounter]);\r\n        utils.sort(encounters);\r\n\r\n        this.setState({\r\n            encounters: encounters,\r\n            selectedEncounterID: encounter.id\r\n        });\r\n    }\r\n\r\n    removeEncounter() {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        var index = this.state.encounters.indexOf(encounter);\r\n        this.state.encounters.splice(index, 1);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters,\r\n            selectedEncounterID: null\r\n        });\r\n    }\r\n\r\n    addEncounterSlot(monster, waveID) {\r\n        var group = this.findMonster(monster);\r\n\r\n        var slot = factory.createEncounterSlot();\r\n        slot.monsterGroupName = group.name;\r\n        slot.monsterName = monster.name;\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        if (waveID !== null) {\r\n            var wave = encounter.waves.find(w => w.id === waveID);\r\n            wave.slots.push(slot);\r\n            this.sortEncounterSlots(wave);\r\n        } else {\r\n            encounter.slots.push(slot);\r\n            this.sortEncounterSlots(encounter);\r\n        }\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n\r\n        return slot;\r\n    }\r\n\r\n    removeEncounterSlot(slot, waveID) {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        if (waveID) {\r\n            var wave = encounter.waves.find(w => w.id === waveID);\r\n            var index = wave.slots.indexOf(slot);\r\n            wave.slots.splice(index, 1);\r\n        } else {\r\n            var n = encounter.slots.indexOf(slot);\r\n            encounter.slots.splice(n, 1);\r\n        }\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    sortEncounterSlots(slotContaimer) {\r\n        slotContaimer.slots.sort((a, b) => {\r\n            var aName = a.monsterName.toLowerCase();\r\n            var bName = b.monsterName.toLowerCase();\r\n            if (aName < bName) return -1;\r\n            if (aName > bName) return 1;\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    addWaveToEncounter() {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n\r\n        var wave = factory.createEncounterWave();\r\n        wave.name = \"wave \" + (encounter.waves.length + 2);\r\n        encounter.waves.push(wave);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    removeWave(wave) {\r\n        var encounter = this.getEncounter(this.state.selectedEncounterID);\r\n        var index = encounter.waves.indexOf(wave);\r\n        encounter.waves.splice(index, 1);\r\n\r\n        this.setState({\r\n            encounters: this.state.encounters\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Map screen\r\n\r\n    addMapFolio(name) {\r\n        var folio = factory.createMapFolio();\r\n        folio.name = name;\r\n        var folios = [].concat(this.state.mapFolios, [folio]);\r\n        utils.sort(folios);\r\n\r\n        this.setState({\r\n            mapFolios: folios,\r\n            selectedMapFolioID: folio.id\r\n        });\r\n    }\r\n\r\n    removeMapFolio() {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var index = this.state.mapFolios.indexOf(folio);\r\n        this.state.mapFolios.splice(index, 1);\r\n\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios,\r\n            selectedMapFolioID: null\r\n        });\r\n    }\r\n\r\n    addMap(name) {\r\n        var map = factory.createMap();\r\n        map.name = name;\r\n\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        folio.maps.push(map);\r\n\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios\r\n        });\r\n    }\r\n\r\n    editMap(map) {\r\n        var copy = JSON.parse(JSON.stringify(map));\r\n        this.setState({\r\n            modal: {\r\n                type: \"map\",\r\n                map: copy\r\n            }\r\n        });\r\n    }\r\n\r\n    saveMap() {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var original = folio.maps.find(m => m.id === this.state.modal.map.id);\r\n        var index = folio.maps.indexOf(original);\r\n        folio.maps[index] = this.state.modal.map;\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeMap(map) {\r\n        var folio = this.getMapFolio(this.state.selectedMapFolioID);\r\n        var index = folio.maps.indexOf(map);\r\n        folio.maps.splice(index, 1);\r\n        this.setState({\r\n            mapFolios: this.state.mapFolios\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n    // Combat screen\r\n\r\n    createCombat() {\r\n        var party = this.state.parties.length === 1 ? this.state.parties[0] : null;\r\n        var encounter = this.state.encounters.length === 1 ? this.state.encounters[0] : null;\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"combat-start\",\r\n                combat: {\r\n                    partyID: party ? party.id : null,\r\n                    encounterID: encounter ? encounter.id : null,\r\n                    folioID: null,\r\n                    mapID: null,\r\n                    encounterInitMode: \"group\",\r\n                    monsterNames: utils.getMonsterNames(encounter),\r\n                    map: null\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    startCombat() {\r\n        var party = this.getParty(this.state.modal.combat.partyID);\r\n        var partyName = party.name || \"unnamed party\";\r\n\r\n        var encounter = this.getEncounter(this.state.modal.combat.encounterID);\r\n        var encounterName = encounter.name || \"unnamed encounter\";\r\n\r\n        var combat = factory.createCombat();\r\n        combat.name = partyName + \" vs \" + encounterName;\r\n        combat.encounterID = encounter.id;\r\n\r\n        // Add a copy of each PC to the encounter\r\n        party.pcs.filter(pc => pc.active).forEach(pc => {\r\n            var combatant = JSON.parse(JSON.stringify(pc));\r\n\r\n            combatant.current = false;\r\n            combatant.pending = true;\r\n            combatant.active = false;\r\n            combatant.defeated = false;\r\n\r\n            combat.combatants.push(combatant);\r\n        });\r\n\r\n        encounter.slots.forEach(slot => {\r\n            var group = this.getMonsterGroupByName(slot.monsterGroupName);\r\n            var monster = this.getMonster(slot.monsterName, group);\r\n\r\n            if (monster) {\r\n                var init = parseInt(utils.modifier(monster.abilityScores.dex));\r\n                var groupRoll = utils.dieRoll();\r\n\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    var singleRoll = utils.dieRoll();\r\n\r\n                    var combatant = JSON.parse(JSON.stringify(monster));\r\n                    combatant.id = utils.guid();\r\n\r\n                    combatant.displayName = null;\r\n                    if (this.state.modal.combat.monsterNames) {\r\n                        var slotNames = this.state.modal.combat.monsterNames.find(names => names.id === slot.id);\r\n                        if (slotNames) {\r\n                            combatant.displayName = slotNames.names[n];\r\n                        }\r\n                    }\r\n\r\n                    switch (this.state.modal.combat.encounterInitMode) {\r\n                        case \"manual\":\r\n                            combatant.initiative = 10;\r\n                            break;\r\n                        case \"group\":\r\n                            combatant.initiative = init + groupRoll;\r\n                            break;\r\n                        case \"individual\":\r\n                            combatant.initiative = init + singleRoll;\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n\r\n                    combatant.current = false;\r\n                    combatant.pending = (this.state.modal.combat.encounterInitMode === \"manual\");\r\n                    combatant.active = (this.state.modal.combat.encounterInitMode !== \"manual\");\r\n                    combatant.defeated = false;\r\n        \r\n                    combatant.hp = combatant.hpMax;\r\n                    combatant.conditions = [];\r\n                    combat.combatants.push(combatant);\r\n                }\r\n            } else {\r\n                combat.issues.push(\"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName);\r\n            }\r\n        });\r\n\r\n        combat.combatants.forEach(c => c.altitude = 0);\r\n\r\n        this.sortCombatants(combat);\r\n\r\n        if (this.state.modal.combat.folioID && this.state.modal.combat.mapID) {\r\n            var folio = this.getMapFolio(this.state.modal.combat.folioID);\r\n            var map = folio.maps.find(m => m.id === this.state.modal.combat.mapID);\r\n            combat.map = JSON.parse(JSON.stringify(map));\r\n        }\r\n\r\n        this.setState({\r\n            combats: [].concat(this.state.combats, [combat]),\r\n            selectedCombatID: combat.id,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    openWaveModal() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var encounter = this.getEncounter(combat.encounterID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"combat-wave\",\r\n                combat: {\r\n                    encounterID: combat.encounterID,\r\n                    encounterInitMode: \"group\",\r\n                    waveID: null,\r\n                    monsterNames: utils.getMonsterNames(encounter)\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    pauseCombat() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        combat.timestamp = new Date().toLocaleString();\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    resumeCombat(combat) {\r\n        this.setState({\r\n            selectedCombatID: combat.id\r\n        });\r\n    }\r\n\r\n    endCombat() {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = this.state.combats.indexOf(combat);\r\n        this.state.combats.splice(index, 1);\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    makeCurrent(combatant, newRound) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        // Handle start-of-turn conditions\r\n        combat.combatants.filter(actor => actor.conditions).forEach(actor => {\r\n            actor.conditions.filter(c => c.duration !== null)\r\n                .forEach(c => {\r\n                    switch (c.duration.type) {\r\n                        case \"saves\":\r\n                            // If it's my condition, and point is START, notify the user\r\n                            if ((actor.id === combatant.id) && (c.duration.point === \"start\")) {\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-save\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"combatant\":\r\n                            // If this refers to me, and point is START, remove it\r\n                            if ((c.duration.combatantID === combatant.id) && (c.duration.point === \"start\")) {\r\n                                var index = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(index, 1);\r\n                                // Notify the user\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-end\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        case \"rounds\":\r\n                            // If it's my condition, decrement the condition\r\n                            if (actor.id === combatant.id) {\r\n                                c.duration.count -= 1;\r\n                            }\r\n                            // If it's now at 0, remove it\r\n                            if (c.duration.count === 0) {\r\n                                var n = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(n, 1);\r\n                                // Notify the user\r\n                                combat.notifications.push({\r\n                                    id: utils.guid(),\r\n                                    type: \"condition-end\",\r\n                                    condition: c,\r\n                                    combatant: combatant\r\n                                });\r\n                            }\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n                });\r\n        });\r\n\r\n        combat.combatants.forEach(combatant => {\r\n            combatant.current = false;\r\n        });\r\n        if (combatant) {\r\n            combatant.current = true;\r\n        }\r\n\r\n        if (newRound) {\r\n            combat.round += 1;\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    makeActive(combatant) {\r\n        combatant.pending = false;\r\n        combatant.active = true;\r\n        combatant.defeated = false;\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        this.sortCombatants(combat);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    makeDefeated(combatant) {\r\n        combatant.pending = false;\r\n        combatant.active = false;\r\n        combatant.defeated = true;\r\n\r\n        if (combatant.current) {\r\n            this.endTurn(combatant);\r\n        } else {\r\n            this.setState({\r\n                combats: this.state.combats\r\n            });\r\n        }\r\n    }\r\n\r\n    addWaveToCombat() {\r\n        var encounter = this.getEncounter(this.state.modal.combat.encounterID);\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var wave = encounter.waves.find(w => w.id === this.state.modal.combat.waveID);\r\n\r\n        wave.slots.forEach(slot => {\r\n            var group = this.getMonsterGroupByName(slot.monsterGroupName);\r\n            var monster = this.getMonster(slot.monsterName, group);\r\n\r\n            if (monster) {\r\n                var init = parseInt(utils.modifier(monster.abilityScores.dex));\r\n                var groupRoll = utils.dieRoll();\r\n\r\n                for (var n = 0; n !== slot.count; ++n) {\r\n                    var singleRoll = utils.dieRoll();\r\n\r\n                    var combatant = JSON.parse(JSON.stringify(monster));\r\n                    combatant.id = utils.guid();\r\n\r\n                    combatant.displayName = null;\r\n                    if (this.state.modal.combat.monsterNames) {\r\n                        var slotNames = this.state.modal.combat.monsterNames.find(names => names.id === slot.id);\r\n                        if (slotNames) {\r\n                            combatant.displayName = slotNames.names[n];\r\n                        }\r\n                    }\r\n\r\n                    switch (this.state.modal.combat.encounterInitMode) {\r\n                        case \"manual\":\r\n                            combatant.initiative = 10;\r\n                            break;\r\n                        case \"group\":\r\n                            combatant.initiative = init + groupRoll;\r\n                            break;\r\n                        case \"individual\":\r\n                            combatant.initiative = init + singleRoll;\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n\r\n                    combatant.current = false;\r\n                    combatant.pending = (this.state.modal.combat.encounterInitMode === \"manual\");\r\n                    combatant.active = (this.state.modal.combat.encounterInitMode !== \"manual\");\r\n                    combatant.defeated = false;\r\n        \r\n                    combatant.hp = combatant.hpMax;\r\n                    combatant.conditions = [];\r\n                    combat.combatants.push(combatant);\r\n                }\r\n            } else {\r\n                combat.issues.push(\"unknown monster: \" + slot.monsterName + \" in group \" + slot.monsterGroupName);\r\n            }\r\n        });\r\n\r\n        this.sortCombatants(combat);\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeCombatant(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = combat.combatants.indexOf(combatant);\r\n        combat.combatants.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapAdd(combatant, x, y) {\r\n        var item = factory.createMapItem();\r\n        item.id = combatant.id;\r\n        item.type = combatant.type;\r\n        item.x = x;\r\n        item.y = y;\r\n        var size = 1;\r\n        if (combatant.type === 'monster') {\r\n            size = utils.miniSize(combatant.size);\r\n        }\r\n        item.height = size;\r\n        item.width = size;\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        combat.map.items.push(item);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapMove(combatant, dir) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var item = combat.map.items.find(i => i.id === combatant.id);\r\n        switch (dir) {\r\n            case 'N':\r\n                item.y -= 1;\r\n                break;\r\n            case 'NE':\r\n                item.x += 1;\r\n                item.y -= 1;\r\n                break;\r\n            case 'E':\r\n                item.x += 1;\r\n                break;\r\n            case 'SE':\r\n                item.x += 1;\r\n                item.y += 1;\r\n                break;\r\n            case 'S':\r\n                item.y += 1;\r\n                break;\r\n            case 'SW':\r\n                item.x -= 1;\r\n                item.y += 1;\r\n                break;\r\n            case 'W':\r\n                item.x -= 1;\r\n                break;\r\n            case 'NW':\r\n                item.x -= 1;\r\n                item.y -= 1;\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    mapRemove(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var item = combat.map.items.find(i => i.id === combatant.id);\r\n        var index = combat.map.items.indexOf(item);\r\n        combat.map.items.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    endTurn(combatant) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        // Handle end-of-turn conditions\r\n        combat.combatants.filter(actor => actor.conditions).forEach(actor => {\r\n            actor.conditions.filter(c => c.duration !== null)\r\n                .forEach(c => {\r\n                    switch (c.duration.type) {\r\n                        case \"saves\":\r\n                            // If it's my condition, and point is END, notify the user\r\n                            if ((actor.id === combatant.id) && (c.duration.point === \"end\")) {\r\n                                var saveNotification = factory.createNotification();\r\n                                saveNotification.type = \"condition-save\";\r\n                                saveNotification.condition = c;\r\n                                saveNotification.combatant = combatant;\r\n                                combat.notifications.push(saveNotification);\r\n                            }\r\n                            break;\r\n                        case \"combatant\":\r\n                            // If this refers to me, and point is END, remove it\r\n                            if ((c.duration.combatantID === combatant.id) && (c.duration.point === \"end\")) {\r\n                                var index = actor.conditions.indexOf(c);\r\n                                actor.conditions.splice(index, 1);\r\n                                // Notify the user\r\n                                var endNotification = factory.createNotification();\r\n                                endNotification.type = \"condition-end\";\r\n                                endNotification.condition = c;\r\n                                endNotification.combatant = combatant;\r\n                                combat.notifications.push(endNotification);\r\n                            }\r\n                            break;\r\n                        case \"rounds\":\r\n                            // We check this at the beginning of each turn, not at the end\r\n                            break;\r\n                        default:\r\n                            // Do nothing\r\n                            break;\r\n                    }\r\n                });\r\n        });\r\n\r\n        var active = combat.combatants.filter(combatant => {\r\n            return combatant.current || (!combatant.pending && combatant.active && !combatant.defeated);\r\n        });\r\n        if (active.length === 0) {\r\n            // There's no-one left in the fight\r\n            this.makeCurrent(null, false);\r\n        } else if ((active.length === 1) && (active[0].defeated)) {\r\n            // The only person in the fight is me, and I'm defeated\r\n            this.makeCurrent(null, false);\r\n        } else {\r\n            var index = active.indexOf(combatant) + 1;\r\n            var newRound = false;\r\n            if (index >= active.length) {\r\n                index = 0;\r\n                newRound = true;\r\n            }\r\n            this.makeCurrent(active[index], newRound);\r\n        }\r\n    }\r\n\r\n    changeHP(combatant, hp, temp) {\r\n        combatant.hp = hp;\r\n        combatant.hpTemp = temp;\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    addCondition(combatant) {\r\n        var condition = factory.createCondition();\r\n        condition.name = \"blinded\";\r\n\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"condition-add\",\r\n                condition: condition,\r\n                combatant: combatant,\r\n                combat: combat\r\n            }\r\n        });\r\n    }\r\n\r\n    addConditionFromModal() {\r\n        this.state.modal.combatant.conditions.push(this.state.modal.condition);\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    editCondition(combatant, condition) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n\r\n        this.setState({\r\n            modal: {\r\n                type: \"condition-edit\",\r\n                condition: condition,\r\n                combatant: combatant,\r\n                combat: combat\r\n            }\r\n        });\r\n    }\r\n\r\n    editConditionFromModal() {\r\n        var original = this.state.modal.combatant.conditions.find(c => c.id === this.state.modal.condition.id);\r\n        var index = this.state.modal.combatant.conditions.indexOf(original);\r\n        // eslint-disable-next-line\r\n        this.state.modal.combatant.conditions[index] = this.state.modal.condition;\r\n\r\n        this.setState({\r\n            combats: this.state.combats,\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    removeCondition(combatant, conditionID) {\r\n        var condition = combatant.conditions.find(c => c.id === conditionID);\r\n        var index = combatant.conditions.indexOf(condition);\r\n        combatant.conditions.splice(index, 1);\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    sortCombatants(combat) {\r\n        combat.combatants.sort((a, b) => {\r\n            // First sort by initiative, descending\r\n            if (a.initiative < b.initiative) return 1;\r\n            if (a.initiative > b.initiative) return -1;\r\n            // Then sort by name, ascending\r\n            if (a.name < b.name) return -1;\r\n            if (a.name > b.name) return 1;\r\n            return 0;\r\n        });\r\n    }\r\n\r\n    closeNotification(notification, removeCondition) {\r\n        var combat = this.getCombat(this.state.selectedCombatID);\r\n        var index = combat.notifications.indexOf(notification);\r\n        combat.notifications.splice(index, 1);\r\n\r\n        if (removeCondition) {\r\n            var conditionIndex = notification.combatant.conditions.indexOf(notification.condition);\r\n            notification.combatant.conditions.splice(conditionIndex, 1);\r\n        }\r\n\r\n        this.setState({\r\n            combats: this.state.combats\r\n        });\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    setView(view) {\r\n        this.setState({\r\n            view: view\r\n        });\r\n    }\r\n\r\n    openAbout() {\r\n        this.setState({\r\n            modal: {\r\n                type: \"about\"\r\n            }\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            modal: null\r\n        });\r\n    }\r\n\r\n    selectParty(party) {\r\n        this.setState({\r\n            selectedPartyID: party ? party.id : null\r\n        });\r\n    }\r\n\r\n    selectMonsterGroup(group) {\r\n        this.setState({\r\n            selectedMonsterGroupID: group ? group.id : null\r\n        });\r\n    }\r\n\r\n    selectEncounter(encounter) {\r\n        this.setState({\r\n            selectedEncounterID: encounter ? encounter.id : null\r\n        });\r\n    }\r\n\r\n    selectMapFolio(mapFolio) {\r\n        this.setState({\r\n            selectedMapFolioID: mapFolio ? mapFolio.id : null\r\n        });\r\n    }\r\n\r\n    getParty(id) {\r\n        var result = null;\r\n        this.state.parties.forEach(party => {\r\n            if (party.id === id) {\r\n                result = party;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMonsterGroup(id) {\r\n        var result = null;\r\n        this.state.library.forEach(group => {\r\n            if (group.id === id) {\r\n                result = group;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getEncounter(id) {\r\n        var result = null;\r\n        this.state.encounters.forEach(encounter => {\r\n            if (encounter.id === id) {\r\n                result = encounter;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMapFolio(id) {\r\n        var result = null;\r\n        this.state.mapFolios.forEach(folio => {\r\n            if (folio.id === id) {\r\n                result = folio;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getCombat(id) {\r\n        var result = null;\r\n        this.state.combats.forEach(combat => {\r\n            if (combat.id === id) {\r\n                result = combat;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMonsterGroupByName(groupName) {\r\n        var result = null;\r\n\r\n        this.state.library.forEach(group => {\r\n            if (group.name === groupName) {\r\n                result = group;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMonster(monsterName, monsterGroup) {\r\n        var result = null;\r\n\r\n        if (monsterGroup && monsterGroup.monsters) {\r\n            monsterGroup.monsters.forEach(monster => {\r\n                if (monster.name === monsterName) {\r\n                    result = monster;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    findMonster(monster) {\r\n        var result = null;\r\n        this.state.library.forEach(group => {\r\n            if (group.monsters.indexOf(monster) !== -1) {\r\n                result = group;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    resetAll() {\r\n        this.setState({\r\n            parties: [],\r\n            selectedPartyID: null,\r\n            library: [],\r\n            selectedMonsterGroupID: null,\r\n            encounters: [],\r\n            selectedEncounterID: null,\r\n            mapFolios: [],\r\n            selectedMapFolioID: null,\r\n            combats: [],\r\n            selectedCombatID: null\r\n        });\r\n    }\r\n\r\n    changeValue(combatant, type, value) {\r\n        switch (type) {\r\n            case \"hp\":\r\n                value = Math.min(value, combatant.hpMax);\r\n                value = Math.max(value, 0);\r\n                break;\r\n            case \"hpTemp\":\r\n                value = Math.max(value, 0);\r\n                break;\r\n            case \"level\":\r\n                value = Math.max(value, 1);\r\n                if (combatant.player !== undefined) {\r\n                    value = Math.min(value, 20)\r\n                } else {\r\n                    value = Math.min(value, 6);\r\n                }\r\n                break;\r\n            case \"count\":\r\n                value = Math.max(value, 1);\r\n                break;\r\n            case \"hitDice\":\r\n                value = Math.max(value, 1);\r\n                break;\r\n            default:\r\n                // Do nothing\r\n                break;\r\n        }\r\n\r\n        var tokens = type.split(\".\");\r\n        var obj = combatant;\r\n        for (var n = 0; n !== tokens.length; ++n) {\r\n            var token = tokens[n];\r\n            if (n === tokens.length - 1) {\r\n                obj[token] = value;\r\n            } else {\r\n                obj = obj[token];\r\n            }\r\n        }\r\n\r\n        utils.sort(this.state.parties);\r\n        utils.sort(this.state.library);\r\n        utils.sort(this.state.encounters);\r\n\r\n        this.setState({\r\n            parties: this.state.parties,\r\n            library: this.state.library,\r\n            encounters: this.state.encounters,\r\n            combats: this.state.combats,\r\n            selectedPartyID: this.state.selectedPartyID,\r\n            selectedMonsterGroupID: this.state.selectedMonsterGroupID,\r\n            selectedEncounterID: this.state.selectedEncounterID,\r\n            selectedCombatID: this.state.selectedCombatID,\r\n            options: this.state.options,\r\n            modal: this.state.modal\r\n        });\r\n    }\r\n\r\n    nudgeValue(combatant, type, delta) {\r\n        var tokens = type.split(\".\");\r\n        var obj = combatant;\r\n        for (var n = 0; n !== tokens.length; ++n) {\r\n            var token = tokens[n];\r\n            if (n === tokens.length - 1) {\r\n                var value = null;\r\n                if (token === \"challenge\") {\r\n                    value = utils.nudgeChallenge(obj.challenge, delta);\r\n                } else {\r\n                    value = obj[token] + delta;\r\n                }\r\n                this.changeValue(combatant, type, value);\r\n            } else {\r\n                obj = obj[token];\r\n            }\r\n        }\r\n    }\r\n\r\n    /////////////////////////////////////////////////////////////////////////////\r\n\r\n    render() {\r\n        try {\r\n            var content = null;\r\n            var actions = null;\r\n            switch (this.state.view) {\r\n                case \"home\":\r\n                    content = (\r\n                        <HomeScreen\r\n                            library={this.state.library}\r\n                            addOpenGameContent={() => this.addOpenGameContent()}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"parties\":\r\n                    content = (\r\n                        <PartiesScreen\r\n                            parties={this.state.parties}\r\n                            selection={this.getParty(this.state.selectedPartyID)}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectParty={party => this.selectParty(party)}\r\n                            addParty={name => this.addParty(name)}\r\n                            removeParty={() => this.removeParty()}\r\n                            addPC={name => this.addPC(name)}\r\n                            removePC={pc => this.removePC(pc)}\r\n                            sortPCs={() => this.sortPCs()}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"library\":\r\n                    content = (\r\n                        <MonsterLibraryScreen\r\n                            library={this.state.library}\r\n                            selection={this.getMonsterGroup(this.state.selectedMonsterGroupID)}\r\n                            filter={this.state.libraryFilter}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectMonsterGroup={group => this.selectMonsterGroup(group)}\r\n                            addMonsterGroup={name => this.addMonsterGroup(name)}\r\n                            removeMonsterGroup={() => this.removeMonsterGroup()}\r\n                            addMonster={name => this.addMonster(name)}\r\n                            removeMonster={monster => this.removeMonster(monster)}\r\n                            sortMonsters={() => this.sortMonsters()}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                            editMonster={combatant => this.editMonster(combatant)}\r\n                            cloneMonster={(combatant, name) => this.cloneMonster(combatant, name)}\r\n                            moveToGroup={(combatant, groupID) => this.moveToGroup(combatant, groupID)}\r\n                            addOpenGameContent={() => this.addOpenGameContent()}\r\n                        />\r\n                    );\r\n                    var count = 0;\r\n                    this.state.library.forEach(group => {\r\n                        count += group.monsters.length;\r\n                    });\r\n                    if (count > 0) {\r\n                        actions = (\r\n                            <div className=\"actions\">\r\n                                <div className=\"section\">\r\n                                    <input type=\"text\" placeholder=\"filter\" value={this.state.libraryFilter} onChange={event => this.changeValue(this.state, \"libraryFilter\", event.target.value)} />\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.openDemographics()}>demographics</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    break;\r\n                case \"encounter\":\r\n                    content = (\r\n                        <EncounterBuilderScreen\r\n                            encounters={this.state.encounters}\r\n                            selection={this.getEncounter(this.state.selectedEncounterID)}\r\n                            parties={this.state.parties}\r\n                            library={this.state.library}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectEncounter={encounter => this.selectEncounter(encounter)}\r\n                            addEncounter={name => this.addEncounter(name)}\r\n                            removeEncounter={encounter => this.removeEncounter(encounter)}\r\n                            addWave={() => this.addWaveToEncounter()}\r\n                            removeWave={wave => this.removeWave(wave)}\r\n                            getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                            addEncounterSlot={(monster, waveID) => this.addEncounterSlot(monster, waveID)}\r\n                            removeEncounterSlot={(slot, waveID) => this.removeEncounterSlot(slot, waveID)}\r\n                            nudgeValue={(slot, type, delta) => this.nudgeValue(slot, type, delta)}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"maps\":\r\n                    content = (\r\n                        <MapFoliosScreen\r\n                            mapFolios={this.state.mapFolios}\r\n                            selection={this.getMapFolio(this.state.selectedMapFolioID)}\r\n                            showHelp={this.state.options.showHelp}\r\n                            selectMapFolio={folio => this.selectMapFolio(folio)}\r\n                            addMapFolio={name => this.addMapFolio(name)}\r\n                            removeMapFolio={() => this.removeMapFolio()}\r\n                            addMap={name => this.addMap(name)}\r\n                            editMap={map => this.editMap(map)}\r\n                            removeMap={map => this.removeMap(map)}\r\n                            nudgeValue={(source, type, delta) => this.nudgeValue(source, type, delta)}\r\n                            changeValue={(source, type, value) => this.changeValue(source, type, value)}\r\n                        />\r\n                    );\r\n                    break;\r\n                case \"combat\":\r\n                    var combat = this.getCombat(this.state.selectedCombatID);\r\n                    content = (\r\n                        <CombatManagerScreen\r\n                            parties={this.state.parties}\r\n                            encounters={this.state.encounters}\r\n                            combats={this.state.combats}\r\n                            combat={combat}\r\n                            showHelp={this.state.options.showHelp}\r\n                            createCombat={() => this.createCombat()}\r\n                            resumeEncounter={combat => this.resumeCombat(combat)}\r\n                            nudgeValue={(combatant, type, delta) => this.nudgeValue(combatant, type, delta)}\r\n                            changeValue={(combatant, type, value) => this.changeValue(combatant, type, value)}\r\n                            makeCurrent={(combatant) => this.makeCurrent(combatant)}\r\n                            makeActive={(combatant) => this.makeActive(combatant)}\r\n                            makeDefeated={(combatant) => this.makeDefeated(combatant)}\r\n                            removeCombatant={(combatant) => this.removeCombatant(combatant)}\r\n                            addCondition={(combatant) => this.addCondition(combatant)}\r\n                            editCondition={(combatant, condition) => this.editCondition(combatant, condition)}\r\n                            removeCondition={(combatant, conditionID) => this.removeCondition(combatant, conditionID)}\r\n                            mapAdd={(combatant, x, y) => this.mapAdd(combatant, x, y)}\r\n                            mapMove={(combatant, dir) => this.mapMove(combatant, dir)}\r\n                            mapRemove={combatant => this.mapRemove(combatant)}\r\n                            endTurn={(combatant) => this.endTurn(combatant)}\r\n                            changeHP={(combatant, hp, temp) => this.changeHP(combatant, hp, temp)}\r\n                            close={(notification, removeCondition) => this.closeNotification(notification, removeCondition)}\r\n                        />\r\n                    );\r\n                    if (combat) {\r\n                        var xp = 0;\r\n                        combat.combatants.filter(c => c.type === \"monster\")\r\n                            .forEach(combatant => {\r\n                                xp += utils.experience(combatant.challenge);\r\n                            });\r\n                        \r\n                        var encounter = this.getEncounter(combat.encounterID);\r\n\r\n                        actions = (\r\n                            <div className=\"actions\">\r\n                                <div className=\"section\">\r\n                                    <div className=\"text\">round: {combat.round}</div>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <div className=\"text\">xp: {xp}</div>\r\n                                </div>\r\n                                <div className=\"section\" style={{ display: encounter.waves.length === 0 ? \"none\" : \"\"}}>\r\n                                    <button onClick={() => this.openWaveModal()}>add wave</button>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.pauseCombat()}>pause encounter</button>\r\n                                </div>\r\n                                <div className=\"section\">\r\n                                    <button onClick={() => this.endCombat()}>end encounter</button>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    break;\r\n                default:\r\n                    // Do nothing\r\n                    break;\r\n            }\r\n\r\n            var modal = null;\r\n            if (this.state.modal) {\r\n                var modalTitle = null;\r\n                var modalContent = null;\r\n                var modalAllowClose = true;\r\n                var modalAllowScroll = true;\r\n                var modalButtons = {\r\n                    left: [],\r\n                    right: []\r\n                };\r\n\r\n                switch (this.state.modal.type) {\r\n                    case \"about\":\r\n                        modalContent = (\r\n                            <AboutModal\r\n                                options={this.state.options}\r\n                                resetAll={() => this.resetAll()}\r\n                                changeValue={(source, type, value) => this.changeValue(source, type, value)}\r\n                            />\r\n                        );\r\n                        break;\r\n                    case \"demographics\":\r\n                        modalTitle = \"demographics\";\r\n                        modalContent = (\r\n                            <DemographicsModal\r\n                                library={this.state.library}\r\n                            />\r\n                        );\r\n                        break;\r\n                    case \"monster\":\r\n                        modalTitle = \"monster editor\";\r\n                        modalContent = (\r\n                            <MonsterEditorModal\r\n                                monster={this.state.modal.monster}\r\n                                library={this.state.library}\r\n                                showMonsters={this.state.modal.showMonsters}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.left = [\r\n                            <Checkbox\r\n                                key=\"similar\"\r\n                                label=\"similar monsters\"\r\n                                checked={this.state.modal.showMonsters}\r\n                                changeValue={() => this.toggleShowSimilarMonsters()}\r\n                            /> \r\n                        ];\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.saveMonster()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"map\":\r\n                        modalTitle = \"map editor\";\r\n                        modalContent = (\r\n                            <MapEditorModal\r\n                                map={this.state.modal.map}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.saveMap()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"combat-start\":\r\n                        modalTitle = \"start a new encounter\";\r\n                        modalContent = (\r\n                            <CombatStartModal\r\n                                combat={this.state.modal.combat}\r\n                                parties={this.state.parties}\r\n                                encounters={this.state.encounters}\r\n                                mapFolios={this.state.mapFolios}\r\n                                getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                                notify={() => this.setState({modal: this.state.modal})}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"start encounter\" className={this.state.modal.combat.partyID && this.state.modal.combat.encounterID ? \"\" : \"disabled\"} onClick={() => this.startCombat()}>start encounter</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"combat-wave\":\r\n                        modalTitle = \"encounter waves\";\r\n                        modalContent = (\r\n                            <CombatStartModal\r\n                                combat={this.state.modal.combat}\r\n                                encounters={this.state.encounters}\r\n                                getMonster={(monsterName, monsterGroupName) => this.getMonster(monsterName, this.getMonsterGroupByName(monsterGroupName))}\r\n                                notify={() => this.setState({modal: this.state.modal})}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"add wave\" className={this.state.modal.combat.waveID !== null ? \"\" : \"disabled\"} onClick={() => this.addWaveToCombat()}>add wave</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"condition-add\":\r\n                        modalTitle = \"add a condition\";\r\n                        modalContent = (\r\n                            <ConditionModal\r\n                                condition={this.state.modal.condition}\r\n                                combatant={this.state.modal.combatant}\r\n                                combat={this.state.modal.combat}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalAllowScroll = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"add\" onClick={() => this.addConditionFromModal()}>add</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    case \"condition-edit\":\r\n                        modalTitle = \"edit condition\";\r\n                        modalContent = (\r\n                            <ConditionModal\r\n                                condition={this.state.modal.condition}\r\n                                combatant={this.state.modal.combatant}\r\n                                combat={this.state.modal.combat}\r\n                            />\r\n                        );\r\n                        modalAllowClose = false;\r\n                        modalButtons.right = [\r\n                            <button key=\"save\" onClick={() => this.editConditionFromModal()}>save</button>,\r\n                            <button key=\"cancel\" onClick={() => this.closeModal()}>cancel</button>\r\n                        ];\r\n                        break;\r\n                    default:\r\n                        // Do nothing\r\n                        break;\r\n                }\r\n\r\n                modal = (\r\n                    <div className=\"overlay\">\r\n                        <div className=\"modal\">\r\n                            <div className=\"modal-header\">\r\n                                <div className=\"title\">{modalTitle}</div>\r\n                                {modalAllowClose ? <img className=\"image\" src={close} alt=\"close\" onClick={() => this.closeModal()} /> : null}\r\n                            </div>\r\n                            <div className={modalAllowScroll ? \"modal-content scrollable\" : \"modal-content\"}>\r\n                                {modalContent}\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <div className=\"left\">{modalButtons.left}</div>\r\n                                <div className=\"right\">{modalButtons.right}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div className=\"dojo\">\r\n                    <Titlebar\r\n                        actions={actions}\r\n                        blur={modal !== null}\r\n                        openHome={() => this.setView(\"home\")}\r\n                        openAbout={() => this.openAbout()}\r\n                    />\r\n                    <div className={(modal === null) ? \"page-content\" : \"page-content blur\"}>\r\n                        {content}\r\n                    </div>\r\n                    <Navbar\r\n                        view={this.state.view}\r\n                        parties={this.state.parties}\r\n                        library={this.state.library}\r\n                        encounters={this.state.encounters}\r\n                        blur={modal !== null}\r\n                        setView={view => this.setView(view)}\r\n                    />\r\n                    {modal}\r\n                </div>\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/css/foundation.css';\r\nimport './style/scss/app.scss';\r\nimport './style/scss/controls.scss';\r\n\r\nimport Dojo from './components/dojo';\r\n\r\nReactDOM.render(<Dojo />, document.getElementById('root'));\r\n"],"sourceRoot":""}